[{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://insightsengineering.github.io/teal/main/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others‚Äô private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://insightsengineering.github.io/teal/main/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://insightsengineering.github.io/teal/main/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://insightsengineering.github.io/teal/main/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://insightsengineering.github.io/teal/main/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://insightsengineering.github.io/teal/main/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://insightsengineering.github.io/teal/main/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://insightsengineering.github.io/teal/main/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://insightsengineering.github.io/teal/main/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://insightsengineering.github.io/teal/main/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla‚Äôs code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://insightsengineering.github.io/teal/main/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contribution Guidelines","title":"Contribution Guidelines","text":"üôè Thank taking time contribute! input deeply valued, whether issue, pull request, even feedback, regardless size, content scope.","code":""},{"path":"https://insightsengineering.github.io/teal/main/CONTRIBUTING.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of contents","title":"Contribution Guidelines","text":"üë∂ Getting started üìî Code Conduct üóÉ License üìú Issues üö© Pull requests üíª Coding guidelines üèÜ Recognition model ‚ùì Questions","code":""},{"path":"https://insightsengineering.github.io/teal/main/CONTRIBUTING.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Contribution Guidelines","text":"Please refer project documentation brief introduction. Please also see articles within project documentation additional information.","code":""},{"path":"https://insightsengineering.github.io/teal/main/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contribution Guidelines","text":"Code Conduct governs project. Participants contributors expected follow rules outlined therein.","code":""},{"path":"https://insightsengineering.github.io/teal/main/CONTRIBUTING.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Contribution Guidelines","text":"contributions covered project‚Äôs license.","code":""},{"path":"https://insightsengineering.github.io/teal/main/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contribution Guidelines","text":"use GitHub track issues, feature requests, bugs. submitting new issue, please check issue already reported. issue already exists, please upvote existing issue üëç. new feature requests, please elaborate context benefit feature users, developers, relevant personas.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/CONTRIBUTING.html","id":"github-flow","dir":"","previous_headings":"Pull requests","what":"GitHub Flow","title":"Contribution Guidelines","text":"repository uses GitHub Flow model collaboration. submit pull request: Create branch Please see branch naming convention . don‚Äôt write access repository, please fork . Make changes Make sure code passes checks imposed GitHub Actions well documented well tested unit tests sufficiently covering changes introduced Create pull request (PR) pull request description, please link relevant issue (), provide detailed description change, include assumptions. Address review comments, Post approval Merge PR write access. Otherwise, reviewer merge PR behalf. Pat back Congratulations! üéâ now official contributor project! grateful contribution.","code":""},{"path":"https://insightsengineering.github.io/teal/main/CONTRIBUTING.html","id":"branch-naming-convention","dir":"","previous_headings":"Pull requests","what":"Branch naming convention","title":"Contribution Guidelines","text":"Suppose changes related current issue current project; please name branch follows: <issue_id>_<short_description>. Please use underscore (_) delimiter word separation. example, 420_fix_ui_bug suitable branch name change resolving UI-related bug reported issue number 420 current project. change affects multiple repositories, please name branches follows: <issue_id>_<issue_repo>_<short description>. example, 69_awesomeproject_fix_spelling_error reference issue 69 reported project awesomeproject aims resolve one spelling errors multiple (likely related) repositories.","code":""},{"path":"https://insightsengineering.github.io/teal/main/CONTRIBUTING.html","id":"monorepo-and-stageddependencies","dir":"","previous_headings":"Pull requests","what":"monorepo and staged.dependencies","title":"Contribution Guidelines","text":"Sometimes might need change upstream dependent package(s) able submit meaningful change. using staged.dependencies functionality simulate monorepo behavior. dependency configuration already specified project‚Äôs staged_dependencies.yaml file. need name feature branches appropriately. exception branch naming convention described . Please refer staged.dependencies package documentation details.","code":""},{"path":"https://insightsengineering.github.io/teal/main/CONTRIBUTING.html","id":"coding-guidelines","dir":"","previous_headings":"","what":"Coding guidelines","title":"Contribution Guidelines","text":"repository follows unified processes standards adopted maintainers ensure software development carried consistently within teams cohesively across repositories.","code":""},{"path":"https://insightsengineering.github.io/teal/main/CONTRIBUTING.html","id":"style-guide","dir":"","previous_headings":"Coding guidelines","what":"Style guide","title":"Contribution Guidelines","text":"repository follows standard tidyverse style guide uses lintr lint checks. Customized lint configurations available repository‚Äôs .lintr file.","code":""},{"path":"https://insightsengineering.github.io/teal/main/CONTRIBUTING.html","id":"dependency-management","dir":"","previous_headings":"Coding guidelines","what":"Dependency management","title":"Contribution Guidelines","text":"Lightweight right weight. repository follows tinyverse recommedations limiting dependencies minimum.","code":""},{"path":"https://insightsengineering.github.io/teal/main/CONTRIBUTING.html","id":"dependency-version-management","dir":"","previous_headings":"Coding guidelines","what":"Dependency version management","title":"Contribution Guidelines","text":"code compatible (!) historical versions given dependenct package, required specify minimal version DESCRIPTION file. particular: development version requires (imports) development version another package - required put abc (>= 1.2.3.9000).","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/CONTRIBUTING.html","id":"r--package-versions","dir":"","previous_headings":"Coding guidelines > Recommended development environment & tools","what":"R & package versions","title":"Contribution Guidelines","text":"continuously test packages newest R version along recent dependencies CRAN BioConductor. recommend working environment also set way. can find details R version packages used R CMD check GitHub Action execution log - step prints R sessionInfo(). discover bugs older R versions older set dependencies, please create relevant bug reports.","code":""},{"path":"https://insightsengineering.github.io/teal/main/CONTRIBUTING.html","id":"pre-commit","dir":"","previous_headings":"Coding guidelines > Recommended development environment & tools","what":"pre-commit","title":"Contribution Guidelines","text":"highly recommend use pre-commit tool combined R hooks pre-commit execute checks committing pushing changes. Pre-commit hooks already available repository‚Äôs .pre-commit-config.yaml file.","code":""},{"path":"https://insightsengineering.github.io/teal/main/CONTRIBUTING.html","id":"recognition-model","dir":"","previous_headings":"","what":"Recognition model","title":"Contribution Guidelines","text":"mentioned previously, contributions deeply valued appreciated. contribution data available part repository insights, recognize significant contribution hence add contributor package authors list, following rules enforced: Minimum 5% lines code authored* (determined git blame query) top 5 contributors terms number commits lines added lines removed* *Excluding auto-generated code, including limited roxygen comments renv.lock files. package maintainer also reserves right adjust criteria recognize contributions.","code":""},{"path":"https://insightsengineering.github.io/teal/main/CONTRIBUTING.html","id":"questions","dir":"","previous_headings":"","what":"Questions","title":"Contribution Guidelines","text":"questions regarding contribution guidelines, please contact package/repository maintainer.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/SECURITY.html","id":"reporting-security-issues","dir":"","previous_headings":"","what":"Reporting Security Issues","title":"Security Policy","text":"believe found security vulnerability repositories organization, please report us coordinated disclosure. Please report security vulnerabilities public GitHub issues, discussions, pull requests. Instead, please send email vulnerability.management[@]roche.com. Please include much information listed can help us better understand resolve issue: type issue (e.g., buffer overflow, SQL injection, cross-site scripting) Full paths source file(s) related manifestation issue location affected source code (tag/branch/commit direct URL) special configuration required reproduce issue Step--step instructions reproduce issue Proof--concept exploit code (possible) Impact issue, including attacker might exploit issue information help us triage report quickly.","code":""},{"path":"https://insightsengineering.github.io/teal/main/SECURITY.html","id":"data-security-standards-dss","dir":"","previous_headings":"","what":"Data Security Standards (DSS)","title":"Security Policy","text":"Please make sure reporting issues form bug, feature, pull request, sensitive information PII, PHI, PCI completely removed text attachments, including pictures videos.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/adding-support-for-reporting.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Adding Support for Reporting to Custom Modules","text":"teal package offers integrated reporting feature utilizing teal.reporter package. comprehensive explanation reporting functionality , please refer documentation therein. article intended module developers aims provide guidance enhancing custom teal module automatic reporting feature. enhancement enables users incorporate snapshots module outputs report can reviewed another module automatically provided teal. Thus app user can interact report. responsibilities module developer include: Adding support reporting module. Specifying outputs constitute snapshot module. entire life cycle objects involved creating report configuring module preview report handled teal.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/adding-support-for-reporting.html","id":"custom-module","dir":"Articles","previous_headings":"","what":"Custom module","title":"Adding Support for Reporting to Custom Modules","text":"Let us consider example module, based example module teal: Using teal, can launch example module following:","code":"library(teal)  my_module <- function(label = \"example teal module\") {   module(     label = label,     server = function(id, data) {       assert_reactive(data)       checkmate::assert_class(isolate(data()), \"teal_data\")        moduleServer(id, function(input, output, session) {         updateSelectInput(session, \"dataname\", choices = isolate(names(data())))         output$dataset <- renderPrint({           req(input$dataname)           data()[[input$dataname]]         })       })     },     ui = function(id) {       ns <- NS(id)       sidebarLayout(         sidebarPanel(selectInput(ns(\"dataname\"), \"Choose a dataset\", choices = NULL)),         mainPanel(verbatimTextOutput(ns(\"dataset\")))       )     }   ) } app <- init(   data = teal_data(IRIS = iris, MTCARS = mtcars),   modules = my_module() )  if (interactive()) shinyApp(app$ui, app$server)"},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/articles/adding-support-for-reporting.html","id":"modify-the-declaration-of-the-server-function","dir":"Articles","previous_headings":"Add support for reporting","what":"Modify the declaration of the server function","title":"Adding Support for Reporting to Custom Modules","text":"first step add additional argument server function declaration - reporter. informs teal module requires reporter, included module called. See : modifications, module now ready launched teal: teal adds another tab application, titled Report previewer. However, visible change module operates appears user add content report module. requires inserting UI server elements teal.reporter module module body.","code":"my_module_with_reporting <- function(label = \"example teal module\") {   module(     label = label,     server = function(id, data, reporter) {       moduleServer(id, function(input, output, session) {         updateSelectInput(session, \"dataname\", choices = isolate(names(data())))         output$dataset <- renderPrint({           req(input$dataname)           data()[[input$dataname]]         })       })     },     ui = function(id) {       ns <- NS(id)       sidebarLayout(         sidebarPanel(selectInput(ns(\"dataname\"), \"Choose a dataset\", choices = NULL)),         mainPanel(verbatimTextOutput(ns(\"dataset\")))       )     }   ) } app <- init(   data = teal_data(IRIS = iris, MTCARS = mtcars),   modules = my_module_with_reporting() )  if (interactive()) shinyApp(app$ui, app$server)"},{"path":"https://insightsengineering.github.io/teal/main/articles/adding-support-for-reporting.html","id":"insert-teal-reporter-module","dir":"Articles","previous_headings":"Add support for reporting","what":"Insert teal.reporter module","title":"Adding Support for Reporting to Custom Modules","text":"UI server logic necessary adding cards my_module_with_reporting report provided teal.reporter::simple_reporter_ui teal.reporter::simple_reporter_srv. updated module now ready launched: new piece UI added, buttons clickable. user can now add card report view Report previewer module preview still empty since instructed module put card.","code":"my_module_with_reporting <- function(label = \"example teal module\") {   module(     label = label,     server = function(id, data, reporter) {       moduleServer(id, function(input, output, session) {         teal.reporter::simple_reporter_srv(           id = \"reporter\",           reporter = reporter,           card_fun = function(card) card         )         updateSelectInput(session, \"dataname\", choices = isolate(names(data())))         output$dataset <- renderPrint({           req(input$dataname)           data()[[input$dataname]]         })       })     },     ui = function(id) {       ns <- NS(id)       sidebarLayout(         sidebarPanel(           teal.reporter::simple_reporter_ui(ns(\"reporter\")),           selectInput(ns(\"dataname\"), \"Choose a dataset\", choices = NULL)         ),         mainPanel(verbatimTextOutput(ns(\"dataset\")))       )     }   ) } app <- init(   data = teal_data(IRIS = iris, MTCARS = mtcars),   modules = my_module_with_reporting() )  if (interactive()) shinyApp(app$ui, app$server)"},{"path":"https://insightsengineering.github.io/teal/main/articles/adding-support-for-reporting.html","id":"add-content-to-the-card","dir":"Articles","previous_headings":"Add support for reporting","what":"Add content to the card","title":"Adding Support for Reporting to Custom Modules","text":"add content card, utilize public API exposed TealReportCard class. teal.reporter::simple_reporter_srv module accepts card_fun argument determines appearance output custom module. ReportCard derivatives allow sequential addition content according order method calls. explore content, can use $get_content method. details, refer documentation TealReportCard teal.reporter::ReportCard. add simple text card modifying card_fun argument passed teal.reporter::simple_reporter_srv. function must return card object, otherwise errors may occur teal. Now, application user can see text added custom_function Report previewer module.","code":"custom_function <- function(card = teal.reporter::ReportCard$new()) {   card$append_text(\"This is content from a custom teal module!\")   card }  my_module_with_reporting <- function(label = \"example teal module\") {   module(     label = label,     server = function(id, data, reporter) {       moduleServer(id, function(input, output, session) {         teal.reporter::simple_reporter_srv(           id = \"reporter\",           reporter = reporter,           card_fun = custom_function         )         updateSelectInput(session, \"dataname\", choices = isolate(names(data())))         output$dataset <- renderPrint({           req(input$dataname)           data()[[input$dataname]]         })       })     },     ui = function(id) {       ns <- NS(id)       sidebarLayout(         sidebarPanel(           teal.reporter::simple_reporter_ui(ns(\"reporter\")),           selectInput(ns(\"dataname\"), \"Choose a dataset\", choices = NULL)         ),         mainPanel(verbatimTextOutput(ns(\"dataset\")))       )     }   ) } app <- init(   data = teal_data(IRIS = iris, MTCARS = mtcars),   modules = my_module_with_reporting() )  if (interactive()) shinyApp(app$ui, app$server)"},{"path":"https://insightsengineering.github.io/teal/main/articles/adding-support-for-reporting.html","id":"add-non-text-content-to-the-card","dir":"Articles","previous_headings":"Add support for reporting","what":"Add non-text content to the card","title":"Adding Support for Reporting to Custom Modules","text":"teal.reporter supports addition tables, charts, . information, explore API teal.reporter::ReportCard learn supported content types.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/adding-support-for-reporting.html","id":"tealreportcard","dir":"Articles","previous_headings":"Add support for reporting","what":"TealReportCard","title":"Adding Support for Reporting to Custom Modules","text":"teal exports TealReportCard class, extends teal.reporter::ReportCard class provides several convenient methods facilitate working teal features like filter panel source code. details, refer documentation TealReportCard. support TealReportCard, function passed teal.reporter::simple_reporter_srv must define default value card, shown : Without definition, API TealReportCard available within function.","code":"custom_function <- function(card = TealReportCard$new()) {   # ... some code ... #   card }"},{"path":"https://insightsengineering.github.io/teal/main/articles/adding-support-for-reporting.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Adding Support for Reporting to Custom Modules","text":"conclusion, demonstrated build standard teal app code reproducibility reporter functionalities. Note server function requires filter_panel_api argument filter panel state can added report. final example, incorporated teal.code snippets. teal.code R library offers utilities storing code associating execution environment. allows ReporterCard store code necessary generate table along table . learn teal.code see vignette qenv teal.code.","code":"library(teal) library(teal.reporter)  example_reporter_module <- function(label = \"Example\") {   module(     label = label,     server = function(id, data, reporter, filter_panel_api) {       with_filter <- !missing(filter_panel_api) && inherits(filter_panel_api, \"FilterPanelApi\")       moduleServer(id, function(input, output, session) {         updateSelectInput(session, \"dataname\", choices = isolate(names(data())))         dat <- reactive(data()[[input$dataname]])         observe({           req(dat())           updateSliderInput(session, \"nrow\", max = nrow(dat()), value = floor(nrow(dat()) / 5))         })          table_q <- reactive({           req(input$dataname)           req(input$nrow)           within(             data(),             result <- head(dataset, nrows),             dataset = as.name(input$dataname),             nrows = input$nrow           )         })          output$table <- renderTable(table_q()[[\"result\"]])          ### REPORTER         card_fun <- function(card = teal.reporter::ReportCard$new(), comment) {           card$set_name(\"Table Module\")           card$append_text(paste(\"Selected dataset\", input$dataname), \"header2\")           card$append_text(\"Selected Filters\", \"header3\")           if (with_filter) {             card$append_text(filter_panel_api$get_filter_state(), \"verbatim\")           }           card$append_text(\"Encoding\", \"header3\")           card$append_text(             yaml::as.yaml(               stats::setNames(                 lapply(c(\"dataname\", \"nrow\"), function(x) input[[x]]), c(\"dataname\", \"nrow\")               )             ),             \"verbatim\"           )           card$append_text(\"Module Table\", \"header3\")           card$append_table(table_q()[[\"result\"]])           card$append_text(\"Show R Code\", \"header3\")           card$append_text(teal.code::get_code(table_q()), \"verbatim\")           if (!comment == \"\") {             card$append_text(\"Comment\", \"header3\")             card$append_text(comment)           }           card         }         teal.reporter::add_card_button_srv(           \"addReportCard\",           reporter = reporter,           card_fun = card_fun         )         teal.reporter::download_report_button_srv(\"downloadButton\", reporter = reporter)         teal.reporter::reset_report_button_srv(\"resetButton\", reporter)         ###       })     },     ui = function(id) {       ns <- NS(id)        sidebarLayout(         sidebarPanel(selectInput(ns(\"dataname\"), \"Choose a dataset\", choices = NULL)),         mainPanel(           teal.reporter::simple_reporter_ui(ns(\"reporter\")),           verbatimTextOutput(ns(\"dataset\"))         )       )        sidebarLayout(         sidebarPanel(           tags$div(             teal.reporter::add_card_button_ui(ns(\"addReportCard\")),             teal.reporter::download_report_button_ui(ns(\"downloadButton\")),             teal.reporter::reset_report_button_ui(ns(\"resetButton\"))           ),           selectInput(ns(\"dataname\"), \"Choose a dataset\", choices = NULL),           sliderInput(ns(\"nrow\"), \"Number of rows\", min = 1, max = 1, value = 1, step = 1)         ),         mainPanel(tableOutput(ns(\"table\")))       )     }   ) }  app <- init(   data = teal_data(AIR = airquality, IRIS = iris),   modules = list(     example_reporter_module(label = \"with Reporter\"),     my_module(label = \"without Reporter\")   ),   filter = teal_slices(teal_slice(dataname = \"AIR\", varname = \"Temp\", selected = c(72, 85))) ) |>   modify_header(\"Example teal app with reporter\")  if (interactive()) shinyApp(app$ui, app$server)"},{"path":"https://insightsengineering.github.io/teal/main/articles/blueprint/actors.html","id":"teal-app-developer","dir":"Articles > Blueprint","previous_headings":"","what":"teal app developer","title":"Actors","text":"primary responsibility teal app developer leverage available building blocks teal framework create functional teal app analyses data. expedite app creation process, developers can take advantage pre-existing teal modules found R packages like teal.modules.general teal.modules.clinical. modules designed focus standardization versatility, making suitable wide range use cases. developing teal app, developer select appropriate teal modules integrate app‚Äôs interface ensure seamless usability end-users. learn existing modules, visit teal.gallery, contains several demo applications source code.","code":"%% This is a mermaid diagram, if you see this the plot failed to render. Sorry. graph LR     A[teal App Developer]--utilizes--> B[teal modules]     B--to create--> C[teal app]     D[app user]--uses--> C style A fill:lightblue style C fill:gold style D fill:pink"},{"path":"https://insightsengineering.github.io/teal/main/articles/blueprint/actors.html","id":"teal-module-developer","dir":"Articles > Blueprint","previous_headings":"","what":"teal module developer","title":"Actors","text":"main duty teal module developer construct compatible teal module can utilized within teal framework. Several factors influence scope requirements building teal module. creating reusable teal module, ‚Äôs advisable focus making general adaptable feasible maximize possibilities re-used future. However, developers freedom create teal module customized suit specific demands project. Ultimately, one teal modules employed construct teal app. learn creating custom modules follow Tutorial Creating Custom Module.","code":"%% This is a mermaid diagram, if you see this the plot failed to render. Sorry. graph LR     A[Teal App Developer]--utilizes--> B[teal modules]     E[Teal Module Developer]--develops--> B     B--to create--> C[teal app]     D[app user]--uses--> C style A fill:lightblue style E fill:lightgreen style D fill:pink style C fill:gold"},{"path":"https://insightsengineering.github.io/teal/main/articles/blueprint/actors.html","id":"workflow-in-a-clinical-trial-study","dir":"Articles > Blueprint","previous_headings":"","what":"Workflow in a clinical trial study","title":"Actors","text":"clinical trial study setting, unique study teal app developer assigned study team accountable developing tailored teal app respective study. study teal app developer initially leverage existing teal modules R packages created teal module developers. cases need create new modules tailored study, study teal module developer need involved. Upon completion, study team designated teal app tailored specific study.","code":"%% This is a mermaid diagram, if you see this the plot failed to render. Sorry. %%| fig-width: 7.5 graph LR     subgraph Study B         A2[Study Teal App Developer]--utilizes--> B2[teal modules]         E2[Study Teal Module Developer]-.develops.-> B2         B2--to create--> C2[study teal app]         D2[study app user]--uses--> C2     end     E3[Teal Module Developer]--develops--> B     E3--develops-->B2     subgraph Study A         A[Study Teal App Developer]--utilizes--> B[teal modules]         E[Study Teal Module Developer]-.develops.-> B         B--to create--> C[study teal app]         D[study app user]--uses--> C     end style A fill:lightblue style A2 fill:lightblue style E fill:limegreen style E2 fill:limegreen style E3 fill:lightgreen style D fill:pink style D2 fill:pink style C fill:gold style C2 fill:gold"},{"path":"https://insightsengineering.github.io/teal/main/articles/blueprint/filter_panel.html","id":"introduction","dir":"Articles > Blueprint","previous_headings":"","what":"Introduction","title":"Filter Panel","text":"teal.slice package provides teal applications filter panel, powerful tool exploring analyzing data, key component teal framework. One great things filter panel comes built-teal, requiring programming knowledge use. filter panel provides convenient way users subset data, simplifying process exploration comprehension. Moreover, users can activate deactivate filter states interactively, either individually globally, using filter panel.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/blueprint/filter_panel.html","id":"filter-flow","dir":"Articles > Blueprint","previous_headings":"","what":"Filter flow","title":"Filter Panel","text":"filter panel creates subsets data. Subsetting achieved creating filter states, holds logical predicate (filter condition) applied single variables. filter conditions composed single expression, call particular function (e.g.¬†dplyr::filter), expression evaluated create filtered data subset. process entirely interactive. Filter states can created, removed, changed , however, app developer may choose constrain even restrict . filter state created, filter panel generates filter card shiny inputs appropriate type variable, e.g.¬†range selectors numeric columns sets checkboxes drop-menus categorical ones. users interact filter cards, subsetting complete expression updated filtered data recomputed. filtered data passed teal modules downstream analysis. subsetting expression returned along data, ensuring unbroken track record entire analysis. Signature data also stored ensure reproducible results.","code":"%% This is a mermaid diagram, if you see this the plot failed to render. Sorry. sequenceDiagram     autonumber     data->teal.slice: processed by     teal.slice->>shiny inputs: creates     Note over teal.slice,shiny inputs: based on data type     shiny inputs->>reactive dataset: updates     reactive dataset->>teal modules: processed by"},{"path":"https://insightsengineering.github.io/teal/main/articles/blueprint/in_app_data.html","id":"building-data-in-the-app","dir":"Articles > Blueprint","previous_headings":"","what":"Building data in the App","title":"In-App Data","text":"Typically data passed teal application available app run. However, always true cases data built app started. good example pulling data external repository, like database, uploading file. Additional authentication may required.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/blueprint/in_app_data.html","id":"teal_data_module","dir":"Articles > Blueprint","previous_headings":"Building data in the App","what":"teal_data_module","title":"In-App Data","text":"Preprocessing actions can performed -app using teal_data_module. Rather passing teal_data object app, one may pass shiny module returns teal_data object (wrapped reactive expression). allows app developer include user actions data creation, fetching, even pre-filtering modification.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/blueprint/in_app_data.html","id":"further-reading","dir":"Articles > Blueprint","previous_headings":"","what":"Further reading","title":"In-App Data","text":"complete explanation using teal_data_module can found teal vignette","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/blueprint/input_data.html","id":"introduction","dir":"Articles > Blueprint","previous_headings":"","what":"Introduction","title":"Input Data","text":"Reproducibility paramount pharmaceutical industry. Accurate consistent results essential ensure high-quality research safety patients. prioritizing reproducibility, researchers can validate methods, confirm findings, contribute advancement field. teal.code package provides qenv class facilitates code reproducibility. Code passed qenv object, evaluated specific environment. qenv also stores code can retrieved request. teal_data class, serves primary data interface teal applications, inherits code tracking behavior qenv.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/blueprint/input_data.html","id":"preparing-data-for-a-teal-application","dir":"Articles > Blueprint","previous_headings":"","what":"Preparing data for a teal application","title":"Input Data","text":"teal applications run data provided teal_data object. Data objects stored modified within environment teal_data object R code used tracked, allows code evaluated executed teal application, reproduced outside teal application. includes data loading, preprocessing, filtering, transformations, plotting, etc. teal_data object makes easy users reproduce validate results analyses.  Learn use teal_data teal.data package vignettes.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/blueprint/input_data.html","id":"show-r-code-and-reporter","dir":"Articles > Blueprint","previous_headings":"","what":"Show R Code and Reporter","title":"Input Data","text":"teal.modules.clinical teal.modules.general packages, ‚Äôll find modules include convenient Show R Code button. button clicked, modal window appears, revealing R code responsible generating module‚Äôs output. functionality achieved inspecting teal_data object retrieving code . Show R Code button, users can easily copy independently run code reproduce analysis presented teal module. Reporter feature also leverages teal_data object operation. Much like Show R Code mechanism, code displayed Reporter Card extracted teal_data object. learn Reporter feature, please visit teal.reporter documentation. Overall, qenv teal.code child class, teal_data, powerful tools ensuring code reproducibility promoting high-quality research R programming language.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/blueprint/module_encapsulation.html","id":"introduction","dir":"Articles > Blueprint","previous_headings":"","what":"Introduction","title":"Module Encapsulation","text":"teal framework leverages shiny module concept enable encapsulation analytical actions teal modules, maintaining seamless communication modules application.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/blueprint/module_encapsulation.html","id":"benefits","dir":"Articles > Blueprint","previous_headings":"","what":"Benefits","title":"Module Encapsulation","text":"implementing modular app technique shiny module creation teal module, several benefits realized: Streamlined maintenance development teal module becomes manageable, can function independently teal framework. separation allows developers maintain module ease. approach successfully applied R packages dedicated teal module development, teal.modules.general teal.modules.clinical. Enhanced focus outputteal module developers can concentrate solely refining parameters encoding, output aspects (data summarization visualization) without need concern intricacies teal framework. developed correctly, module seamlessly integrates teal. Facilitated collaborationteal module development becomes accessible entry point developers interested collaborating. approach encourages user collaboration improvement teal modules, developers gain deeper understanding mechanics teal framework.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/blueprint/product_map.html","id":"why-so-many-packages","dir":"Articles > Blueprint","previous_headings":"","what":"Why so many packages?","title":"Product Map","text":"breaking teal features, modules, calculations dedicated packages, maintenance made significantly manageable.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/bootstrap-themes-in-teal.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Bootstrap Themes in teal","text":"offer easy application custom Bootstrap theme teal app. teal uses bslib R package provides tools customizing Bootstrap themes, including shiny apps.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/bootstrap-themes-in-teal.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Bootstrap Themes in teal","text":"teal app developers can specify custom Bootstrap themes setting teal.bs_theme R option, set bslib::bs_theme object. bslib::bs_theme(...) function creates Bootstrap theme object, one specifies (major) Bootstrap version (default one 3, 4, 5). Optionally one can choose bootswatch theme customize app CSS functions like bslib::bs_add_rules. Please read custom themes bslib getting started vignette. teal.bs_theme R option specified top code script. Please install bslib package run code .","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/bootstrap-themes-in-teal.html","id":"teal-bs_theme-r-option","dir":"Articles","previous_headings":"Usage","what":"teal.bs_theme R option","title":"Bootstrap Themes in teal","text":"","code":"options(\"teal.bs_theme\" = bslib::bs_theme(\"Custom Options\"))  ####################### # teal::init() app code #######################"},{"path":"https://insightsengineering.github.io/teal/main/articles/bootstrap-themes-in-teal.html","id":"bootstrap-version-and-themes","dir":"Articles","previous_headings":"Usage","what":"Bootstrap version and themes","title":"Bootstrap Themes in teal","text":"best recommended ways explore Bootstrap themes use bslib::run_with_themer(shinyApp(app$ui, app$server)) bslib::bs_theme_preview(), offer interactive explore mode (supported Bootstrap 3). bslib::bs_theme_preview() recommended end user shiny app yet. already shiny app want test different Bootstrap themes (CSS styling) bslib::run_with_themer(shinyApp(app$ui, app$server)) recommended. Available Bootstrap versions checked bslib::versions() Bootstrap themes (bootswatch) bslib::bootswatch_themes(version = \"5\").","code":"# bslib::versions() # bslib::bootswatch_themes(version = \"5\") options(\"teal.bs_theme\" = bslib::bs_theme(version = \"5\", bootswatch = \"lux\")) # or options(\"teal.bs_theme\" = bslib::bs_theme_update(bslib::bs_theme(version = \"5\"), bootswatch = \"lux\"))"},{"path":"https://insightsengineering.github.io/teal/main/articles/bootstrap-themes-in-teal.html","id":"default-bootstrap-theme","dir":"Articles","previous_headings":"Usage","what":"Default Bootstrap theme","title":"Bootstrap Themes in teal","text":"using default bslib theme version (3, 4 5), styling might expected. Please run interactive themer (recommended) apply custom theme explore theme options. many scenarios updating theme might enough e.g.¬†font color specifications updated .","code":"# instead of options(\"teal.bs_theme\" =  bslib::bs_theme(version = \"5\")) # try non-default themes options(\"teal.bs_theme\" = bslib::bs_theme(version = \"5\", bootswatch = \"THEME NAME\". ...)) # or run the app inside bslib::run_with_themer"},{"path":"https://insightsengineering.github.io/teal/main/articles/bootstrap-themes-in-teal.html","id":"reset-the-bootstrap-theme","dir":"Articles","previous_headings":"Usage","what":"Reset the Bootstrap theme","title":"Bootstrap Themes in teal","text":"Please use options(\"teal.bs_theme\" = NULL) call return default shiny Bootstrap teal apps.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/bootstrap-themes-in-teal.html","id":"theme-not-updated","dir":"Articles","previous_headings":"Usage","what":"Theme not updated","title":"Bootstrap Themes in teal","text":"One reason theme updated web browser caches previous one, especially different themes run one another. Please, use Cmd+Shift+R (Mac) Ctrl+F5 (Windows) hard refresh webpage.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/bootstrap-themes-in-teal.html","id":"custom-teal-css","dir":"Articles","previous_headings":"Usage","what":"Custom teal CSS","title":"Bootstrap Themes in teal","text":"important HTML tags teal specific id class, can directly styled. bslib::bs_add_rules function used around bslib::bs_theme object apply custom CSS rules. bslib::bs_add_* family functions used specify low-level Bootstrap elements.","code":"library(magrittr) options(\"teal.bs_theme\" = bslib::bs_add_rules(   bslib::bs_theme(version = \"5\"),    \"Anything understood by sass::as_sass()\" ))"},{"path":"https://insightsengineering.github.io/teal/main/articles/bootstrap-themes-in-teal.html","id":"bootstrap-null-vs-bootstrap-3","dir":"Articles","previous_headings":"Usage","what":"Bootstrap NULL vs Bootstrap 3","title":"Bootstrap Themes in teal","text":"important note statements options(\"teal.bs_theme\" = NULL) options(\"teal.bs_theme\" = bslib::bs_theme(version = \"3\") equivalent bslib approximation default shiny theme Bootstrap version 3 can introduce discrepancies. One important difference using bslib::bs_theme(version = \"3\", bootswatch = \"THEME NAME\") one can apply custom Bootstrap theme. Another one usage bslib::bs_theme(version = \"3\") requires installation shinyWidgets package minimum version 0.7.4.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/bootstrap-themes-in-teal.html","id":"regular-shinyfluidpage","dir":"Articles","previous_headings":"Usage","what":"Regular shiny::fluidPage","title":"Bootstrap Themes in teal","text":"want update theme regular shiny::fluidPage-like app, need teal.bs_theme option. Simply provide bslib::bs_theme directly: shiny::fluidPage(theme = bslib::bs_theme(...), ...).","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/bootstrap-themes-in-teal.html","id":"interactive-theming-guide","dir":"Articles","previous_headings":"Usage","what":"Interactive theming guide","title":"Bootstrap Themes in teal","text":"section provide step--step guide customizing teal application theme interactively bslib::run_with_themer(). recommend starting simple case satisfied, verifying full application. end use teal application . example assume want use Bootstrap 5. start, launch app bslib::run_with_themer(app$ui, app$server) instead shiny::shinyApp. gives us Theme Customizer similar shown .  Note Theme Customizer section right hand side. added bslib customize theme.","code":"options(\"teal.bs_theme\" = bslib::bs_theme(version = \"5\"))  library(teal)  app <- init(   data = teal_data(IRIS = iris),    filter = teal_slices(teal_slice(\"IRIS\", \"Sepal.Length\", selected = c(5, 7))),   modules = modules(example_module(), example_module()), )  bslib::run_with_themer(shinyApp(app$ui, app$server))"},{"path":"https://insightsengineering.github.io/teal/main/articles/bootstrap-themes-in-teal.html","id":"set-overall-app-theme","dir":"Articles","previous_headings":"Usage > Interactive theming guide","what":"Set overall app theme","title":"Bootstrap Themes in teal","text":"Instead starting scratch, want start Bootswatch theme. Let us select Minty theme ‚ÄúOverall theme‚Äù drop-.  bslib updated CSS styles use new theme, including customizer theme. Additionally, look R console, see helpful guide provides code update theme. teal applications don‚Äôt actually use bs_theme_update opt bs_theme instead. However, printed code still helpful.","code":"####  Update your bs_theme() R code with:  ##### bs_theme_update(theme, bootswatch = \"minty\")"},{"path":"https://insightsengineering.github.io/teal/main/articles/bootstrap-themes-in-teal.html","id":"customize-a-bootswatch-theme","dir":"Articles","previous_headings":"Usage > Interactive theming guide","what":"Customize a bootswatch theme","title":"Bootstrap Themes in teal","text":"base theme (Minty) close want let‚Äôs make modifications. start, increase base font size. , choose ‚ÄúFonts‚Äù section customizer theme set value ‚ÄúBase font size‚Äù input. use 1.25 , means fonts increased factor 1.25. check R console, see bslib printed bs_theme_update(theme, font_scale = 1.25, bootswatch = \"minty\"), now includes font size adjustment.  Finally, suppose want borders rounded. customizer theme, can go ‚ÄúOptions‚Äù uncheck ‚ÄúRounded corners‚Äù box.  expected, corners longer rounded. look R console, now see bs_theme_update(theme, font_scale = 1.25,enable-rounded= FALSE, bootswatch = \"minty\").","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/bootstrap-themes-in-teal.html","id":"apply-the-customized-theme","dir":"Articles","previous_headings":"Usage > Interactive theming guide","what":"Apply the customized theme","title":"Bootstrap Themes in teal","text":"customization complete, apply changes application. , use option teal.bs_theme like time expand bslib::bs_theme call include changes. Luckily, arguments printed R console running app themer can plugged right . Now application custom theme applied.  Please note interactive themer contains commonly applied options. customization options, review bslib documentation.","code":"options(   \"teal.bs_theme\" = bslib::bs_theme(     version = \"5\",     font_scale = 1.25,     `enable-rounded` = FALSE,     bootswatch = \"minty\"   ) )  library(teal)  app <- init(   data = teal_data(IRIS = iris),   filter = teal_slices(teal_slice(\"IRIS\", \"Sepal.Length\", selected = c(5, 7))),   modules = modules(example_module(), example_module()) )  shinyApp(app$ui, app$server)"},{"path":"https://insightsengineering.github.io/teal/main/articles/bootstrap-themes-in-teal.html","id":"sources","dir":"Articles","previous_headings":"","what":"Sources","title":"Bootstrap Themes in teal","text":"https://rstudio.github.io/bslib/","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/creating-custom-modules.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Creating Custom Modules","text":"teal framework provides large catalog plug--ready analysis modules can incorporated teal applications. However, also possible create modules using module function, leverages Shiny modules. custom teal module built Shiny module, combining Shiny‚Äôs reactive capabilities modularized UI server logic encapsulate functionality. design enables structured reusable approach creating interactive components integrate seamlessly within teal ecosystem. guide, use simple histogram example, demonstrate convert histogram function robust teal module step--step: module allow users dynamically select datasets variables create histograms within teal application. cover best practices, including: Setting dynamic inputs. Structuring server logic. Using teal_data object ensure reactivity reproducibility.","code":"my_plot <- hist(   dataset[[vars]],   las = 1,   main = paste(\"Histogram of\", vars),   xlab = vars,   col = \"lightblue\",   border = \"black\" )"},{"path":"https://insightsengineering.github.io/teal/main/articles/creating-custom-modules.html","id":"understanding-the-inputs-and-requirements","dir":"Articles","previous_headings":"","what":"Understanding the Inputs and Requirements","title":"Creating Custom Modules","text":"developing custom teal module visualizations, first identify primary inputs users interact : Dataset Input (dataset): Allows users select dataset explore. Variable Input (vars): Allows users choose specific numeric variable chosen dataset, ensuring appropriate columns available plotting. inputs dynamically populated based available datasets variables teal_data object, cover later.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/creating-custom-modules.html","id":"setting-up-the-teal-module-ui","dir":"Articles","previous_headings":"","what":"Setting Up the teal Module UI","title":"Creating Custom Modules","text":"UI function defines controls display area histogram. module, use: selectInput Dataset: Enables users select dataset list available datasets. selectInput Variable: Allows users choose numeric variable chosen dataset, dynamically filtering non-numeric columns. plotOutput Histogram: Displays histogram dataset variable inputs selected. verbatimTextOutput Code: Automatically displays code generated plot based user input. ‚Äôs code histogram_module_ui function:","code":"# UI function for the custom histogram module histogram_module_ui <- function(id) {   ns <- shiny::NS(id)   shiny::tagList(     shiny::selectInput(ns(\"dataset\"), \"Select Dataset\", choices = NULL),     shiny::selectInput(ns(\"variable\"), \"Select Variable\", choices = NULL),     shiny::plotOutput(ns(\"histogram_plot\")),     shiny::verbatimTextOutput(ns(\"plot_code\"))  # To display the reactive plot code   ) }"},{"path":"https://insightsengineering.github.io/teal/main/articles/creating-custom-modules.html","id":"setting-up-the-teal-module-server","dir":"Articles","previous_headings":"","what":"Setting Up the teal Module Server","title":"Creating Custom Modules","text":"server function main logic teal module handled. histogram module, server function handle user interactions manage reactive teal_data object, allows module dynamically respond user inputs.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/creating-custom-modules.html","id":"passing-the-data-argument-to-the-server-function","dir":"Articles","previous_headings":"Setting Up the teal Module Server","what":"Passing the data Argument to the Server Function","title":"Creating Custom Modules","text":"begin, ‚Äôs essential include data argument server function definition. data argument holds reactive teal_data object, contains datasets filters applied. including data, can ensure: server function receives reactive version teal_data, allowing automatically respond changes. server can access filtered datasets directly. correct function definition server function : need refresher teal_data object, please visit teal.data package documentation.","code":"histogram_module_server <- function(id, data) {   moduleServer(id, function(input, output, session) {     # Server logic goes here   }) }"},{"path":"https://insightsengineering.github.io/teal/main/articles/creating-custom-modules.html","id":"understanding-teal_data-as-a-reactive-object-in-server-logic","dir":"Articles","previous_headings":"Setting Up the teal Module Server","what":"Understanding teal_data as a Reactive Object in Server Logic","title":"Creating Custom Modules","text":"used server logic teal module, teal_data object becomes reactive data container. means access contents, need call like function, using parentheses: data(). syntax triggers reactivity, ensuring data within teal_data stays --date filters changes applied elsewhere application. Note: teal_data object behaves reactive data container used within server logic. accessed outside server, reactive.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/creating-custom-modules.html","id":"using-names-to-access-dataset-names-in-teal_data-object","dir":"Articles","previous_headings":"Setting Up the teal Module Server","what":"Using names() to Access Dataset Names in teal_data object","title":"Creating Custom Modules","text":"teal_data object can contain multiple datasets. retrieve names datasets, use names() function: return character vector dataset names contained teal_data. can use names dynamically populate input controls, like dataset selection drop-.","code":"names(data())"},{"path":"https://insightsengineering.github.io/teal/main/articles/creating-custom-modules.html","id":"accessing-specific-datasets-with-double-brackets","dir":"Articles","previous_headings":"Setting Up the teal Module Server","what":"Accessing Specific Datasets with Double Brackets ([[ ]])","title":"Creating Custom Modules","text":"access individual dataset teal_data, use double brackets ([[ ]]) along dataset name. allows extract specific dataset data frame: , input$dataset represents name dataset selected user. syntax highly flexible dynamically references whichever dataset user chosen. can subset manipulate extracted data frame needed.","code":"data()[[input$dataset]]"},{"path":"https://insightsengineering.github.io/teal/main/articles/creating-custom-modules.html","id":"setting-up-server-logic-using-teal_data-and-dynamic-variable-injection","dir":"Articles","previous_headings":"Setting Up the teal Module Server","what":"Setting Up Server Logic Using teal_data and Dynamic Variable Injection","title":"Creating Custom Modules","text":"updated server function, perform following: Create new_data modified version data() using within(), dynamically injecting input$dataset input$variable. Render Plot: renderPlot() displays plot referencing plot stored updated teal_data object, new_data. ‚Äôs code: Let‚Äôs review ‚Äôve done far: input_dataset = .name(input$dataset) passes dataset name dynamically input_dataset. input_vars = input$variable passes selected variable name directly input_vars. Inside within(), my_plot uses injected variables dynamically generate histogram plot. output$histogram_plot uses renderPlot() display plot stored new_data referencing result()[[\"my_plot\"]]. output$plot_code render function displays dynamically generated code using teal.code::get_code(result()), allowing users see exact code used generate plot reactively.","code":"# Server function for the custom histogram module with injected variables in within() histogram_module_server <- function(id, data) {   moduleServer(id, function(input, output, session) {      # Update dataset choices based on available datasets in teal_data     shiny::observe({       shiny::updateSelectInput(         session,         \"dataset\",         choices = names(data())       )     })      # Update variable choices based on selected dataset, only including numeric variables     observeEvent(input$dataset, {       req(input$dataset)  # Ensure dataset is selected       numeric_vars <- names(data()[[input$dataset]])[sapply(data()[[input$dataset]], is.numeric)]       shiny::updateSelectInput(session, \"variable\", choices = numeric_vars)     })      # Create a reactive `teal_data` object with the histogram plot     result <- reactive({       req(input$dataset, input$variable)  # Ensure both dataset and variable are selected        # Create a new teal_data object with the histogram plot       new_data <- within(         data(),         {           my_plot <- hist(             input_dataset[[input_vars]],             las = 1,             main = paste(\"Histogram of\", input_vars),             xlab = input_vars,             col = \"lightblue\",             border = \"black\"           )         },         input_dataset = as.name(input$dataset),  # Replace `input_dataset` with input$dataset         input_vars = input$variable              # Replace `input_vars` with input$variable       )       new_data     })      # Render the histogram from the updated teal_data object     output$histogram_plot <- shiny::renderPlot({       result()[[\"my_plot\"]]  # Access and render the plot stored in `new_data`     })      # Reactive expression to get the generated code for the plot     output$plot_code <- shiny::renderText({       teal.code::get_code(result())  # Retrieve and display the code for the updated `teal_data` object     })   }) }"},{"path":"https://insightsengineering.github.io/teal/main/articles/creating-custom-modules.html","id":"creating-the-custom-teal-module-function","dir":"Articles","previous_headings":"","what":"Creating the Custom teal Module Function","title":"Creating Custom Modules","text":"teal::module() function allows encapsulate UI server logic teal module, making reusable ready integrate teal application. setting datanames = \"\", give module access datasets specified teal_data object. Datasets names start . won‚Äôt included (see Hidden datasets section).","code":"# Custom histogram module creation create_histogram_module <- function(label = \"Histogram Module\") {   teal::module(     label = label,     ui = histogram_module_ui,     server = histogram_module_server,     datanames = \"all\"   ) }"},{"path":"https://insightsengineering.github.io/teal/main/articles/creating-custom-modules.html","id":"integrating-the-custom-teal-module-into-a-teal-app","dir":"Articles","previous_headings":"","what":"Integrating the Custom teal Module into a teal App","title":"Creating Custom Modules","text":"custom teal module set , can now integrated teal app. ‚Äôll use init() teal specify datasets modules used app, run app test newly created module. Congratulations! just created custom teal module used teal app! setup provides fully dynamic, user-controlled teal module allows interactive data exploration code visibility, enhancing usability transparency.","code":"library(teal)  # Define datasets in `teal_data` data_obj <- teal_data(   iris = iris,   mtcars = mtcars )  # Initialize the teal app app <- init(   data = data_obj,   modules = modules(create_histogram_module()) )  # Run the app shiny::shinyApp(ui = app$ui, server = app$server)"},{"path":"https://insightsengineering.github.io/teal/main/articles/creating-custom-modules.html","id":"whats-next","dir":"Articles","previous_headings":"","what":"What‚Äôs next?","title":"Creating Custom Modules","text":"Now ‚Äôve mastered essentials building integrating modules teal, ‚Äôre ready explore advanced features. teal offers wide range capabilities enhance module‚Äôs functionality user experience.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/creating-custom-modules.html","id":"adding-reporting-to-a-module","dir":"Articles","previous_headings":"What‚Äôs next?","what":"Adding reporting to a module","title":"Creating Custom Modules","text":"Enhance custom teal module reporting features! Dive vignette see just simple add powerful reporting capabilities elevate module‚Äôs impact.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/creating-custom-modules.html","id":"using-standard-widgets-in-your-custom-module","dir":"Articles","previous_headings":"What‚Äôs next?","what":"Using standard widgets in your custom module","title":"Creating Custom Modules","text":"teal.widgets package provides various widgets can leveraged quickly create standard elements custom teal module.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/data-as-shiny-module.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Data as shiny Module","text":"Proper functioning teal application requires presence teal_data object. Typically, teal_data object created global environment passed data argument init. teal_data object contain elements necessary successful execution application‚Äôs modules. scenarios, however, application developers may opt postpone data operations application runtime. can done passing special shiny module data argument. teal_data_module function used build module following components: UI function; accepts one argument, id; defines user interface elements data module server function: accepts one argument, id; defines server logic data module, including data creation; must return reactive expression containing teal_data object teal run module application starts resulting teal_data object used throughout teal (analytic) modules.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/data-as-shiny-module.html","id":"creating-data-in-app","dir":"Articles","previous_headings":"","what":"Creating data in-app","title":"Data as shiny Module","text":"One case postponing data operations datasets dynamic, frequently updated. data created kept global environment. Using teal_data_module enables creating dataset scratch every time user starts application. See ?qenv detailed explanation use within method.","code":"library(teal)  data_module <- teal_data_module(   ui = function(id) tags$div(),   server = function(id) {     moduleServer(id, function(input, output, session) {       reactive({         data <- within(           teal_data(),           {             dataset1 <- iris             dataset2 <- mtcars           }         )         data       })     })   } )   app <- init(   data = data_module,   modules = example_module() )  if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal/main/articles/data-as-shiny-module.html","id":"modification-of-data-in-app","dir":"Articles","previous_headings":"","what":"Modification of data in-app","title":"Data as shiny Module","text":"Another reason postpone data operations involve application user preprocessing stage. initial, constant form data can created global environment modified app starts. following example illustrates teal_data_module can utilized subset data based user inputs: Note running preprocessing code module opposed global environment increase app loading times. recommended keep constant code global environment move dynamic parts data module.","code":"data <- within(teal_data(), {   dataset1 <- iris   dataset2 <- mtcars })  data_module <- teal_data_module(   ui = function(id) {     ns <- NS(id)     tags$div(       selectInput(ns(\"species\"), \"Select species to keep\",         choices = unique(iris$Species), multiple = TRUE       ),       actionButton(ns(\"submit\"), \"Submit\")     )   },   server = function(id) {     moduleServer(id, function(input, output, session) {       eventReactive(input$submit, {         data_modified <- within(           data,           dataset1 <- subset(dataset1, Species %in% selected),           selected = input$species         )         data_modified       })     })   } )  app <- init(   data = data_module,   modules = example_module() )  if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal/main/articles/data-as-shiny-module.html","id":"warning","dir":"Articles","previous_headings":"","what":"Data as shiny Module","title":"Data as shiny Module","text":"using teal_data_module modify pre-existing teal_data object, crucial server function data object defined environment, otherwise server function able access data object. means server functions defined packages used.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/data-as-shiny-module.html","id":"extending-existing-teal_data_modules","dir":"Articles","previous_headings":"Modification of data in-app","what":"Extending existing teal_data_modules","title":"Data as shiny Module","text":"server logic teal_data_module can modified used app, using within function. allows teal_data object created teal_data_module processed . previous example, data_module takes predefined teal_data object allows app user select subset. following example modifies data_module new columns added data retrieved.","code":"data_module_2 <- within(   data_module,   {     # Create new column with Ratio of Sepal.Width and Petal.Width     dataset1$Ratio.Sepal.Petal.Width <- round(dataset1$Sepal.Width / dataset1$Petal.Width, digits = 2L)     # Create new column that converts Miles per Galon to Liter per 100 Km     dataset2$lp100km <- round(dataset2$mpg * 0.42514371, digits = 2L)   } )  app <- init(   data = data_module_2,   modules = example_module() )  if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal/main/articles/data-transform-as-shiny-module.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Data Transformations as Shiny Module","text":"teal_transform_module() Shiny module takes ui server arguments. provided, teal executes data transformations specified module loaded whenever data changes. server argument extends logic behind data manipulations, ui argument adds new UI elements filter panel, managing transformator inputs. main advantage teal_transform_module() ability transform data passing module. feature allows users extend default behavior existing modules performing specific data operations data within module. version 0.16, teal introduced new optional argument teal::module named transformators. argument allows users pass list objects teal_data_module class, created using teal_transform_module() function. vignette presents way manage custom data transformations teal apps.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/data-transform-as-shiny-module.html","id":"creating-your-first-custom-data-transformation-module","dir":"Articles","previous_headings":"","what":"Creating Your First Custom Data Transformation Module","title":"Data Transformations as Shiny Module","text":"Let‚Äôs initialize simple teal app providing iris mtcars input datasets.","code":"library(teal)  data <- within(teal_data(), {   iris <- iris   mtcars <- mtcars })  app <- init(   data = data,   modules = teal::example_module() )  if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal/main/articles/data-transform-as-shiny-module.html","id":"single-transformator","dir":"Articles","previous_headings":"Creating Your First Custom Data Transformation Module","what":"Single transformator","title":"Data Transformations as Shiny Module","text":"Next, let‚Äôs create single transformator using teal_transform_module(). example enables users subset first n rows iris dataset based input. ‚Äôs can implement : UI Component: create numericInput ui allows users specify number rows want display. Server Logic: server function, take reactive data object, perform transformation extract first n rows iris dataset, return updated reactive data. Note: recommended return reactive() teal_data() server code teal_transform_module, approach ensures better robustness maintaining Shiny‚Äôs reactivity. planning using eventReactive() server, make sure event includes data() (example eventReactive(list(input$, data()), {...})). discussion.","code":"data <- within(teal_data(), {   iris <- iris   mtcars <- mtcars })  my_transformators <- list(   teal_transform_module(     label = \"Custom transformator for iris\",     ui = function(id) {       ns <- NS(id)       tags$div(         numericInput(           ns(\"n_rows\"),           \"Number of rows to subset\",           value = 6, min = 1, max = 150, step = 1         )       )     },     server = function(id, data) {       moduleServer(id, function(input, output, session) {         reactive({           within(data(),             {               iris <- head(iris, num_rows)             },             num_rows = input$n_rows           )         })       })     }   ) )  app <- init(   data = data,   modules = teal::example_module(transformators = my_transformators) )  if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal/main/articles/data-transform-as-shiny-module.html","id":"multiple-transformators","dir":"Articles","previous_headings":"Creating Your First Custom Data Transformation Module","what":"Multiple transformators","title":"Data Transformations as Shiny Module","text":"also add multiple transformators app including several instances teal_transform_module list. example, let‚Äôs add another transformation mtcars dataset. transformation creates new column containing rownames mtcars. Unlike previous example, module include interactive UI elements. using multiple transformators, can apply different transformations different datasets available teal_data object. example, one transformator enables users subset iris dataset interactively, another automatically adds row names new column mtcars dataset. approach provides greater flexibility data preprocessing, allowing transformations tailored specific datasets specific module.","code":"data <- within(teal_data(), {   iris <- iris   mtcars <- mtcars })  my_transformators <- list(   teal_transform_module(     label = \"Custom transformator for iris\",     ui = function(id) {       ns <- NS(id)       tags$div(         numericInput(           ns(\"n_rows\"),           \"Number of rows to subset\",           value = 6, min = 1, max = 150, step = 1         )       )     },     server = function(id, data) {       moduleServer(id, function(input, output, session) {         reactive({           within(data(),             {               iris <- head(iris, num_rows)             },             num_rows = input$n_rows           )         })       })     }   ),   teal_transform_module(     label = \"Custom transformator for mtcars\",     ui = function(id) {       ns <- NS(id)       tags$div(         \"Adding rownames column to mtcars\"       )     },     server = function(id, data) {       moduleServer(id, function(input, output, session) {         reactive({           within(data(), {             mtcars$rownames <- rownames(mtcars)             rownames(mtcars) <- NULL           })         })       })     }   ) )  app <- init(   data = data,   modules = teal::example_module(transformators = my_transformators) )  if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal/main/articles/decorate-module-output.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Customizing Module Output","text":"teal powerful shiny-based framework built-modules interactive data analysis. document outlines customization options available modifying output teal modules. learn use teal_transform_module() modify enhance objects created teal::modules(), enabling tailor outputs specific requirements without rewriting original module code.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/decorate-module-output.html","id":"decorators","dir":"Articles","previous_headings":"","what":"Decorators","title":"Customizing Module Output","text":"programming, decoration refers process modifying object preserving original class. instance, given object x class \"my_class\", function foo(x) considered decorator function modifies x returns object retains class. context, x referred decorated object, foo() decorator function decorator. Decorators can perform variety operations, adding new methods modifying data, ensuring object remains compatible original usage. context teal applications, decoration specifically used modify module outputs, plots tables. example, consider decorator function add_title(x, <plot_title>) takes ggplot2 plot object (x) input, applies title modification, returns modified ggplot2 plot object. function qualifies decorator preserves original class input object. Conversely, function like create_plot(<data>, <x_axis>, <y_axis>), generates new plot object, decorator, produces output different class. Preserving object‚Äôs class decoration essential compatibility. ensures subsequent ‚Äúdisplay‚Äù logic can seamlessly handle decorated non-decorated objects. decoration process can vary complexity: Simple Decorations: Single-step modifications, single method call require additional data. Complex Decorations: Multi-step operations may involve interdependent transformations, potentially requiring input dedicated shiny UI elements. powerful functionality empowers application developers significantly customize outputs beyond default capabilities provided existing module parameters. Decorations allow advanced modifications, enabling highly tailored dynamic user experiences teal applications.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/decorate-module-output.html","id":"requirements-and-limitations","dir":"Articles","previous_headings":"","what":"Requirements and Limitations","title":"Customizing Module Output","text":"use decorators effectively, certain requirements must met: Module Support: teal provides core functionality decorators, module must explicitly support functionality. Developers ensure module designed work decorators. Matching Object Names: Decorators must reference object names align internal naming conventions module. module may use different names output objects, plot table. alignment critical successful decoration. recommended review module documentation source code understand internal object naming applying decorators.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/decorate-module-output.html","id":"decorators-in-teal","dir":"Articles","previous_headings":"","what":"Decorators in teal","title":"Customizing Module Output","text":"One ways adjusting input data customizing module outputs teal usage transformators created teal_transform_module. chapter present create simplest static decorator just server part. Later, present examples advanced usage, decorators contain UI. also learn convenience function makes easier write decorators, called make_teal_transform_server(). chapter ends example module utilizes decorators snippet uses module teal application.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/decorate-module-output.html","id":"server","dir":"Articles","previous_headings":"Decorators in teal","what":"Server","title":"Customizing Module Output","text":"simplest way create decorator use teal_transform_module() server argument provided (.e.¬†without UI part). approach adds functionality solely server code module. following example, assume module contains object (class ggplot2) named plot. modify title x-axis label plot: simplify repetitive elements writing new decorators (e.g., function(id, data), moduleServer, reactive, within(data, ...)), can use make_teal_transform_server() convenience function, takes language input:","code":"library(teal) static_decorator <- teal_transform_module(   label = \"Static decorator\",   server = function(id, data) {     moduleServer(id, function(input, output, session) {       reactive({         req(data())         within(data(), {           plot <- plot +             ggtitle(\"This is title\") +             xlab(\"x axis\")         })       })     })   } ) static_decorator_lang <- teal_transform_module(   label = \"Static decorator (language)\",   server = make_teal_transform_server(     expression(       plot <- plot +         ggtitle(\"This is title\") +         xlab(\"x axis title\")     )   ) )"},{"path":"https://insightsengineering.github.io/teal/main/articles/decorate-module-output.html","id":"ui","dir":"Articles","previous_headings":"Decorators in teal","what":"UI","title":"Customizing Module Output","text":"create decorator user interactivity, can add (optional) UI part use server accordingly (.e.¬†typical shiny module). example , x-axis title set dynamically via textInput, allowing users specify preferred label. Note input parameters passed within() function using ... argument. earlier examples, make_teal_transform_server() can simplify creation server component. wrapper requires use input object names directly expression - note xlab(x_axis_table) my_title = input$x_axis_title together xlab(my_title).","code":"interactive_decorator <- teal_transform_module(   label = \"Interactive decorator\",   ui = function(id) {     ns <- NS(id)     div(       textInput(ns(\"x_axis_title\"), \"X axis title\", value = \"x axis\")     )   },   server = function(id, data) {     moduleServer(id, function(input, output, session) {       reactive({         req(data())         within(data(),           {             plot <- plot +               ggtitle(\"This is title\") +               xlab(my_title)           },           my_title = input$x_axis_title         )       })     })   } ) interactive_decorator_lang <- teal_transform_module(   label = \"Interactive decorator (language)\",   ui = function(id) {     ns <- NS(id)     div(       textInput(ns(\"x_axis_title\"), \"X axis title\", value = \"x axis\")     )   },   server = make_teal_transform_server(     expression(       plot <- plot +         ggtitle(\"This is title\") +         xlab(x_axis_title)     )   ) )"},{"path":"https://insightsengineering.github.io/teal/main/articles/decorate-module-output.html","id":"handling-various-object-names","dir":"Articles","previous_headings":"","what":"Handling Various Object Names","title":"Customizing Module Output","text":"teal_transform_module relies names objects created within module. Writing decorator applies module can challenging different modules may use different object names. recommended create library decorator functions can adapted specific object names used teal modules. following example, focus output_name parameter see decorator can applied multiple modules: Decorator failures managed internal teal mechanism called trigger success, ensures data object within module remains intact. decorator fails, outputs shown, appropriate error message displayed.","code":"gg_xlab_decorator <- function(output_name) {   teal_transform_module(     label = \"X-axis decorator\",     ui = function(id) {       ns <- NS(id)       div(         textInput(ns(\"x_axis_title\"), \"X axis title\", value = \"x axis\")       )     },     server = function(id, data) {       moduleServer(id, function(input, output, session) {         reactive({           req(data())           within(data(),             {               output_name <- output_name +                 xlab(x_axis_title)             },             x_axis_title = input$x_axis_title,             output_name = as.name(output_name)           )         })       })     }   ) } failing_decorator <- teal_transform_module(   label = \"Failing decorator\",   ui = function(id) {     ns <- NS(id)     div(       textInput(ns(\"x_axis_title\"), \"X axis title\", value = \"x axis\")     )   },   server = function(id, data) {     moduleServer(id, function(input, output, session) {       reactive(stop(\"\\nThis is an error produced by decorator\\n\"))     })   } )"},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/articles/decorate-module-output.html","id":"example-module","dir":"Articles","previous_headings":"Decorating Plots","what":"Example Module","title":"Customizing Module Output","text":"include decorators teal module, pass arguments (ui_args server_args) module‚Äôs ui server components, used ui/srv_teal_transform_module. Please find example module sake article:","code":"tm_decorated_plot <- function(label = \"module\", transformators = list(), decorators = NULL) {   checkmate::assert_list(decorators, \"teal_transform_module\", null.ok = TRUE)    module(     label = label,     ui = function(id, decorators) {       ns <- NS(id)       div(         selectInput(ns(\"dataname\"), label = \"select dataname\", choices = NULL),         selectInput(ns(\"x\"), label = \"select x\", choices = NULL),         selectInput(ns(\"y\"), label = \"select y\", choices = NULL),         ui_transform_teal_data(ns(\"decorate\"), transformators = decorators),         plotOutput(ns(\"plot\")),         verbatimTextOutput(ns(\"text\"))       )     },     server = function(id, data, decorators) {       moduleServer(id, function(input, output, session) {         observeEvent(data(), {           updateSelectInput(inputId = \"dataname\", choices = names(data()))         })          observeEvent(input$dataname, {           req(input$dataname)           updateSelectInput(inputId = \"x\", choices = colnames(data()[[input$dataname]]))           updateSelectInput(inputId = \"y\", choices = colnames(data()[[input$dataname]]))         })          dataname <- reactive(req(input$dataname))         x <- reactive({           req(input$x, input$x %in% colnames(data()[[dataname()]]))           input$x         })          y <- reactive({           req(input$y, input$y %in% colnames(data()[[dataname()]]))           input$y         })         plot_data <- reactive({           req(dataname(), x(), y())           within(data(),             {               plot <- ggplot2::ggplot(dataname, ggplot2::aes(x = x, y = y)) +                 ggplot2::geom_point()             },             dataname = as.name(dataname()),             x = as.name(x()),             y = as.name(y())           )         })          plot_data_decorated_no_print <- srv_transform_teal_data(           \"decorate\",           data = plot_data,           transformators = decorators         )         plot_data_decorated <- reactive(           within(req(plot_data_decorated_no_print()), expr = plot)         )          plot_r <- reactive({           plot_data_decorated()[[\"plot\"]]         })          output$plot <- renderPlot(plot_r())         output$text <- renderText({           teal.code::get_code(req(plot_data_decorated()))         })       })     },     ui_args = list(decorators = decorators),     server_args = list(decorators = decorators)   ) }"},{"path":"https://insightsengineering.github.io/teal/main/articles/decorate-module-output.html","id":"application","dir":"Articles","previous_headings":"Decorating Plots","what":"Application","title":"Customizing Module Output","text":"","code":"library(ggplot2) app <- init(   data = teal_data(iris = iris, mtcars = mtcars),   modules = modules(     tm_decorated_plot(\"identity\"),     tm_decorated_plot(\"no-ui\", decorators = list(static_decorator)),     tm_decorated_plot(\"lang\", decorators = list(static_decorator_lang)),     tm_decorated_plot(\"interactive\", decorators = list(interactive_decorator)),     tm_decorated_plot(\"interactive-from lang\", decorators = list(interactive_decorator_lang)),     tm_decorated_plot(\"from-fun\", decorators = list(gg_xlab_decorator(\"plot\"))),     tm_decorated_plot(\"failing\", decorators = list(failing_decorator))   ) )  if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/articles/decorate-module-output.html","id":"example-module-1","dir":"Articles","previous_headings":"Multiple Decorators","what":"Example Module","title":"Customizing Module Output","text":"possible pass number decorators (n) module. example demonstrates handle dynamic number decorators, allowing user choose decorator apply list. makes module flexible capable accommodating various customization requirements. order decorator : Change x axis title Change y axis title Replace x axis title","code":"library(ggplot2) tm_decorated_plot <- function(label = \"module\", decorators = NULL) {   checkmate::assert_list(decorators, \"teal_transform_module\", null.ok = TRUE)   module(     label = label,     ui = function(id, decorators) {       ns <- NS(id)       div(         selectInput(ns(\"dataname\"), label = \"Select dataset\", choices = NULL),         selectInput(ns(\"x\"), label = \"Select x-axis\", choices = NULL),         selectInput(ns(\"y\"), label = \"Select y-axis\", choices = NULL),         selectInput(           ns(\"decorator_choice\"),           \"Choose decorator\",           choices = names(decorators),           selected = names(decorators)[1]         ),         div(           id = ns(\"decorate_wrapper\"),           lapply(names(decorators), function(decorator_name) {             div(               id = ns(paste0(\"decorate_\", decorator_name)),               ui_transform_teal_data(                 ns(paste0(\"decorate_\", decorator_name)),                 transformators = decorators[[decorator_name]]               )             )           })         ),         plotOutput(ns(\"plot\")),         verbatimTextOutput(ns(\"text\"))       )     },     server = function(id, data, decorators) {       moduleServer(id, function(input, output, session) {         observeEvent(data(), {           updateSelectInput(inputId = \"dataname\", choices = names(data()))         })          dataname <- reactive(req(input$dataname))          observeEvent(dataname(), {           updateSelectInput(inputId = \"x\", choices = colnames(data()[[input$dataname]]))           updateSelectInput(inputId = \"y\", choices = colnames(data()[[input$dataname]]))         })          observeEvent(input$decorator_choice, {           # Dynamically show only the selected decorator's UI           lapply(names(decorators), function(decorator_name) {             if (decorator_name == input$decorator_choice) {               shinyjs::show(paste0(\"decorate_\", decorator_name))             } else {               shinyjs::hide(paste0(\"decorate_\", decorator_name))             }           })         })          x <- reactive({           req(input$x, input$x %in% colnames(data()[[dataname()]]))           input$x         })          y <- reactive({           req(input$y, input$y %in% colnames(data()[[dataname()]]))           input$y         })         plot_data <- reactive({           req(dataname(), x(), y())           within(data(),             {               plot <- ggplot2::ggplot(dataname, ggplot2::aes(x = x, y = y)) +                 ggplot2::geom_point()             },             dataname = as.name(dataname()),             x = as.name(x()),             y = as.name(y())           )         })          selected_decorator <- reactive({           req(input$decorator_choice)           input$decorator_choice         })          decorated_data_no_print <- srv_transform_teal_data(           sprintf(\"decorate_%s\", selected_decorator()),           data = plot_data,           transformators = decorators[[selected_decorator()]]         )         decorated_data <- reactive(within(req(decorated_data_no_print()), expr = plot))          output$plot <- renderPlot(decorated_data()[[\"plot\"]])         output$text <- renderText({           req(input$decorator_choice)           teal.code::get_code(req(decorated_data()))         })       })     },     ui_args = list(decorators = decorators),     server_args = list(decorators = decorators)   ) } interactive_decorator_1 <- teal_transform_module(   label = \"Interactive decorator 1\",   ui = function(id) {     ns <- NS(id)     div(       textInput(ns(\"x_axis_title\"), \"X axis title\", value = \"x axis 1\")     )   },   server = function(id, data) {     moduleServer(id, function(input, output, session) {       reactive({         req(data())         within(data(),           {             plot <- plot +               xlab(title)           },           title = input$x_axis_title         )       })     })   } )  interactive_decorator_2 <- teal_transform_module(   label = \"Interactive decorator 2\",   ui = function(id) {     ns <- NS(id)     div(       textInput(ns(\"y_axis_title\"), \"Y axis title\", value = \"y axis 1\")     )   },   server = function(id, data) {     moduleServer(id, function(input, output, session) {       reactive({         req(data())         within(data(),           {             plot <- plot +               ylab(title)           },           title = input$y_axis_title         )       })     })   } )  interactive_decorator_3 <- teal_transform_module(   label = \"Interactive decorator 3\",   ui = function(id) {     ns <- NS(id)     div(       textInput(ns(\"x_axis_title\"), \"X axis title\", value = \"x axis 3\")     )   },   server = function(id, data) {     moduleServer(id, function(input, output, session) {       reactive({         req(data())         within(data(),           {             plot <- plot +               xlab(title)           },           title = input$x_axis_title         )       })     })   } )"},{"path":"https://insightsengineering.github.io/teal/main/articles/decorate-module-output.html","id":"application-1","dir":"Articles","previous_headings":"Multiple Decorators","what":"Application","title":"Customizing Module Output","text":"might noted, x axis title first decorator used won‚Äôt show resulting plot:","code":"app <- init(   data = teal_data(iris = iris, mtcars = mtcars),   modules = modules(     tm_decorated_plot(       \"dynamic_decorators\",       decorators = list(         decorator_1 = interactive_decorator_1,         decorator_2 = interactive_decorator_2,         decorator_3 = interactive_decorator_3       )     )   ) )  if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal/main/articles/decorate-module-output.html","id":"modules-with-multiple-outputs","dir":"Articles","previous_headings":"","what":"Modules with Multiple Outputs","title":"Customizing Module Output","text":"section, demonstrate extend teal module handle multiple outputs allow separate decoration . Specifically, module two outputs: ggplot plot table apply independent decorators output.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/decorate-module-output.html","id":"example-module-with-two-outputs","dir":"Articles","previous_headings":"Modules with Multiple Outputs","what":"Example Module with Two Outputs","title":"Customizing Module Output","text":"following module generates scatter plot summary table. outputs can decorated independently using decorators passed module:","code":"tm_decorated_plot_table <- function(label = \"module with two outputs\", decorators = list()) {   checkmate::assert_list(decorators, \"teal_transform_module\", null.ok = TRUE)    module(     label = label,     ui = function(id, decorators) {       ns <- NS(id)       div(         selectInput(ns(\"dataname\"), label = \"Select dataset\", choices = NULL),         selectInput(ns(\"x\"), label = \"Select x-axis\", choices = NULL),         selectInput(ns(\"y\"), label = \"Select y-axis\", choices = NULL),         ui_transform_teal_data(ns(\"decorate_plot\"), transformators = decorators$plot),         ui_transform_teal_data(ns(\"decorate_table\"), transformators = decorators$table),         plotOutput(ns(\"plot\")),         tableOutput(ns(\"table\")),         verbatimTextOutput(ns(\"text\"))       )     },     server = function(id, data, decorators) {       moduleServer(id, function(input, output, session) {         observeEvent(data(), {           updateSelectInput(inputId = \"dataname\", choices = names(data()))         })          dataname <- reactive(req(input$dataname))          observeEvent(dataname(), {           updateSelectInput(inputId = \"x\", choices = colnames(data()[[input$dataname]]))           updateSelectInput(inputId = \"y\", choices = colnames(data()[[input$dataname]]))         })          x <- reactive({           req(input$x, input$x %in% colnames(data()[[dataname()]]))           input$x         })          y <- reactive({           req(input$y, input$y %in% colnames(data()[[dataname()]]))           input$y         })          # Generate plot data         plot_data <- reactive({           req(dataname(), x(), y())           within(data(),             {               plot <- ggplot2::ggplot(dataname, ggplot2::aes(x = xvar, y = yvar)) +                 ggplot2::geom_point()             },             dataname = as.name(dataname()),             xvar = as.name(x()),             yvar = as.name(y())           )         })          # Generate table data         table_data <- reactive({           req(dataname())           within(data(),             {               table_data <- data.frame(Filter(Negate(is.na), lapply(dataname, mean, na.rm = TRUE)))             },             dataname = as.name(dataname())           )         })          # Apply decorators to plot         decorated_plot <- srv_transform_teal_data(           \"decorate_plot\",           data = plot_data,           transformators = decorators$plot         )          # Apply decorators to table         decorated_table <- srv_transform_teal_data(           \"decorate_table\",           data = table_data,           transformators = decorators$table         )          output$plot <- renderPlot(decorated_plot()[[\"plot\"]])          output$table <- renderTable(decorated_table()[[\"table_data\"]])          output$text <- renderText({           plot_code <- teal.code::get_code(req(decorated_plot()))           table_code <- teal.code::get_code(req(decorated_table()))           paste(\"# Plot Code:\", plot_code, \"\\n\\n# Table Code:\", table_code)         })       })     },     ui_args = list(decorators = decorators),     server_args = list(decorators = decorators)   ) }"},{"path":"https://insightsengineering.github.io/teal/main/articles/decorate-module-output.html","id":"example-decorators","dir":"Articles","previous_headings":"Modules with Multiple Outputs","what":"Example Decorators","title":"Customizing Module Output","text":"Plot Decorator: Adds title plot. Table Decorator: Adds row names summary table.","code":"plot_decorator <- teal_transform_module(   label = \"Decorate plot\",   ui = function(id) {     ns <- NS(id)     textInput(ns(\"plot_title\"), \"Plot Title\", value = \"Decorated Title (editable)\")   },   server = function(id, data) {     moduleServer(id, function(input, output, session) {       reactive({         req(data())         within(data(),           {             plot <- plot + ggplot2::ggtitle(ptitle) +               ggplot2::theme_minimal() +               ggplot2::theme(                 plot.title = element_text(face = \"bold\", size = 30, color = \"blue\")               )           },           ptitle = input$plot_title         )       })     })   } ) table_decorator <- teal_transform_module(   label = \"Decorate table\",   ui = function(id) shiny::tags$p(\"No UI needed for table decorator and could be ommited.\"),   server = make_teal_transform_server(     expression({       table_data[[\"Added by decorator\"]] <- paste0(\"Row \", seq_len(nrow(table_data)))     })   ) )"},{"path":"https://insightsengineering.github.io/teal/main/articles/decorate-module-output.html","id":"application-2","dir":"Articles","previous_headings":"Modules with Multiple Outputs","what":"Application","title":"Customizing Module Output","text":"","code":"app <- init(   data = teal_data(iris = iris, mtcars = mtcars),   modules = modules(     tm_decorated_plot_table(       \"plot_and_table\",       decorators = list(         plot = plot_decorator,         table = table_decorator       )     )   ) )  if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal/main/articles/filter-panel.html","id":"teal-apps-with-the-filter-panel","dir":"Articles","previous_headings":"","what":"teal apps with the filter panel","title":"Filter Panel","text":"filter panel integral part teal applications included right side. Based selections made filter panel, filter expressions executed passing data teal modules. technical details filter panel extensively described teal.slice documentation. default, init initializes filter panel without active filters allows user add filters column. start teal application predefined filters, one must specify filter argument. following example four filters specified using teal_slice function wrapped together teal_slices.","code":"library(teal)  app <- init(   data = teal_data(IRIS = iris, CARS = mtcars),   modules = example_module(),   filter = teal_slices(     teal_slice(dataname = \"IRIS\", varname = \"Sepal.Length\"),     teal_slice(dataname = \"IRIS\", varname = \"Species\", selected = \"setosa\"),     teal_slice(dataname = \"CARS\", varname = \"mpg\", selected = c(20, Inf)),     teal_slice(dataname = \"CARS\", expr = \"qsec < 20\", title = \"1/4 mile under 20 sec\", id = \"qsec_20\")   ) )  if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/articles/filter-panel.html","id":"filter-panel-respective-to-teal_module","dir":"Articles","previous_headings":"Extending teal.slice","what":"Filter panel respective to teal_module","title":"Filter Panel","text":"teal_module (see ?module) object contains datanames attribute determines data sets sent module. filter panel display data sets hide rest module active.","code":"library(teal)  app <- init(   data = teal_data(IRIS = iris, CARS = mtcars),   modules = modules(     example_module(label = \"all datasets\"),     example_module(label = \"IRIS only\", datanames = \"IRIS\"),     example_module(label = \"CARS only\", datanames = \"CARS\"),     example_module(label = \"no filter panel\", datanames = NULL)   ) ) if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal/main/articles/filter-panel.html","id":"global-and-module-specific-filter-panel","dir":"Articles","previous_headings":"Extending teal.slice","what":"Global and module specific filter panel","title":"Filter Panel","text":"teal contains teal_slices function extends original teal_slices found teal.slice adding two arguments: module_specific mapping. default init initializes app ‚Äúglobal‚Äù filter panel, modules use filters. Setting module_specific = TRUE switches ‚Äúmodule-specific‚Äù filter panel, module can different set filters active time. still possible set global filters shared among modules. One possible scenario depicted figure : filter 1 shared modules filter 2 shared module 1 module 3 filter 3 used module 2 filter 4 used module 1 filter 5 filter 6 active modules  achieve described setup, one must set module_specific argument TRUE use mapping argument match filters modules. mapping takes named list element names correspond module labels, elements vectors teal_slice ids applied module startup. teal_slices listed element called \"global_filters\" applied modules. detailed explanation filter states, see teal.slice vignette.","code":"library(teal)  app <- init(   data = teal_data(mtcars = mtcars),   modules = modules(     example_module(label = \"module 1\"),     example_module(label = \"module 2\"),     example_module(label = \"module 3\"),     example_module(label = \"module 4\")   ),   filter = teal_slices(     # filters created with id     teal_slice(dataname = \"mtcars\", varname = \"mpg\", id = \"filter 1\"),     teal_slice(dataname = \"mtcars\", varname = \"cyl\", id = \"filter 2\"),     teal_slice(dataname = \"mtcars\", varname = \"disp\", id = \"filter 3\"),     teal_slice(dataname = \"mtcars\", varname = \"hp\", id = \"filter 4\"),     teal_slice(dataname = \"mtcars\", varname = \"drat\", id = \"filter 5\"),     teal_slice(dataname = \"mtcars\", varname = \"wt\", id = \"filter 6\"),     # module-specific filtering enabled     module_specific = TRUE,     # filters mapped to modules     mapping = list(       \"module 1\" = c(\"filter 2\", \"filter 4\"),       \"module 2\" = \"filter 3\",       \"module 3\" = \"filter 2\",       global_filters = \"filter 1\"     )   ) )  if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal/main/articles/getting-started-with-teal.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with teal","text":"teal shiny-based interactive exploration framework analyzing data, particular emphasis CDISC clinical trial data. teal applications allow users : ‚ÄúPull‚Äù data external data sources Dynamically filter data used analyses Generate reproducible code regenerate -screen analyses Create download reports containing results analyses (analysis modules support reporting) addition, teal framework provides application developers : large suite custom-made standard analysis modules included applications logging framework facilitate debugging applications advanced users framework can also create new analysis modules can added teal applications.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/getting-started-with-teal.html","id":"your-first-teal-application","dir":"Articles","previous_headings":"","what":"Your first teal application:","title":"Getting Started with teal","text":"simple teal application takes iris mtcars datasets displays contents: Hovering image shows teal application generated code.  Every teal application composed following elements, can controlled app developer passing arguments init function: Application Title (browser‚Äôs tab title): title application. Application Header Footer (top bottom app): content placed top bottom application. example code: two modules named ‚ÄúModule 1‚Äù ‚ÄúModule 2‚Äù. Module Content (panel middle): outputs currently active module. example code: filter panel initialized filter Species variable iris dataset.","code":"library(teal)  app <- init(   data = teal_data(IRIS = iris, MTCARS = mtcars),   modules = modules(     example_module(\"Module 1\"),     example_module(\"Module 2\")   ),   filter = teal_slices(     teal_slice(dataname = \"IRIS\", varname = \"Species\", selected = \"setosa\")   ) ) |>   modify_title(\"My first teal application\") |>   modify_header(h3(\"My first teal application\")) |>   modify_footer(tags$div(a(\"Powered by teal\", href = \"https://insightsengineering.github.io/teal/main/latest-tag/\")))  if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal/main/articles/getting-started-with-teal.html","id":"creating-your-own-applications","dir":"Articles","previous_headings":"","what":"Creating your own applications","title":"Getting Started with teal","text":"key function use create teal application init, requires two mandatory arguments: data modules. optional arguments init, can used customize application. Please refer documentation init details.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/getting-started-with-teal.html","id":"application-data","dir":"Articles","previous_headings":"Creating your own applications","what":"Application data","title":"Getting Started with teal","text":"data argument init function specifies data used application. datasets used teal application must passed teal_data object. also possible specify relationships datasets using join_keys argument case datasets related. See vignette details. data available pulled remote source, init must receive teal_data_module specifies obtain desired datasets put teal_data object. See vignette details. order use CDISC clinical trial data teal application cdisc_data function used instead. Custom SDTM standards can handled teal_data join_keys. details, recommend exploring teal.data package documentation.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/getting-started-with-teal.html","id":"modules","dir":"Articles","previous_headings":"Creating your own applications","what":"Modules","title":"Getting Started with teal","text":"modules argument init consists list teal modules (can wrapped together using function modules). Core teal developers created several universal teal modules can useful teal application. learn create modules, please explore Creating Custom Modules vignette. use predefined modules, see references links modules.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/getting-started-with-teal.html","id":"defining-filters","dir":"Articles","previous_headings":"Creating your own applications","what":"Defining filters","title":"Getting Started with teal","text":"optional filter argument init allows initialize application predefined filters. details see Filter Panel vignette .","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/getting-started-with-teal.html","id":"reporting","dir":"Articles","previous_headings":"Creating your own applications","what":"Reporting","title":"Getting Started with teal","text":"modules teal application support reporting (see teal.reporter details), users application can add outputs modules report. report can downloaded special Report Previewer module added application additional tab, users can view configure reports downloading . See details vignette.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/getting-started-with-teal.html","id":"reproducible-code","dir":"Articles","previous_headings":"Creating your own applications","what":"Reproducible code","title":"Getting Started with teal","text":"teal hands data reproducible code every module included application. Note teal display code, modules‚Äô responsibility. example, example_module function used shows code main panel together outputs. details see vignette.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/getting-started-with-teal.html","id":"where-to-go-next","dir":"Articles","previous_headings":"","what":"Where to go next","title":"Getting Started with teal","text":"learn teal framework recommend first exploring available analysis modules. example see: general analysis modules clinical trial reporting modules modules analyzing MultiAssayExperiment objects demo teal apps see: gallery sample apps based teal catalog Tables, Listings Graphs catalog Biomarker Analysis Templates Tables Graphs teal framework relies set supporting packages whose documentation provides -depth information. packages interest defining tealapplications : teal.data: defining data teal application. teal.slice: defining data filtering passing teal modules.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/including-data-in-teal-applications.html","id":"data-in-teal-applications","dir":"Articles","previous_headings":"","what":"Data in teal Applications","title":"Including Data in teal Applications","text":"teal framework readily accepts general, non-relational data. Modules defined teal.modules.general package designed work well kind data. Relational data handled just well mechanism passing data applications virtually . includes clinical data conforms ADaM standard. working making framework extendable support data structures can added relative ease. Currently support offered MultiAssayExperiment class. applications use teal_data class data container. teal_data objects passed init build application, modified filter panel (applicable) passed modules. Thus, first step building teal app creating teal_data object.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/including-data-in-teal-applications.html","id":"general-data","dir":"Articles","previous_headings":"Data in teal Applications","what":"General data","title":"Including Data in teal Applications","text":"teal_data object created calling teal_data function passing data objects name:value pairs. Note iris cars added datanames property data (see datanames property). sufficient run teal app.","code":"library(teal)  # create teal_data data <- teal_data(iris = iris, cars = mtcars) # build app app <- init(   data = data,   modules = example_module() )  # run app shinyApp(app$ui, app$server)"},{"path":"https://insightsengineering.github.io/teal/main/articles/including-data-in-teal-applications.html","id":"reproducible-data","dir":"Articles","previous_headings":"Data in teal Applications","what":"Reproducible data","title":"Including Data in teal Applications","text":"teal_data object stores data separate environment. Therefore, modifying stored datasets requires processing code evaluated environment. Following logic, one can create empty teal_data object populate evaluating code. can done using eval_code function , conveniently, using within function. key difference eval_code within former accepts code character vector language objects (calls expressions), within accepts inline code. See ?qenv details. Note first example data created passing data objects, code used create data objects unknown therefore process reproduced. Inspecting code app created reveals note preprocessing code absent.  necessary code can supplied code argument teal_data function.  Keep mind code executed teal_data‚Äôs environment, may reproduce environment. object considered unverified (see verified property). reproducibility required, recommend creating empty teal_data object evaluating code.","code":"# create empty object data_empty <- teal_data()  # run code in the object data_populated_1 <- eval_code(data_empty, code = \"iris <- iris                                                   cars <- mtcars\") # alternative data_populated_2 <- within(data_empty, {   iris <- iris   cars <- mtcars }) data_with_code <- teal_data(   iris = iris, cars = mtcars,   code = \"iris <- iris           cars <- mtcars\" )"},{"path":"https://insightsengineering.github.io/teal/main/articles/including-data-in-teal-applications.html","id":"code-from-file","dir":"Articles","previous_headings":"Data in teal Applications > Reproducible data","what":"code from file","title":"Including Data in teal Applications","text":"ability pass code character vector eval_code opens door using code stored file.","code":"# not run data_from_file <- teal_data() data_from_file <- eval_code(data, readLines(\"<path_to_file>\"))"},{"path":"https://insightsengineering.github.io/teal/main/articles/including-data-in-teal-applications.html","id":"creating-data-in-app","dir":"Articles","previous_headings":"Data in teal Applications","what":"Creating data in-app","title":"Including Data in teal Applications","text":"one departure passing teal_data object init data exist environment app run, e.g. pulled remote source. cases teal_data_module must used. See vignette detailed description.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/including-data-in-teal-applications.html","id":"clinical-data","dir":"Articles","previous_headings":"","what":"Clinical data","title":"Including Data in teal Applications","text":"Currently teal supports two specialized data formats.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/including-data-in-teal-applications.html","id":"adam-data","dir":"Articles","previous_headings":"Clinical data","what":"ADaM data","title":"Including Data in teal Applications","text":"ADaM data model, defined CDISC standards, specifies relationships subject-level parent dataset observation-level child datasets. cdisc_data function takes advantage fact automatically set default joining keys (see join_keys property). example , two standard ADaM datasets (ADSL ADTTE) passed cdisc_data.","code":"# create cdisc_data data_cdisc <- cdisc_data(ADSL = teal.data::rADSL, ADTTE = teal.data::rADSL)  names(data_cdisc) #> [1] \"ADSL\"  \"ADTTE\" join_keys(data_cdisc) #> A join_keys object containing foreign keys between 2 datasets: #> ADSL: [STUDYID, USUBJID] #>   <-- ADTTE: [STUDYID, USUBJID] #> ADTTE: [STUDYID, USUBJID, PARAMCD] #>   --> ADSL: [STUDYID, USUBJID] app <- init(   data = data_cdisc,   modules = example_module() ) shinyApp(app$ui, app$server)"},{"path":"https://insightsengineering.github.io/teal/main/articles/including-data-in-teal-applications.html","id":"multiassayexperiment-data","dir":"Articles","previous_headings":"Clinical data","what":"MultiAssayExperiment data","title":"Including Data in teal Applications","text":"MultiAssayExperiment package offers data structure representing analyzing multi-omics experiments involve multi-modal, high-dimensionality data, DNA mutations, protein RNA abundance, chromatin occupancy, etc., biological specimens. MultiAssayExperiment class described detail . MultiAssayExperiment objects (MAEs) placed teal_data just like normal objects. Due unique structure MAE, teal requires special considerations building teal modules. Therefore, guarantee modules work properly MAEs. package teal.modules.hermes developed specifically MAE mind reliable. filter panel supports MAEs box.","code":"library(MultiAssayExperiment) utils::data(miniACC)  data_mae <- teal_data(MAE = miniACC)  app <- init(   data = data_mae,   modules = example_module() ) shinyApp(app$ui, app$server)"},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/articles/including-data-in-teal-applications.html","id":"join_keys","dir":"Articles","previous_headings":"teal_data properties","what":"join_keys","title":"Including Data in teal Applications","text":"Using relational data requires specifying joining keys pair datasets. Primary keys unique row identifiers individual datasets thus specified dataset. Foreign keys describe mapping variables datasets. Joining keys stored join_keys property, can set creating teal_data object, using join_keys argument, using join_keys function. detailed explanation join keys, see teal.data vignette. (back ADaM Data)","code":"ds1 <- data.frame(   id = seq(1, 10),   group = rep(c(\"A\", \"B\"), each = 5) ) ds2 <- data.frame(   group = c(\"A\", \"B\"),   condition = c(\"condition1\", \"condition2\") ) keys <- join_keys(   join_key(\"DS1\", keys = \"id\"),   join_key(\"DS2\", keys = \"group\"),   join_key(\"DS1\", \"DS2\", keys = c(\"group\" = \"group\")) ) data_relational1 <- teal_data(DS1 = ds1, DS2 = ds2, join_keys = keys) data_relational2 <- teal_data(DS1 = ds1, DS2 = ds2) join_keys(data_relational2) <- keys"},{"path":"https://insightsengineering.github.io/teal/main/articles/including-data-in-teal-applications.html","id":"verified","dir":"Articles","previous_headings":"teal_data properties","what":"verified","title":"Including Data in teal Applications","text":"teal_data allows tracking code data creation data filtering data analysis whole process can reproduced. verified property designates whether reproducibility confirmed. teal_data objects created empty modified evaluating code within considered verified default. created data objects alone data objects code verified default, can become verified running verify function. detailed explanation verification, see teal.data vignette. (back Reproducible Data)","code":"data_with_code #> ‚úñ unverified teal_data object #> <environment: 0x561135858758> üîí  #> Parent: <environment: package:teal>  #> Bindings: #> - cars: [data.frame] #> - iris: [data.frame]  data_with_objects_and_code <- teal_data(iris = iris, cars = mtcars, code = expression(iris <- iris, cars <- mtcars)) data_with_objects_and_code #> ‚úñ unverified teal_data object #> <environment: 0x561131cc0750> üîí  #> Parent: <environment: package:teal>  #> Bindings: #> - cars: [data.frame] #> - iris: [data.frame]  data_with_objects_and_code_ver <- verify(data_with_objects_and_code) data_with_objects_and_code_ver #> ‚úÖÔ∏é verified teal_data object #> <environment: 0x561131cc0750> üîí  #> Parent: <environment: package:teal>  #> Bindings: #> - cars: [data.frame] #> - iris: [data.frame]"},{"path":"https://insightsengineering.github.io/teal/main/articles/including-data-in-teal-applications.html","id":"hidden-datasets","dir":"Articles","previous_headings":"teal_data properties","what":"Hidden datasets","title":"Including Data in teal Applications","text":"Objects name starts dot (.) hidden teal_data whole teal application. can used pass auxiliary objects teal_data instance, without exposing app user. example: Proxy variables column modifications Temporary datasets used create final ones Connection objects","code":"my_data <- teal_data() my_data <- within(my_data, {   .data1 <- data.frame(id = 1:10, x = 11:20)   .data2 <- data.frame(id = 1:10, y = 11:20)   data <- merge(.data1, .data2) })  ls(my_data) #> [1] \"data\" names(my_data) #> [1] \"data\"  app <- init(data = my_data, modules = example_module())  if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal/main/articles/including-data-in-teal-applications.html","id":"further-reading","dir":"Articles","previous_headings":"","what":"Further reading","title":"Including Data in teal Applications","text":"complete guide teal_data class, please refer teal.data package.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/teal-options.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Modifying a teal Application With R Options","text":"R packages use options modify runtime behavior. usually specify sensible default values internal function arguments determine responses users actions. example, testthat uses option testthat.progress.max_fails define default number failed expectations testing functions terminate execution. adjustable values can exposed function parameters, confined option. vignette details options available package teal ‚Äôs supporting packages teal.logger, teal.widgets, teal.slice.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/teal-options.html","id":"setting-an-option","dir":"Articles","previous_headings":"","what":"Setting an option","title":"Modifying a teal Application With R Options","text":"time interactive session, can change option using: way change options execution specific block code withr package like : line run option, digits, go back value line run. function getOption allows inspect value option: set, value option persists session, returns default value new session. Make sure change options teal-related packages loaded initialize options overwrite custom values.","code":"options(option_to_set = \"value\") withr::with_options(list(digits = 3), print(pi)) ## [1] 3.14 getOption(\"option_to_set\") ## [1] \"value\""},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/articles/teal-options.html","id":"teal-bs_theme-bslibbs_theme-object","dir":"Articles","previous_headings":"Options used in a teal application","what":"teal.bs_theme (bslib::bs_theme object)","title":"Modifying a teal Application With R Options","text":"option controls bootstrap theme version used teal apps. Achieve better UX customized UI app. Please see vignette Bootstrap themes read functionality. Default: NULL","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/teal-options.html","id":"teal-load_nest_code-character","dir":"Articles","previous_headings":"Options used in a teal application","what":"teal.load_nest_code (character)","title":"Modifying a teal Application With R Options","text":"value option appended top code rendered using Show R Code modal button. Default: \"# Add code install/load NEST environment \".","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/teal-options.html","id":"teal-threshold_slider_vs_checkboxgroup-numeric","dir":"Articles","previous_headings":"Options used in a teal application","what":"teal.threshold_slider_vs_checkboxgroup (numeric)","title":"Modifying a teal Application With R Options","text":"threshold determines variable treated factor filter panel. number unique values variable less threshold variable treated factor instead original class. example, imagine teal.threshold_slider_vs_checkboxgroup equals 2. numeric variable c(1, 1, 1), one unique value, treated factor filter panel (filter panel !). filter panel creates checkbox widget filter values variable, factor variable, instead usual numeric range selector. Default: 5.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/teal-options.html","id":"teal-basic_table_args-basic_table_args-object","dir":"Articles","previous_headings":"Options used in a teal application","what":"teal.basic_table_args (basic_table_args object)","title":"Modifying a teal Application With R Options","text":"specifies list arguments passed every call rtables::basic_table made teal application. can used format rtables without making changes application code. See documentation teal.widgets::basic_table_args information. Default: teal.widgets::basic_table_args().","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/teal-options.html","id":"teal-ggplot2_args-ggplot2_args-object","dir":"Articles","previous_headings":"Options used in a teal application","what":"teal.ggplot2_args (ggplot2_args object)","title":"Modifying a teal Application With R Options","text":"option allows modifying labels themes ggplot2 plots teal application. See documentation teal.widgets::ggplot2_args information. Default: teal.widgets::ggplot2_args().","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/teal-options.html","id":"teal-plot_dpi-integer-value-24-or-larger","dir":"Articles","previous_headings":"Options used in a teal application","what":"teal.plot_dpi (integer value 24 or larger)","title":"Modifying a teal Application With R Options","text":"option controls dots per inch graphs rendered downloaded using module plot_with_settings teal.widgets package. Default: 72","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/teal-options.html","id":"teal-log_layout-character","dir":"Articles","previous_headings":"Options used in a teal application","what":"teal.log_layout (character)","title":"Modifying a teal Application With R Options","text":"defines layout log message used teal application. teal uses layout format emitted log messages. Read documentation teal.logger::register_logger information. must set loading teal package(s). case option set attaching packages, please re-attach packages use correctly. Default: \"[{level}] {format(time, \\\"%Y-%m-%d %H:%M:%OS4\\\")} pid:{pid} token:[{token}] {ans} {msg}\". Note layout formatted glue package.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/teal-options.html","id":"teal-log_level-character","dir":"Articles","previous_headings":"Options used in a teal application","what":"teal.log_level (character)","title":"Modifying a teal Application With R Options","text":"logging level threshold used teal application. teal application emit logs level. See documentation logger::TRACE possible values logging threshold information . must set loading teal package(s). case option set attaching packages, please re-attach packages use correctly. Default: \"INFO\". Note two levels considered less severe \"INFO\": \"DEBUG\" \"TRACE\". order see log messages two levels well, change log level default \"TRACE\", least severe log level.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/teal-options.html","id":"teal-show_js_log-logical","dir":"Articles","previous_headings":"Options used in a teal application","what":"teal.show_js_log (logical)","title":"Modifying a teal Application With R Options","text":"indicates whether print JavaScript console logs R console. set TRUE, logs printed; otherwise, won‚Äôt. Default: FALSE.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/teal-options.html","id":"teal-lockfile-mode-character","dir":"Articles","previous_headings":"Options used in a teal application","what":"teal.lockfile.mode (character)","title":"Modifying a teal Application With R Options","text":"enables compute renv lockfile shows button \"download lockfile\" footer. Values: \"auto\" - auto detect whether compute lockfile \"enabled\" - compute lockfile show \"download lockfile\" footer \"disabled\" - compute lockfile show \"download lockfile\" footer Default: \"auto\". read lockfile usage creation check ?teal::module_teal_lockfile.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/articles/teal-options.html","id":"teal_logging","dir":"Articles","previous_headings":"Deprecated options","what":"teal_logging","title":"Modifying a teal Application With R Options","text":"Deprecated favor using teal.logger package logging.","code":""},{"path":"https://insightsengineering.github.io/teal/main/articles/teal-options.html","id":"teal_show_js_log","dir":"Articles","previous_headings":"Deprecated options","what":"teal_show_js_log","title":"Modifying a teal Application With R Options","text":"Deprecated favor teal.show_js_log (see ).","code":""},{"path":"https://insightsengineering.github.io/teal/main/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dawid Kaledkowski. Author, maintainer. Pawel Rucki. Author. Aleksander Chlebowski. Author. Andre Verissimo. Author. Kartikeya Kirar. Author. Vedha Viyash. Author. Marcin Kosinski. Author. Adrian Waddell. Author. Chendi Liao. Reviewer. Dony Unardi. Reviewer. Nikolas Burkoff. Author. Mahmoud Hallal. Author. Maciej Nasinski. Author. Konrad Pagacz. Author. Junlue Zhao. Author. Tadeusz Lewandowski. Author. F. Hoffmann-La Roche AG. Copyright holder, funder. Maximilian Mordig. Contributor.","code":""},{"path":"https://insightsengineering.github.io/teal/main/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kaledkowski D, Rucki P, Chlebowski , Verissimo , Kirar K, Viyash V, Kosinski M, Waddell , Burkoff N, Hallal M, Nasinski M, Pagacz K, Zhao J, Lewandowski T (2025). teal: Exploratory Web Apps Analyzing Clinical Trials Data. R package version 0.15.2.9119, https://github.com/insightsengineering/teal/, https://insightsengineering.github.io/teal/main/.","code":"@Manual{,   title = {teal: Exploratory Web Apps for Analyzing Clinical Trials Data},   author = {Dawid Kaledkowski and Pawel Rucki and Aleksander Chlebowski and Andre Verissimo and Kartikeya Kirar and Vedha Viyash and Marcin Kosinski and Adrian Waddell and Nikolas Burkoff and Mahmoud Hallal and Maciej Nasinski and Konrad Pagacz and Junlue Zhao and Tadeusz Lewandowski},   year = {2025},   note = {R package version 0.15.2.9119,     https://github.com/insightsengineering/teal/},   url = {https://insightsengineering.github.io/teal/main/}, }"},{"path":"https://insightsengineering.github.io/teal/main/index.html","id":"teal-interactive-exploratory-data-analysis-with-shiny-web-applications-","dir":"","previous_headings":"","what":"Exploratory Web Apps for Analyzing Clinical Trials Data","title":"Exploratory Web Apps for Analyzing Clinical Trials Data","text":"teal shiny-based interactive exploration framework analyzing data. teal applications require app developers specify: CDISC data, commonly used clinical trial reporting Independent datasets, example data.frame Related datasets, example set data.frames key columns enable data joins MultiAssayExperiment objects R data structures representing analyzing multi-omics experiments teal.modules.general: general modules exploring relational/independent/CDISC data teal.modules.clinical: modules specific CDISC data clinical trial reporting teal.modules.hermes: modules analyzing MultiAssayExperiment objects lot functionality teal framework derives following packages: teal.data: creating loading data needed teal applications. teal.widgets: shiny components used within teal. teal.slice: provides filtering panel allow filtering data. teal.code: handles reproducibility outputs. teal.logger: standardizes logging within teal framework. teal.reporter: allows teal applications generate reports. Dive deeper teal comprehensive video guide. Please click image start learning:","code":""},{"path":"https://insightsengineering.github.io/teal/main/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Exploratory Web Apps for Analyzing Clinical Trials Data","text":"Alternatively, might also use development version.","code":"install.packages(\"teal\") # install.packages(\"pak\") pak::pak(\"insightsengineering/teal\")"},{"path":"https://insightsengineering.github.io/teal/main/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Exploratory Web Apps for Analyzing Clinical Trials Data","text":"Please see teal.gallery TLG Catalog see examples teal apps. Please start ‚ÄúTechnical Blueprint‚Äù article, ‚ÄúGetting Started‚Äù article, package vignettes detailed guide.","code":"library(teal)  app <- init(   data = teal_data(iris = iris),   modules = list(     module(       label = \"iris histogram\",       server = function(input, output, session, data) {         updateSelectInput(session = session,                           inputId =  \"var\",                           choices = names(data()[[\"iris\"]])[1:4])          output$hist <- renderPlot({           req(input$var)           hist(x = data()[[\"iris\"]][[input$var]])         })       },       ui = function(id) {         ns <- NS(id)         list(           selectInput(inputId = ns(\"var\"),                       label =  \"Column name\",                       choices = NULL),           plotOutput(outputId = ns(\"hist\"))         )       }     )   ) )  shinyApp(app$ui, app$server)"},{"path":"https://insightsengineering.github.io/teal/main/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"Exploratory Web Apps for Analyzing Clinical Trials Data","text":"encounter bug feature request, please file issue. questions, discussions, updates, use teal channel pharmaverse slack workspace.","code":""},{"path":"https://insightsengineering.github.io/teal/main/index.html","id":"acknowledgment","dir":"","previous_headings":"","what":"Acknowledgment","title":"Exploratory Web Apps for Analyzing Clinical Trials Data","text":"package result joint efforts many developers stakeholders. like thank everyone contributed far!","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":null,"dir":"Reference","previous_headings":"","what":"Drive a teal application ‚Äî TealAppDriver","title":"Drive a teal application ‚Äî TealAppDriver","text":"Drive teal application Drive teal application","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Drive a teal application ‚Äî TealAppDriver","text":"Extension shinytest2::AppDriver class methods driving teal application performing interactions shinytest2 tests.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Drive a teal application ‚Äî TealAppDriver","text":"shinytest2::AppDriver -> TealAppDriver","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Drive a teal application ‚Äî TealAppDriver","text":"shinytest2::AppDriver$expect_download() shinytest2::AppDriver$expect_html() shinytest2::AppDriver$expect_js() shinytest2::AppDriver$expect_screenshot() shinytest2::AppDriver$expect_text() shinytest2::AppDriver$expect_unique_names() shinytest2::AppDriver$expect_values() shinytest2::AppDriver$get_chromote_session() shinytest2::AppDriver$get_dir() shinytest2::AppDriver$get_download() shinytest2::AppDriver$get_html() shinytest2::AppDriver$get_js() shinytest2::AppDriver$get_logs() shinytest2::AppDriver$get_screenshot() shinytest2::AppDriver$get_text() shinytest2::AppDriver$get_url() shinytest2::AppDriver$get_value() shinytest2::AppDriver$get_values() shinytest2::AppDriver$get_variant() shinytest2::AppDriver$get_window_size() shinytest2::AppDriver$log_message() shinytest2::AppDriver$run_js() shinytest2::AppDriver$set_inputs() shinytest2::AppDriver$set_window_size() shinytest2::AppDriver$stop() shinytest2::AppDriver$upload_file() shinytest2::AppDriver$view() shinytest2::AppDriver$wait_for_idle() shinytest2::AppDriver$wait_for_js() shinytest2::AppDriver$wait_for_value()","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Drive a teal application ‚Äî TealAppDriver","text":"TealAppDriver$new() TealAppDriver$click() TealAppDriver$expect_no_shiny_error() TealAppDriver$expect_no_validation_error() TealAppDriver$expect_validation_error() TealAppDriver$set_input() TealAppDriver$navigate_teal_tab() TealAppDriver$active_ns() TealAppDriver$active_module_ns() TealAppDriver$active_module_element() TealAppDriver$active_module_element_text() TealAppDriver$active_filters_ns() TealAppDriver$active_data_summary_ns() TealAppDriver$active_data_summary_element() TealAppDriver$get_active_module_input() TealAppDriver$get_active_module_output() TealAppDriver$get_active_module_table_output() TealAppDriver$get_active_module_plot_output() TealAppDriver$set_active_module_input() TealAppDriver$get_active_filter_vars() TealAppDriver$get_active_data_summary_table() TealAppDriver$is_visible() TealAppDriver$get_active_data_filters() TealAppDriver$add_filter_var() TealAppDriver$remove_filter_var() TealAppDriver$set_active_filter_selection() TealAppDriver$get_attr() TealAppDriver$get_html_rvest() TealAppDriver$open_url() TealAppDriver$wait_for_active_module_value() TealAppDriver$clone()","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Initialize TealAppDriver object testing teal application.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$new(   data,   modules,   filter = teal_slices(),   title_args = list(),   header = tags$p(),   footer = tags$p(),   landing_popup_args = NULL,   timeout = rlang::missing_arg(),   load_timeout = rlang::missing_arg(),   ... )"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drive a teal application ‚Äî TealAppDriver","text":"data, modules, filter arguments passed init title_args, header, footer, landing_popup_args pass modifier functions. timeout (numeric) Default number milliseconds timeout timeout_ parameter TealAppDriver class. Defaults 20s. See shinytest2::AppDriver new method details change via options environment variables. load_timeout (numeric) long wait app load, ms. includes time start R. Defaults 100s. See shinytest2::AppDriver new method details change via options environment variables ... Additional arguments passed shinytest2::AppDriver$new","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Drive a teal application ‚Äî TealAppDriver","text":"Object class TealAppDriver","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-click-","dir":"Reference","previous_headings":"","what":"Method click()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Append parent shinytest2::AppDriver click method call waif_for_idle() method.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$click(...)"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drive a teal application ‚Äî TealAppDriver","text":"... arguments passed parent shinytest2::AppDriver click() method.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-expect-no-shiny-error-","dir":"Reference","previous_headings":"","what":"Method expect_no_shiny_error()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Check app shiny errors. checks global shiny errors. Note shiny errors dependent shiny server render captured teal module tab visited shiny trigger server computations tab invisible. , navigate module tab want test calling function. Although, catches errors hidden module tabs already rendered.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$expect_no_shiny_error()"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-expect-no-validation-error-","dir":"Reference","previous_headings":"","what":"Method expect_no_validation_error()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Check app validation errors. checks global shiny validation errors.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$expect_no_validation_error()"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-expect-validation-error-","dir":"Reference","previous_headings":"","what":"Method expect_validation_error()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Check app validation errors. checks global shiny validation errors.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$expect_validation_error()"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-set-input-","dir":"Reference","previous_headings":"","what":"Method set_input()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Set input teal app.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$set_input(input_id, value, ...)"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drive a teal application ‚Äî TealAppDriver","text":"input_id (character) shiny input id complete name space. value value set input . ... Additional arguments passed shinytest2::AppDriver$set_inputs","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Drive a teal application ‚Äî TealAppDriver","text":"TealAppDriver object invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-navigate-teal-tab-","dir":"Reference","previous_headings":"","what":"Method navigate_teal_tab()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Navigate teal tabs teal app.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$navigate_teal_tab(tabs)"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drive a teal application ‚Äî TealAppDriver","text":"tabs (character) Labels tabs navigate . order tabs important, start parent level tab. Note: case teal tab group duplicate names, first tab selected, wish select second tab name, use suffix \"_1\". wish select third tab name, use suffix \"_2\" .","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Drive a teal application ‚Äî TealAppDriver","text":"TealAppDriver object invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-active-ns-","dir":"Reference","previous_headings":"","what":"Method active_ns()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Get active shiny name space different components teal app.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$active_ns()"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Drive a teal application ‚Äî TealAppDriver","text":"(list) list active shiny name space teal components.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-active-module-ns-","dir":"Reference","previous_headings":"","what":"Method active_module_ns()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Get active shiny name space interacting module content.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$active_module_ns()"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Drive a teal application ‚Äî TealAppDriver","text":"(string) active shiny name space component.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-active-module-element-","dir":"Reference","previous_headings":"","what":"Method active_module_element()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Get active shiny name space bound custom element name.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$active_module_element(element)"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drive a teal application ‚Äî TealAppDriver","text":"element character(1) custom element name.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Drive a teal application ‚Äî TealAppDriver","text":"(string) active shiny name space component bound input element.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-active-module-element-text-","dir":"Reference","previous_headings":"","what":"Method active_module_element_text()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Get text active shiny name space bound custom element name.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$active_module_element_text(element)"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drive a teal application ‚Äî TealAppDriver","text":"element character(1) text custom element name.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Drive a teal application ‚Äî TealAppDriver","text":"(string) text active shiny name space component bound input element.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-active-filters-ns-","dir":"Reference","previous_headings":"","what":"Method active_filters_ns()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Get active shiny name space interacting filter panel.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$active_filters_ns()"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Drive a teal application ‚Äî TealAppDriver","text":"(string) active shiny name space component.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-active-data-summary-ns-","dir":"Reference","previous_headings":"","what":"Method active_data_summary_ns()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Get active shiny name space interacting data-summary panel.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$active_data_summary_ns()"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Drive a teal application ‚Äî TealAppDriver","text":"(string) active shiny name space data-summary component.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-active-data-summary-element-","dir":"Reference","previous_headings":"","what":"Method active_data_summary_element()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Get active shiny name space bound custom element name.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$active_data_summary_element(element)"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drive a teal application ‚Äî TealAppDriver","text":"element character(1) custom element name.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Drive a teal application ‚Äî TealAppDriver","text":"(string) active shiny name space component bound input element.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-get-active-module-input-","dir":"Reference","previous_headings":"","what":"Method get_active_module_input()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Get input module teal app. function access inputs name space current active teal module.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$get_active_module_input(input_id)"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drive a teal application ‚Äî TealAppDriver","text":"input_id (character) shiny input id get value .","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Drive a teal application ‚Äî TealAppDriver","text":"value shiny input.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-get-active-module-output-","dir":"Reference","previous_headings":"","what":"Method get_active_module_output()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Get output module teal app. function access outputs name space current active teal module.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$get_active_module_output(output_id)"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drive a teal application ‚Äî TealAppDriver","text":"output_id (character) shiny output id get value .","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Drive a teal application ‚Äî TealAppDriver","text":"value shiny output.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-get-active-module-table-output-","dir":"Reference","previous_headings":"","what":"Method get_active_module_table_output()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Get output module's teal.widgets::table_with_settings DT::DTOutput teal app. function access outputs name space current active teal module.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$get_active_module_table_output(table_id, which = 1)"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drive a teal application ‚Äî TealAppDriver","text":"table_id (character(1)) id table active teal module's name space. (integer) one table, extracted. default look  table built using teal.widgets::table_with_settings.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Drive a teal application ‚Äî TealAppDriver","text":"data.frame table contents.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-get-active-module-plot-output-","dir":"Reference","previous_headings":"","what":"Method get_active_module_plot_output()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Get output module's teal.widgets::plot_with_settings teal app. function access plots name space current active teal module.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$get_active_module_plot_output(plot_id)"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drive a teal application ‚Äî TealAppDriver","text":"plot_id (character(1)) id plot active teal module's name space.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"Drive a teal application ‚Äî TealAppDriver","text":"src attribute character(1) vector.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-set-active-module-input-","dir":"Reference","previous_headings":"","what":"Method set_active_module_input()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Set input module teal app. function set inputs name space current active teal module.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$set_active_module_input(input_id, value, ...)"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drive a teal application ‚Äî TealAppDriver","text":"input_id (character) shiny input id get value . value value set input . ... Additional arguments passed shinytest2::AppDriver$set_inputs","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"Drive a teal application ‚Äî TealAppDriver","text":"TealAppDriver object invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-get-active-filter-vars-","dir":"Reference","previous_headings":"","what":"Method get_active_filter_vars()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Get active datasets can accessed via filter panel current active teal module.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$get_active_filter_vars()"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-get-active-data-summary-table-","dir":"Reference","previous_headings":"","what":"Method get_active_data_summary_table()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Get active data summary table","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$get_active_data_summary_table()"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"Drive a teal application ‚Äî TealAppDriver","text":"data.frame","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-is-visible-","dir":"Reference","previous_headings":"","what":"Method is_visible()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Test DOM elements visible page JavaScript call.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$is_visible(   selector,   content_visibility_auto = FALSE,   opacity_property = FALSE,   visibility_property = FALSE )"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drive a teal application ‚Äî TealAppDriver","text":"selector (character(1)) CSS selector check visibility. CSS id return one element UI well formed. content_visibility_auto, opacity_property, visibility_property (logical(1)) See information https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"returns-16","dir":"Reference","previous_headings":"","what":"Returns","title":"Drive a teal application ‚Äî TealAppDriver","text":"Logical vector occurrences selector.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-get-active-data-filters-","dir":"Reference","previous_headings":"","what":"Method get_active_data_filters()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Get active filter variables dataset teal app.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$get_active_data_filters(dataset_name = NULL)"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drive a teal application ‚Äî TealAppDriver","text":"dataset_name (character) name dataset get filter variables . NULL, filter variables datasets returned list.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-add-filter-var-","dir":"Reference","previous_headings":"","what":"Method add_filter_var()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Add new variable dataset filtered.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$add_filter_var(dataset_name, var_name, ...)"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drive a teal application ‚Äî TealAppDriver","text":"dataset_name (character) name dataset add filter variable . var_name (character) name variable add filter panel. ... Additional arguments passed shinytest2::AppDriver$set_inputs","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"returns-17","dir":"Reference","previous_headings":"","what":"Returns","title":"Drive a teal application ‚Äî TealAppDriver","text":"TealAppDriver object invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-remove-filter-var-","dir":"Reference","previous_headings":"","what":"Method remove_filter_var()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Remove active filter variable dataset active filter variables panel.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$remove_filter_var(dataset_name = NULL, var_name = NULL)"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drive a teal application ‚Äî TealAppDriver","text":"dataset_name (character) name dataset remove filter variable . NULL, filter variables removed. var_name (character) name variable remove filter panel. NULL, filter variables dataset removed.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"returns-18","dir":"Reference","previous_headings":"","what":"Returns","title":"Drive a teal application ‚Äî TealAppDriver","text":"TealAppDriver object invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-set-active-filter-selection-","dir":"Reference","previous_headings":"","what":"Method set_active_filter_selection()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Set active filter values variable dataset active filter variable panel.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-25","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$set_active_filter_selection(dataset_name, var_name, input, ...)"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drive a teal application ‚Äî TealAppDriver","text":"dataset_name (character) name dataset set filter value . var_name (character) name variable set filter value . input value set filter . ... Additional arguments passed shinytest2::AppDriver$set_inputs","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"returns-19","dir":"Reference","previous_headings":"","what":"Returns","title":"Drive a teal application ‚Äî TealAppDriver","text":"TealAppDriver object invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-get-attr-","dir":"Reference","previous_headings":"","what":"Method get_attr()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Extract html attribute (found selector).","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-26","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$get_attr(selector, attribute)"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drive a teal application ‚Äî TealAppDriver","text":"selector (character(1)) specifying selector used get content specific node. attribute (character(1)) name attribute retrieve node specified selector.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"returns-20","dir":"Reference","previous_headings":"","what":"Returns","title":"Drive a teal application ‚Äî TealAppDriver","text":"character vector.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-get-html-rvest-","dir":"Reference","previous_headings":"","what":"Method get_html_rvest()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Wrapper around get_html passes output directly rvest::read_html.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-27","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$get_html_rvest(selector)"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drive a teal application ‚Äî TealAppDriver","text":"selector (character(1)) passed get_html.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"returns-21","dir":"Reference","previous_headings":"","what":"Returns","title":"Drive a teal application ‚Äî TealAppDriver","text":"XML document. Wrapper around get_url() method opens app browser.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-28","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$open_url()"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"returns-22","dir":"Reference","previous_headings":"","what":"Returns","title":"Drive a teal application ‚Äî TealAppDriver","text":"Nothing. Opens underlying teal app browser.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-wait-for-active-module-value-","dir":"Reference","previous_headings":"","what":"Method wait_for_active_module_value()","title":"Drive a teal application ‚Äî TealAppDriver","text":"Waits specified input, output, export value. function serves wrapper around wait_for_value method, providing flexible interface waiting different types values within active module namespace.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-29","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$wait_for_active_module_value(   input = rlang::missing_arg(),   output = rlang::missing_arg(),   export = rlang::missing_arg(),   ... )"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drive a teal application ‚Äî TealAppDriver","text":"input, output, export name input, output, export value. one parameters may used. ... Must empty. Allows parameter expansion. Parameter additional value passed wait_for_value.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Drive a teal application ‚Äî TealAppDriver","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"usage-30","dir":"Reference","previous_headings":"","what":"Usage","title":"Drive a teal application ‚Äî TealAppDriver","text":"","code":"TealAppDriver$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealAppDriver.html","id":"arguments-20","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drive a teal application ‚Äî TealAppDriver","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealReportCard.html","id":null,"dir":"Reference","previous_headings":"","what":"TealReportCard ‚Äî TealReportCard","title":"TealReportCard ‚Äî TealReportCard","text":"Child class teal.reporter::ReportCard used teal specific applications. addition parent methods, supports rendering teal specific elements source code, encodings panel content filter panel content part meta data.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealReportCard.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TealReportCard ‚Äî TealReportCard","text":"teal.reporter::ReportCard -> TealReportCard","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealReportCard.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TealReportCard ‚Äî TealReportCard","text":"teal.reporter::ReportCard$append_content() teal.reporter::ReportCard$append_html() teal.reporter::ReportCard$append_metadata() teal.reporter::ReportCard$append_plot() teal.reporter::ReportCard$append_rcode() teal.reporter::ReportCard$append_table() teal.reporter::ReportCard$append_text() teal.reporter::ReportCard$from_list() teal.reporter::ReportCard$get_content() teal.reporter::ReportCard$get_metadata() teal.reporter::ReportCard$get_name() teal.reporter::ReportCard$initialize() teal.reporter::ReportCard$reset() teal.reporter::ReportCard$set_name() teal.reporter::ReportCard$to_list()","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealReportCard.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TealReportCard ‚Äî TealReportCard","text":"TealReportCard$append_src() TealReportCard$append_fs() TealReportCard$append_encodings() TealReportCard$clone()","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealReportCard.html","id":"method-append-src-","dir":"Reference","previous_headings":"","what":"Method append_src()","title":"TealReportCard ‚Äî TealReportCard","text":"Appends source code content meta data TealReportCard.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealReportCard.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TealReportCard ‚Äî TealReportCard","text":"","code":"TealReportCard$append_src(src, ...)"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealReportCard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TealReportCard ‚Äî TealReportCard","text":"src (character(1)) code text. ... rmarkdown R chunk parameter value. eval parameter always set FALSE.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealReportCard.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TealReportCard ‚Äî TealReportCard","text":"Object class TealReportCard, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealReportCard.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TealReportCard ‚Äî TealReportCard","text":"","code":"card <- TealReportCard$new()$append_src(   \"plot(iris)\" ) card$get_content()[[1]]$get_content()"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealReportCard.html","id":"method-append-fs-","dir":"Reference","previous_headings":"","what":"Method append_fs()","title":"TealReportCard ‚Äî TealReportCard","text":"Appends filter state list content metadata TealReportCard. filter state list attribute named formatted, appends card otherwise uses default yaml::.yaml format list. filter state list empty, nothing appended content.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealReportCard.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TealReportCard ‚Äî TealReportCard","text":"","code":"TealReportCard$append_fs(fs)"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealReportCard.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TealReportCard ‚Äî TealReportCard","text":"fs (teal_slices) object returned teal_slices() function.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealReportCard.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"TealReportCard ‚Äî TealReportCard","text":"self, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealReportCard.html","id":"method-append-encodings-","dir":"Reference","previous_headings":"","what":"Method append_encodings()","title":"TealReportCard ‚Äî TealReportCard","text":"Appends encodings list content metadata TealReportCard.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealReportCard.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TealReportCard ‚Äî TealReportCard","text":"","code":"TealReportCard$append_encodings(encodings)"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealReportCard.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"TealReportCard ‚Äî TealReportCard","text":"encodings (list) list encodings selections teal app.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealReportCard.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"TealReportCard ‚Äî TealReportCard","text":"self, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealReportCard.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"TealReportCard ‚Äî TealReportCard","text":"","code":"card <- TealReportCard$new()$append_encodings(list(variable1 = \"X\")) card$get_content()[[1]]$get_content()"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealReportCard.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TealReportCard ‚Äî TealReportCard","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealReportCard.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"TealReportCard ‚Äî TealReportCard","text":"","code":"TealReportCard$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealReportCard.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"TealReportCard ‚Äî TealReportCard","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealReportCard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TealReportCard ‚Äî TealReportCard","text":"","code":"## ------------------------------------------------ ## Method `TealReportCard$append_src` ## ------------------------------------------------  card <- TealReportCard$new()$append_src(   \"plot(iris)\" ) card$get_content()[[1]]$get_content() #> [1] \"plot(iris)\"  ## ------------------------------------------------ ## Method `TealReportCard$append_encodings` ## ------------------------------------------------  card <- TealReportCard$new()$append_encodings(list(variable1 = \"X\")) card$get_content()[[1]]$get_content() #> [1] \"Selected Options\""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealSlicesBlock.html","id":null,"dir":"Reference","previous_headings":"","what":"TealSlicesBlock ‚Äî TealSlicesBlock","title":"TealSlicesBlock ‚Äî TealSlicesBlock","text":"Specialized TealSlicesBlock block managing filter panel content reports.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealSlicesBlock.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"TealSlicesBlock ‚Äî TealSlicesBlock","text":"teal.reporter::ContentBlock -> teal.reporter::TextBlock -> TealSlicesBlock","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealSlicesBlock.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TealSlicesBlock ‚Äî TealSlicesBlock","text":"teal.reporter::ContentBlock$get_content() teal.reporter::TextBlock$get_available_styles() teal.reporter::TextBlock$get_style() teal.reporter::TextBlock$set_style()","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealSlicesBlock.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TealSlicesBlock ‚Äî TealSlicesBlock","text":"TealSlicesBlock$new() TealSlicesBlock$set_content() TealSlicesBlock$from_list() TealSlicesBlock$to_list() TealSlicesBlock$clone()","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealSlicesBlock.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"TealSlicesBlock ‚Äî TealSlicesBlock","text":"Returns TealSlicesBlock object.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealSlicesBlock.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TealSlicesBlock ‚Äî TealSlicesBlock","text":"","code":"TealSlicesBlock$new(content = teal_slices(), style = \"verbatim\")"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealSlicesBlock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TealSlicesBlock ‚Äî TealSlicesBlock","text":"content (teal_slices) object returned teal_slices() function. style (character(1)) string specifying style apply.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealSlicesBlock.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TealSlicesBlock ‚Äî TealSlicesBlock","text":"Returns TealSlicesBlock object content parameters.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealSlicesBlock.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TealSlicesBlock ‚Äî TealSlicesBlock","text":"Object class TealSlicesBlock, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealSlicesBlock.html","id":"method-set-content-","dir":"Reference","previous_headings":"","what":"Method set_content()","title":"TealSlicesBlock ‚Äî TealSlicesBlock","text":"Sets content TealSlicesBlock. Sets content YAML text represents list generated teal_slices. list displays limited number fields teal_slice objects, list sufficient conclude filters applied. selected field teal_slice object range, displayed \"min\"","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealSlicesBlock.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TealSlicesBlock ‚Äî TealSlicesBlock","text":"","code":"TealSlicesBlock$set_content(content)"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealSlicesBlock.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TealSlicesBlock ‚Äî TealSlicesBlock","text":"content (teal_slices) object returned teal_slices() function.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealSlicesBlock.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"TealSlicesBlock ‚Äî TealSlicesBlock","text":"self, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealSlicesBlock.html","id":"method-from-list-","dir":"Reference","previous_headings":"","what":"Method from_list()","title":"TealSlicesBlock ‚Äî TealSlicesBlock","text":"Create TealSlicesBlock list.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealSlicesBlock.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TealSlicesBlock ‚Äî TealSlicesBlock","text":"","code":"TealSlicesBlock$from_list(x)"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealSlicesBlock.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"TealSlicesBlock ‚Äî TealSlicesBlock","text":"x (named list) two fields text style. Use get_available_styles method get possible styles.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealSlicesBlock.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"TealSlicesBlock ‚Äî TealSlicesBlock","text":"self, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealSlicesBlock.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TealSlicesBlock ‚Äî TealSlicesBlock","text":"","code":"TealSlicesBlock <- getFromNamespace(\"TealSlicesBlock\", \"teal\") block <- TealSlicesBlock$new() block$from_list(list(text = \"sth\", style = \"default\"))"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealSlicesBlock.html","id":"method-to-list-","dir":"Reference","previous_headings":"","what":"Method to_list()","title":"TealSlicesBlock ‚Äî TealSlicesBlock","text":"Convert TealSlicesBlock list.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealSlicesBlock.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"TealSlicesBlock ‚Äî TealSlicesBlock","text":"","code":"TealSlicesBlock$to_list()"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealSlicesBlock.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"TealSlicesBlock ‚Äî TealSlicesBlock","text":"named list text style.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealSlicesBlock.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"TealSlicesBlock ‚Äî TealSlicesBlock","text":"","code":"TealSlicesBlock <- getFromNamespace(\"TealSlicesBlock\", \"teal\") block <- TealSlicesBlock$new() block$to_list()"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealSlicesBlock.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TealSlicesBlock ‚Äî TealSlicesBlock","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealSlicesBlock.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"TealSlicesBlock ‚Äî TealSlicesBlock","text":"","code":"TealSlicesBlock$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal/main/reference/TealSlicesBlock.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"TealSlicesBlock ‚Äî TealSlicesBlock","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/TealSlicesBlock.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TealSlicesBlock ‚Äî TealSlicesBlock","text":"","code":"## ------------------------------------------------ ## Method `TealSlicesBlock$from_list` ## ------------------------------------------------  TealSlicesBlock <- getFromNamespace(\"TealSlicesBlock\", \"teal\") block <- TealSlicesBlock$new() block$from_list(list(text = \"sth\", style = \"default\"))   ## ------------------------------------------------ ## Method `TealSlicesBlock$to_list` ## ------------------------------------------------  TealSlicesBlock <- getFromNamespace(\"TealSlicesBlock\", \"teal\") block <- TealSlicesBlock$new() block$to_list() #> $text #> [1] \"\" #>  #> $style #> [1] \"verbatim\" #>"},{"path":"https://insightsengineering.github.io/teal/main/reference/add_landing_modal.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Landing Popup to teal Application ‚Äî add_landing_modal","title":"Add a Landing Popup to teal Application ‚Äî add_landing_modal","text":"Adds landing popup teal app. popup shown app starts. dialog must closed app user proceed main application.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/add_landing_modal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Landing Popup to teal Application ‚Äî add_landing_modal","text":"","code":"add_landing_modal(   x,   title = NULL,   content = NULL,   footer = modalButton(\"Accept\"),   ... )"},{"path":"https://insightsengineering.github.io/teal/main/reference/add_landing_modal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Landing Popup to teal Application ‚Äî add_landing_modal","text":"x (teal_app) teal_app object created using init function. title optional title dialog. content (character(1), shiny.tag shiny.tag.list) content popup. footer UI footer. Use NULL footer. ... Additional arguments shiny::modalDialog().","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/add_landing_modal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a Landing Popup to teal Application ‚Äî add_landing_modal","text":"","code":"app <- init(   data = teal_data(IRIS = iris, MTCARS = mtcars),   modules = modules(example_module()) ) |>   add_landing_modal(     title = \"Welcome\",     content = \"This is a landing popup.\",     buttons = modalButton(\"Accept\")   )  if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal/main/reference/append_module.html","id":null,"dir":"Reference","previous_headings":"","what":"Append a teal_module to children of a teal_modules object ‚Äî append_module","title":"Append a teal_module to children of a teal_modules object ‚Äî append_module","text":"Append teal_module children teal_modules object","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/append_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append a teal_module to children of a teal_modules object ‚Äî append_module","text":"","code":"append_module(modules, module)"},{"path":"https://insightsengineering.github.io/teal/main/reference/append_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append a teal_module to children of a teal_modules object ‚Äî append_module","text":"modules (teal_modules) module (teal_module) object appended onto children modules","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/append_module.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append a teal_module to children of a teal_modules object ‚Äî append_module","text":"teal_modules object module appended.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/bookmarks_identical.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare bookmarks. ‚Äî bookmarks_identical","title":"Compare bookmarks. ‚Äî bookmarks_identical","text":"Test two bookmarks store identical state.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/bookmarks_identical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare bookmarks. ‚Äî bookmarks_identical","text":"","code":"bookmarks_identical(book1, book2)"},{"path":"https://insightsengineering.github.io/teal/main/reference/bookmarks_identical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare bookmarks. ‚Äî bookmarks_identical","text":"book1, book2 bookmark directories stored shiny_bookmarks/; default two recently modified directories","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/bookmarks_identical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare bookmarks. ‚Äî bookmarks_identical","text":"Invisible NULL bookmarks identical bookmarks test. FALSE inconsistencies detected.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/bookmarks_identical.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare bookmarks. ‚Äî bookmarks_identical","text":"input environments compared one variable time identical, values bookmarks reported. States datatables stripped time element comparing time stamp always different. contents printed large contents informative. Elements present one bookmark absent also reported. Differences printed messages. values environments compared .equal.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/bookmarks_identical.html","id":"how-to-use","dir":"Reference","previous_headings":"","what":"How to use","title":"Compare bookmarks. ‚Äî bookmarks_identical","text":"Open application, change relevant inputs (typically, ), create bookmark. open bookmark immediately create bookmark . restoring bookmarks occurred properly, two bookmarks store state.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/build_app_title.html","id":null,"dir":"Reference","previous_headings":"","what":"Build app title with favicon ‚Äî build_app_title","title":"Build app title with favicon ‚Äî build_app_title","text":"helper function create browser title along logo.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/build_app_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build app title with favicon ‚Äî build_app_title","text":"","code":"build_app_title(   title = \"teal app\",   favicon =     \"https://raw.githubusercontent.com/insightsengineering/hex-stickers/main/PNG/nest.png\" )"},{"path":"https://insightsengineering.github.io/teal/main/reference/build_app_title.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build app title with favicon ‚Äî build_app_title","text":"title (character) browser title teal app. favicon (character) path icon title. image/icon path can remote static path accessible shiny, like www/","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/build_app_title.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build app title with favicon ‚Äî build_app_title","text":"shiny.tag containing element adds title logo shiny app.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/call_once_when.html","id":null,"dir":"Reference","previous_headings":"","what":"Calls expression when condition is met ‚Äî call_once_when","title":"Calls expression when condition is met ‚Äî call_once_when","text":"Function postpones handlerExpr moment eventExpr (condition) returns TRUE, otherwise nothing happens.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/call_once_when.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calls expression when condition is met ‚Äî call_once_when","text":"","code":"call_once_when(   eventExpr,   handlerExpr,   event.env = parent.frame(),   handler.env = parent.frame(),   ... )"},{"path":"https://insightsengineering.github.io/teal/main/reference/call_once_when.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calls expression when condition is met ‚Äî call_once_when","text":"eventExpr (quoted unquoted) logical expression represents event; can simple reactive value like input$click, call reactive expression like dataset(), even complex expression inside curly braces. handlerExpr expression call whenever eventExpr invalidated. side-effect-producing action (return value ignored). executed within isolate() scope. event.env parent environment reactive expression. default, calling environment, defining ordinary non-reactive expression. eventExpr quosure event.quoted TRUE, event.env ignored. handler.env parent environment reactive expression. default, calling environment, defining ordinary non-reactive expression. handlerExpr quosure handler.quoted TRUE, handler.env ignored. ... additional arguments passed observeEvent exception eventExpr allowed.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/call_once_when.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calls expression when condition is met ‚Äî call_once_when","text":"observer.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/check_filter_datanames.html","id":null,"dir":"Reference","previous_headings":"","what":"Check datanames in filters ‚Äî check_filter_datanames","title":"Check datanames in filters ‚Äî check_filter_datanames","text":"function checks whether datanames filters correspond data, returning character vector error messages TRUE checks pass.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/check_filter_datanames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check datanames in filters ‚Äî check_filter_datanames","text":"","code":"check_filter_datanames(filters, datanames)"},{"path":"https://insightsengineering.github.io/teal/main/reference/check_filter_datanames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check datanames in filters ‚Äî check_filter_datanames","text":"filters (teal_slices) object datanames (character) names datasets available data object","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/check_filter_datanames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check datanames in filters ‚Äî check_filter_datanames","text":"character(1) containing error message TRUE validation passes.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/check_modules_datanames.html","id":null,"dir":"Reference","previous_headings":"","what":"Check datanames in modules ‚Äî check_modules_datanames","title":"Check datanames in modules ‚Äî check_modules_datanames","text":"functions check specified datanames modules match data object, returning error messages TRUE successful validation. Two functions return error message different forms: check_modules_datanames returns character(1) basic assertion usage check_modules_datanames_html returns shiny.tag.list display app.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/check_modules_datanames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check datanames in modules ‚Äî check_modules_datanames","text":"","code":"check_modules_datanames(modules, datanames)  check_reserved_datanames(datanames)  check_modules_datanames_html(modules, datanames)"},{"path":"https://insightsengineering.github.io/teal/main/reference/check_modules_datanames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check datanames in modules ‚Äî check_modules_datanames","text":"modules (teal_modules) object datanames (character) names datasets available data object","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/check_modules_datanames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check datanames in modules ‚Äî check_modules_datanames","text":"TRUE validation passes, otherwise character(1) shiny.tag.list","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/check_reactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that argument is reactive. ‚Äî check_reactive","title":"Check that argument is reactive. ‚Äî check_reactive","text":"Check argument reactive.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/check_reactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that argument is reactive. ‚Äî check_reactive","text":"","code":"check_reactive(x, null.ok = FALSE)  test_reactive(x, null.ok = FALSE)  assert_reactive(   x,   null.ok = FALSE,   .var.name = checkmate::vname(x),   add = NULL )"},{"path":"https://insightsengineering.github.io/teal/main/reference/check_reactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that argument is reactive. ‚Äî check_reactive","text":"x [] Object check. null.ok [logical(1)] set TRUE, x may also NULL. case type check x performed, additional checks disabled. .var.name [character(1)] Name checked object print assertions. Defaults heuristic implemented vname. add [AssertCollection] Collection store assertion messages. See AssertCollection.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/check_reactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that argument is reactive. ‚Äî check_reactive","text":"Depending function prefix:  check successful, functions  assertClass/assert_class return  x invisibly, whereas  checkClass/check_class  testClass/test_class return  TRUE.  check successful,  assertClass/assert_class  throws error message,  testClass/test_class  returns FALSE,  checkClass/check_class  return string error message.  function expect_class always returns  expectation.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/create_app_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Application ID ‚Äî create_app_id","title":"Application ID ‚Äî create_app_id","text":"Creates App ID used match filter snapshots application.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/create_app_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Application ID ‚Äî create_app_id","text":"","code":"create_app_id(data, modules)"},{"path":"https://insightsengineering.github.io/teal/main/reference/create_app_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Application ID ‚Äî create_app_id","text":"data (teal_data teal_data_module) accepted init modules (teal_modules) object accepted init","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/create_app_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Application ID ‚Äî create_app_id","text":"single character string.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/create_app_id.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Application ID ‚Äî create_app_id","text":"Calculate app ID used stamp filter state snapshots. App ID hash app's data modules. See \"transferring snapshots\" section ?snapshot.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/decorate_err_msg.html","id":null,"dir":"Reference","previous_headings":"","what":"Capture error and decorate error message. ‚Äî decorate_err_msg","title":"Capture error and decorate error message. ‚Äî decorate_err_msg","text":"Capture error decorate error message.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/decorate_err_msg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Capture error and decorate error message. ‚Äî decorate_err_msg","text":"","code":"decorate_err_msg(x, pre = character(0), post = character(0))"},{"path":"https://insightsengineering.github.io/teal/main/reference/decorate_err_msg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Capture error and decorate error message. ‚Äî decorate_err_msg","text":"x object evaluate pre (character(1)) string prepend error message post (character(1)) string append error message","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/decorate_err_msg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Capture error and decorate error message. ‚Äî decorate_err_msg","text":"x error, otherwise throws error decorated message","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/deep_copy_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Deep copy teal_slices ‚Äî deep_copy_filter","title":"Deep copy teal_slices ‚Äî deep_copy_filter","text":"important create new copy teal_slices starting new shiny session. Otherwise, object shared multiple users created global environment shiny session starts.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/deep_copy_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deep copy teal_slices ‚Äî deep_copy_filter","text":"","code":"deep_copy_filter(filter)"},{"path":"https://insightsengineering.github.io/teal/main/reference/deep_copy_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deep copy teal_slices ‚Äî deep_copy_filter","text":"filter (teal_slices)","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/deep_copy_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deep copy teal_slices ‚Äî deep_copy_filter","text":"teal_slices","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/dot-add_signature_to_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds signature protection to the datanames in the data ‚Äî .add_signature_to_data","title":"Adds signature protection to the datanames in the data ‚Äî .add_signature_to_data","text":"Adds signature protection datanames data","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/dot-add_signature_to_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds signature protection to the datanames in the data ‚Äî .add_signature_to_data","text":"","code":".add_signature_to_data(data)"},{"path":"https://insightsengineering.github.io/teal/main/reference/dot-add_signature_to_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds signature protection to the datanames in the data ‚Äî .add_signature_to_data","text":"data (teal_data)","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/dot-add_signature_to_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds signature protection to the datanames in the data ‚Äî .add_signature_to_data","text":"teal_data additional code signature datanames","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/dot-get_hashes_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Get code that tests the integrity of the reproducible data ‚Äî .get_hashes_code","title":"Get code that tests the integrity of the reproducible data ‚Äî .get_hashes_code","text":"Get code tests integrity reproducible data","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/dot-get_hashes_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get code that tests the integrity of the reproducible data ‚Äî .get_hashes_code","text":"","code":".get_hashes_code(data, datanames = names(data))"},{"path":"https://insightsengineering.github.io/teal/main/reference/dot-get_hashes_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get code that tests the integrity of the reproducible data ‚Äî .get_hashes_code","text":"data (teal_data) object holding data datanames (character) names datasets","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/dot-get_hashes_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get code that tests the integrity of the reproducible data ‚Äî .get_hashes_code","text":"character vector code lines.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/dot-smart_rbind.html","id":null,"dir":"Reference","previous_headings":"","what":"Smart rbind ‚Äî .smart_rbind","title":"Smart rbind ‚Äî .smart_rbind","text":"Combine data.frame objects different columns","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/dot-smart_rbind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smart rbind ‚Äî .smart_rbind","text":"","code":".smart_rbind(...)"},{"path":"https://insightsengineering.github.io/teal/main/reference/dot-smart_rbind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smart rbind ‚Äî .smart_rbind","text":"... (data.frame)","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/dot-teal_favicon.html","id":null,"dir":"Reference","previous_headings":"","what":"The default favicon for the teal app. ‚Äî .teal_favicon","title":"The default favicon for the teal app. ‚Äî .teal_favicon","text":"default favicon teal app.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/dot-teal_favicon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The default favicon for the teal app. ‚Äî .teal_favicon","text":"","code":".teal_favicon"},{"path":"https://insightsengineering.github.io/teal/main/reference/dot-teal_favicon.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The default favicon for the teal app. ‚Äî .teal_favicon","text":"object class character length 1.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/reference/example_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An example teal module ‚Äî example_module","text":"","code":"example_module(   label = \"example teal module\",   datanames = \"all\",   transformators = list(),   decorators = list() )"},{"path":"https://insightsengineering.github.io/teal/main/reference/example_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An example teal module ‚Äî example_module","text":"label (character(1)) Label shown navigation item module module group. modules() defaults \"root\". See Details. datanames (character) Names datasets relevant item. 2 reserved values specific behaviors: keyword \"\" includes datasets available data passed teal application. NULL hides sidebar panel completely. transformators specified, datanames automatically added datanames argument. transformators (list teal_transform_module) applied transform module's data input. learn check vignette(\"data-transform--shiny-module\", package = \"teal\"). decorators (list teal_transform_module) optional, decorator object included module.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/example_module.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An example teal module ‚Äî example_module","text":"teal module can included modules argument init().","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/example_module.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An example teal module ‚Äî example_module","text":"module creates object called object can modified decorators. object determined selected Choose dataset input UI. object can anything can handled renderPrint(). See vignette(\"decorate-modules-output\", package = \"teal\") teal_transform_module read decorators.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/example_module.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An example teal module ‚Äî example_module","text":"","code":"app <- init(   data = teal_data(IRIS = iris, MTCARS = mtcars),   modules = example_module() ) if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal/main/reference/extract_transformators.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract all transformators from modules. ‚Äî extract_transformators","title":"Extract all transformators from modules. ‚Äî extract_transformators","text":"Extract transformators modules.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/extract_transformators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract all transformators from modules. ‚Äî extract_transformators","text":"","code":"extract_transformators(modules)"},{"path":"https://insightsengineering.github.io/teal/main/reference/extract_transformators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract all transformators from modules. ‚Äî extract_transformators","text":"modules teal_modules teal_module","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/extract_transformators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract all transformators from modules. ‚Äî extract_transformators","text":"list teal_transform_module nested way input modules.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/get_client_timezone.html","id":null,"dir":"Reference","previous_headings":"","what":"Get client timezone ‚Äî get_client_timezone","title":"Get client timezone ‚Äî get_client_timezone","text":"User timezone browser may different one server. script can run register shiny input contains information timezone browser.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/get_client_timezone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get client timezone ‚Äî get_client_timezone","text":"","code":"get_client_timezone(ns)"},{"path":"https://insightsengineering.github.io/teal/main/reference/get_client_timezone.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get client timezone ‚Äî get_client_timezone","text":"ns (function) namespace function passed session object shiny server. shiny modules allow proper name spacing registered input.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/get_client_timezone.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get client timezone ‚Äî get_client_timezone","text":"NULL, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/get_rcode_libraries.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates library calls from current session info ‚Äî get_rcode_libraries","title":"Generates library calls from current session info ‚Äî get_rcode_libraries","text":"Function create multiple library calls current session info ensure reproducible code works.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/get_rcode_libraries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates library calls from current session info ‚Äî get_rcode_libraries","text":"","code":"get_rcode_libraries()"},{"path":"https://insightsengineering.github.io/teal/main/reference/get_rcode_libraries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates library calls from current session info ‚Äî get_rcode_libraries","text":"Character vector library(<package>) calls.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/get_unique_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Get unique labels ‚Äî get_unique_labels","title":"Get unique labels ‚Äî get_unique_labels","text":"Get unique labels modules avoid namespace conflicts.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/get_unique_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get unique labels ‚Äî get_unique_labels","text":"","code":"get_unique_labels(labels)"},{"path":"https://insightsengineering.github.io/teal/main/reference/get_unique_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get unique labels ‚Äî get_unique_labels","text":"labels (character) vector labels","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/get_unique_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get unique labels ‚Äî get_unique_labels","text":"(character) vector unique labels","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/include_css_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Include CSS files from /inst/css/ package directory to application header ‚Äî include_css_files","title":"Include CSS files from /inst/css/ package directory to application header ‚Äî include_css_files","text":"system.file used access files packages, work devtools. Therefore, redefine method package needed. Thus, export method.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/include_css_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Include CSS files from /inst/css/ package directory to application header ‚Äî include_css_files","text":"","code":"include_css_files(pattern = \"*\")"},{"path":"https://insightsengineering.github.io/teal/main/reference/include_css_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Include CSS files from /inst/css/ package directory to application header ‚Äî include_css_files","text":"pattern (character) pattern files included","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/include_css_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Include CSS files from /inst/css/ package directory to application header ‚Äî include_css_files","text":"HTML code includes CSS files.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/include_js_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Include JS files from /inst/js/ package directory to application header ‚Äî include_js_files","title":"Include JS files from /inst/js/ package directory to application header ‚Äî include_js_files","text":"system.file used access files packages, work devtools. Therefore, redefine method package needed. Thus, export method","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/include_js_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Include JS files from /inst/js/ package directory to application header ‚Äî include_js_files","text":"","code":"include_js_files(pattern = NULL, except = NULL)"},{"path":"https://insightsengineering.github.io/teal/main/reference/include_js_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Include JS files from /inst/js/ package directory to application header ‚Äî include_js_files","text":"pattern (character) pattern files included, passed system.file except (character) vector basename filenames excluded","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/include_js_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Include JS files from /inst/js/ package directory to application header ‚Äî include_js_files","text":"HTML code includes JS files.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/include_teal_css_js.html","id":null,"dir":"Reference","previous_headings":"","what":"Code to include teal CSS and JavaScript files ‚Äî include_teal_css_js","title":"Code to include teal CSS and JavaScript files ‚Äî include_teal_css_js","text":"useful want use JavaScript CSS files used teal application. also useful running standalone modules teal correct styles. Also initializes shinyjs can use .","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/include_teal_css_js.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Code to include teal CSS and JavaScript files ‚Äî include_teal_css_js","text":"","code":"include_teal_css_js()"},{"path":"https://insightsengineering.github.io/teal/main/reference/include_teal_css_js.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Code to include teal CSS and JavaScript files ‚Äî include_teal_css_js","text":"shiny.tag.list.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/include_teal_css_js.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Code to include teal CSS and JavaScript files ‚Äî include_teal_css_js","text":"Simply add include_teal_css_js() one UI elements.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/init.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the server and UI function for the shiny app ‚Äî init","title":"Create the server and UI function for the shiny app ‚Äî init","text":"End-users: important function start teal app composed teal modules.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the server and UI function for the shiny app ‚Äî init","text":"","code":"init(   data,   modules,   filter = teal_slices(),   title = lifecycle::deprecated(),   header = lifecycle::deprecated(),   footer = lifecycle::deprecated(),   id = lifecycle::deprecated() )"},{"path":"https://insightsengineering.github.io/teal/main/reference/init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the server and UI function for the shiny app ‚Äî init","text":"data (teal_data teal_data_module) constructing data object, refer teal.data::teal_data() teal_data_module(). modules (list teal_modules teal_module) Nested list teal_modules teal_module objects single teal_modules teal_module object. specific output modules displayed teal application. See modules() module() details. filter (teal_slices) Optionally, specifies initial filter using teal_slices(). title (shiny.tag character(1))  Optionally, browser window title. Defaults title \"teal app\" icon NEST. Can created using build_app_title() passing valid shiny.tag head tag title link tag. parameter deprecated. Use modify_title() teal app object instead. header (shiny.tag character(1))  Optionally, header app. parameter deprecated. Use modify_header() teal app object instead. footer (shiny.tag character(1))  Optionally, footer app. parameter deprecated. Use modify_footer() teal app object instead. id (character) Optionally, string specifying shiny module id cases used shiny module rather standalone shiny app. legacy feature. Deprecated since v0.15.3 please use ui_teal() srv_teal() instead.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the server and UI function for the shiny app ‚Äî init","text":"Named list containing server UI functions.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/init.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the server and UI function for the shiny app ‚Äî init","text":"","code":"app <- init(   data = within(     teal_data(),     {       new_iris <- transform(iris, id = seq_len(nrow(iris)))       new_mtcars <- transform(mtcars, id = seq_len(nrow(mtcars)))     }   ),   modules = modules(     module(       label = \"data source\",       server = function(input, output, session, data) {},       ui = function(id, ...) tags$div(p(\"information about data source\")),       datanames = \"all\"     ),     example_module(label = \"example teal module\"),     module(       \"Iris Sepal.Length histogram\",       server = function(input, output, session, data) {         output$hist <- renderPlot(           hist(data()[[\"new_iris\"]]$Sepal.Length)         )       },       ui = function(id, ...) {         ns <- NS(id)         plotOutput(ns(\"hist\"))       },       datanames = \"new_iris\"     )   ),   filter = teal_slices(     teal_slice(dataname = \"new_iris\", varname = \"Species\"),     teal_slice(dataname = \"new_iris\", varname = \"Sepal.Length\"),     teal_slice(dataname = \"new_mtcars\", varname = \"cyl\"),     exclude_varnames = list(new_iris = c(\"Sepal.Width\", \"Petal.Width\")),     module_specific = TRUE,     mapping = list(       `example teal module` = \"new_iris Species\",       `Iris Sepal.Length histogram` = \"new_iris Species\",       global_filters = \"new_mtcars cyl\"     )   ) ) if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal/main/reference/is_arg_used.html","id":null,"dir":"Reference","previous_headings":"","what":"Does the object make use of the arg ‚Äî is_arg_used","title":"Does the object make use of the arg ‚Äî is_arg_used","text":"object make use arg","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/is_arg_used.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does the object make use of the arg ‚Äî is_arg_used","text":"","code":"is_arg_used(modules, arg)"},{"path":"https://insightsengineering.github.io/teal/main/reference/is_arg_used.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does the object make use of the arg ‚Äî is_arg_used","text":"modules (teal_module teal_modules) object arg (character(1)) names arguments checked formals teal modules.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/is_arg_used.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does the object make use of the arg ‚Äî is_arg_used","text":"logical whether object makes use arg.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/landing_popup_module.html","id":null,"dir":"Reference","previous_headings":"","what":"Landing popup module ‚Äî landing_popup_module","title":"Landing popup module ‚Äî landing_popup_module","text":"Creates landing welcome popup teal applications. module used display popup dialog application starts. dialog blocks access application must closed button application can viewed. function deprecated, please use add_landing_modal() teal app object instead.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/landing_popup_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Landing popup module ‚Äî landing_popup_module","text":"","code":"landing_popup_module(   label = \"Landing Popup\",   title = NULL,   content = NULL,   buttons = modalButton(\"Accept\") )"},{"path":"https://insightsengineering.github.io/teal/main/reference/landing_popup_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Landing popup module ‚Äî landing_popup_module","text":"label (character(1)) Label module. title (character(1)) Text displayed popup title. content (character(1), shiny.tag shiny.tag.list) content popup. Passed ... shiny::modalDialog. See examples. buttons (shiny.tag shiny.tag.list) Typically modalButton actionButton. See examples.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/landing_popup_module.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Landing popup module ‚Äî landing_popup_module","text":"teal_module (extended teal_landing_module class) used teal applications.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/make_teal_transform_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Make teal_transform_module's server ‚Äî make_teal_transform_server","title":"Make teal_transform_module's server ‚Äî make_teal_transform_server","text":"factory function simplify creation teal_transform_module's server. Specified expr wrapped shiny module function output can passed server argument teal_transform_module() call. server function can linked ui values inputs can used expression. Object names specified expression substituted value respective input (matched name) - example expression(graph <- graph + ggtitle(title)) object title replaced value input$title.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/make_teal_transform_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make teal_transform_module's server ‚Äî make_teal_transform_server","text":"","code":"make_teal_transform_server(expr)"},{"path":"https://insightsengineering.github.io/teal/main/reference/make_teal_transform_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make teal_transform_module's server ‚Äî make_teal_transform_server","text":"expr (language) R call evaluated within teal.data::teal_data environment.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/make_teal_transform_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make teal_transform_module's server ‚Äî make_teal_transform_server","text":"function(id, data) returning shiny module","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/make_teal_transform_server.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make teal_transform_module's server ‚Äî make_teal_transform_server","text":"","code":"trim_iris <- teal_transform_module(   label = \"Simplified interactive transformator for iris\",   datanames = \"iris\",   ui = function(id) {     ns <- NS(id)     numericInput(ns(\"n_rows\"), \"Subset n rows\", value = 6, min = 1, max = 150, step = 1)   },   server = make_teal_transform_server(expression(iris <- head(iris, n_rows))) )  app <- init(   data = teal_data(iris = iris),   modules = example_module(transformators = trim_iris) ) if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal/main/reference/module_bookmark_manager.html","id":null,"dir":"Reference","previous_headings":"","what":"App state management. ‚Äî module_bookmark_manager","title":"App state management. ‚Äî module_bookmark_manager","text":"Capture restore global (app) input state.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_bookmark_manager.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"App state management. ‚Äî module_bookmark_manager","text":"","code":"ui_bookmark_panel(id, modules)  srv_bookmark_panel(id, modules)  get_bookmarking_option()  need_bookmarking(modules)"},{"path":"https://insightsengineering.github.io/teal/main/reference/module_bookmark_manager.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"App state management. ‚Äî module_bookmark_manager","text":"id (character(1)) shiny module instance id. modules (teal_modules) teal_modules object. specific output modules displayed teal application. See modules() module() details.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_bookmark_manager.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"App state management. ‚Äî module_bookmark_manager","text":"Invisible NULL.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_bookmark_manager.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"App state management. ‚Äî module_bookmark_manager","text":"module introduces bookmarks teal apps: shiny bookmarking mechanism becomes enabled server-side bookmarks can created. bookmark manager presents button bookmark icon placed tab-bar. clicked, button creates bookmark opens modal displays bookmark URL. teal guarantee modules (teal_module objects) bookmarkable. , teal_bookmarkable attribute set TRUE. modules bookmarkable, bookmark manager modal displays warning bookmark button displays flag. order communicate external module bookmarkable, module developer set teal_bookmarkable attribute TRUE.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_bookmark_manager.html","id":"server-logic","dir":"Reference","previous_headings":"","what":"Server logic","title":"App state management. ‚Äî module_bookmark_manager","text":"bookmark URL contains app address /?_state_id_=<bookmark_dir> suffix. <bookmark_dir> directory created server, state application saved. Accessing bookmark URL opens new session app starts previously saved state.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_bookmark_manager.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"App state management. ‚Äî module_bookmark_manager","text":"enable bookmarking use either: shiny app using shinyApp(..., enableBookmarking = \"server\") (supported shinytest2) set options(shiny.bookmarkStore = \"server\") running app","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_data_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Data summary ‚Äî module_data_summary","title":"Data summary ‚Äî module_data_summary","text":"Module utils display number rows subjects filtered unfiltered data.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_data_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data summary ‚Äî module_data_summary","text":"","code":"ui_data_summary(id)  srv_data_summary(id, data)  get_filter_overview_wrapper(teal_data)  get_filter_overview(current_data, initial_data, dataname, subject_keys)  get_filter_overview_array(current_data, initial_data, dataname, subject_keys)  get_filter_overview_MultiAssayExperiment(current_data, initial_data, dataname)"},{"path":"https://insightsengineering.github.io/teal/main/reference/module_data_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data summary ‚Äî module_data_summary","text":"id (character(1)) shiny module instance id. data (reactive returning teal_data) current_data (object) current object (filtering transforming). initial_data (object) initial object. dataname (character(1)) subject_keys (character) names columns determine single unique subjects","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_data_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data summary ‚Äî module_data_summary","text":"NULL.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_data_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data summary ‚Äî module_data_summary","text":"Handling different data classes: get_filter_overview() pseudo S3 method variants : array (data.frame, DataFrame, array, Matrix SummarizedExperiment): Method variant can applied two-dimensional objects ncol() can used. MultiAssayExperiment: summary contains counts colData experiments. data types module displays data name warning icon details. Module includes also \"Show/Hide unsupported\" button toggle rows summary table containing datasets number observations calculated.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_filter_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter panel module in teal ‚Äî module_filter_data","title":"Filter panel module in teal ‚Äî module_filter_data","text":"Creates filter panel module teal_data object returns teal_data. build way filter panel changes anything happens (e.g. module_init_data) triggering reactive events something changed module visible. Thanks special implementation modules' data recalculated modules currently displayed.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_filter_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter panel module in teal ‚Äî module_filter_data","text":"","code":"ui_filter_data(id)  srv_filter_data(id, datasets, active_datanames, data, is_active)  .make_filtered_teal_data(modules, data, datasets = NULL, datanames)  .observe_active_filter_changed(datasets, is_active, active_datanames, data)  .get_filter_expr(datasets, datanames)"},{"path":"https://insightsengineering.github.io/teal/main/reference/module_filter_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter panel module in teal ‚Äî module_filter_data","text":"id (character(1)) shiny module instance id. datasets (reactive returning FilteredData NULL) datasets passed parent module (srv_teal) dataset singleton implies filter-panel \"global\". NULL filter-panel \"module-specific\". active_datanames (reactive returning character) module's data names data (reactive returning teal_data) modules (teal_modules) teal_modules object. specific output modules displayed teal application. See modules() module() details.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_filter_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter panel module in teal ‚Äî module_filter_data","text":"eventReactive containing teal_data containing filtered objects filter code. eventReactive triggers conditions met: tab selected (is_active) filters changed (get_filter_expr different previous)","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_filter_manager.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage multiple FilteredData objects ‚Äî module_filter_manager","title":"Manage multiple FilteredData objects ‚Äî module_filter_manager","text":"Oversee filter states across entire application.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_filter_manager.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manage multiple FilteredData objects ‚Äî module_filter_manager","text":"","code":"ui_filter_manager_panel(id)  srv_filter_manager_panel(id, slices_global)  ui_filter_manager(id)  srv_filter_manager(id, slices_global)  srv_module_filter_manager(id, module_fd, slices_global)"},{"path":"https://insightsengineering.github.io/teal/main/reference/module_filter_manager.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manage multiple FilteredData objects ‚Äî module_filter_manager","text":"id (character(1)) shiny module instance id. slices_global (reactiveVal) containing teal_slices. module_fd (FilteredData) Object containing data filtered single teal module.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_filter_manager.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manage multiple FilteredData objects ‚Äî module_filter_manager","text":"Module returns slices_global (reactiveVal) containing teal_slices object mapping.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_filter_manager.html","id":"slices-global","dir":"Reference","previous_headings":"","what":"Slices global","title":"Manage multiple FilteredData objects ‚Äî module_filter_manager","text":"key role maintaining module-specific filter states played .slicesGlobal object. reference class holds following fields: all_slices (reactiveVal) - reactive value containing filters registered app. module_slices_api (reactiveValues) - reactive field containing references modules' FilteredData object methods. moment used srv_filter_manager display filter states table combining informations all_slices FilteredData$get_available_teal_slices(). session new filters added all_slices unless module_snapshot_manager used restore previous state. Filters all_slices can activated deactivated module linked (ways) attr(, \"mapping\") : module's filter added removed FilteredData object, information passed SlicesGlobal updates attr(, \"mapping\") accordingly. mapping changes SlicesGlobal, filters set removed module's FilteredData.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_filter_manager.html","id":"filter-manager","dir":"Reference","previous_headings":"","what":"Filter manager","title":"Manage multiple FilteredData objects ‚Äî module_filter_manager","text":"Filter-manager split two parts: ui/srv_filter_manager_panel - Called whole app. module observes changes filters slices_global displays table utilizing information mapping: (TRUE) - filter active module (FALSE) - filter inactive module (NA) - filter available module ui/srv_module_filter_manager - Called teal_module. Handling filter states single module keeping module FilteredData consistent slices_global, local filters always reflected slices_global mapping vice versa.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_init_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Module for teal ‚Äî module_init_data","title":"Data Module for teal ‚Äî module_init_data","text":"module manages data argument srv_teal. teal framework uses teal.data::teal_data(), can provided various ways: Directly teal.data::teal_data() object. automatically convert reactive teal_data. reactive object returns teal.data::teal_data() object.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_init_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Module for teal ‚Äî module_init_data","text":"","code":"ui_init_data(id)  srv_init_data(id, data)"},{"path":"https://insightsengineering.github.io/teal/main/reference/module_init_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Module for teal ‚Äî module_init_data","text":"id (character(1)) shiny module instance id. data (teal_data, teal_data_module, reactive returning teal_data) data application depend .","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_init_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data Module for teal ‚Äî module_init_data","text":"reactive object returns: Output data. data fails returned error handled (tryCatch()) rest application can respond respectively.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/reference/module_init_data.html","id":"reactive-teal-data-","dir":"Reference","previous_headings":"","what":"Reactive teal_data:","title":"Data Module for teal ‚Äî module_init_data","text":"data application can reactively updated, prompting srv_teal() rebuild content accordingly. two methods creating interactive teal_data: Using reactive object provided outside teal application. scenario, reactivity controlled external module, srv_teal responds changes. Using teal_data_module(), embedded within teal application, allowing data resubmitted user needed. Since server teal_data_module() must return reactive teal_data object, methods (1 2) produce reactive behavior within teal application. distinction lies data control: first method involves external control, second method involves control custom module within app. details, see module_teal_data.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve labels from teal_modules ‚Äî module_labels","title":"Retrieve labels from teal_modules ‚Äî module_labels","text":"Retrieve labels teal_modules","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve labels from teal_modules ‚Äî module_labels","text":"","code":"module_labels(modules)"},{"path":"https://insightsengineering.github.io/teal/main/reference/module_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve labels from teal_modules ‚Äî module_labels","text":"modules (teal_modules)","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve labels from teal_modules ‚Äî module_labels","text":"list containing labels modules. modules nested, function returns nested list labels.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_management.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract/Remove module(s) of specific class ‚Äî extract_module","title":"Extract/Remove module(s) of specific class ‚Äî extract_module","text":"Given teal_module teal_modules, return elements structure according class.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_management.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract/Remove module(s) of specific class ‚Äî extract_module","text":"","code":"extract_module(modules, class)  drop_module(modules, class)"},{"path":"https://insightsengineering.github.io/teal/main/reference/module_management.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract/Remove module(s) of specific class ‚Äî extract_module","text":"modules (teal_modules) class class name teal_module extracted dropped.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_management.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract/Remove module(s) of specific class ‚Äî extract_module","text":"extract_module, teal_module class class teal_modules containing modules class class. drop_module, opposite, teal_modules  class class. teal_modules","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_session_info.html","id":null,"dir":"Reference","previous_headings":"","what":"teal user session info module ‚Äî module_session_info","title":"teal user session info module ‚Äî module_session_info","text":"Module display user session info popup download lockfile.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_session_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"teal user session info module ‚Äî module_session_info","text":"","code":"ui_session_info(id)  srv_session_info(id)"},{"path":"https://insightsengineering.github.io/teal/main/reference/module_session_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"teal user session info module ‚Äî module_session_info","text":"id (character(1)) shiny module instance id.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_session_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"teal user session info module ‚Äî module_session_info","text":"NULL invisibly","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_session_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"teal user session info module ‚Äî module_session_info","text":"","code":"ui <- fluidPage(   ui_session_info(\"session_info\") )  server <- function(input, output, session) {   srv_session_info(\"session_info\") }  if (interactive()) {   shinyApp(ui, server) }"},{"path":"https://insightsengineering.github.io/teal/main/reference/module_snapshot_manager.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter state snapshot management ‚Äî module_snapshot_manager","title":"Filter state snapshot management ‚Äî module_snapshot_manager","text":"Capture restore snapshots global (app) filter state.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_snapshot_manager.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter state snapshot management ‚Äî module_snapshot_manager","text":"","code":"ui_snapshot_manager_panel(id)  srv_snapshot_manager_panel(id, slices_global)  ui_snapshot_manager(id)  srv_snapshot_manager(id, slices_global)"},{"path":"https://insightsengineering.github.io/teal/main/reference/module_snapshot_manager.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter state snapshot management ‚Äî module_snapshot_manager","text":"id (character(1)) shiny module instance id. slices_global (reactiveVal) contains teal_slices object containing teal_slices existing app, active inactive.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_snapshot_manager.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter state snapshot management ‚Äî module_snapshot_manager","text":"list containing snapshot history, element unlisted teal_slices object.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_snapshot_manager.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter state snapshot management ‚Äî module_snapshot_manager","text":"module introduces snapshots: stored descriptions filter state entire application. Snapshots allow user save current filter state application later use session, well save file order share app developer users, turn can upload session. snapshot manager accessed camera icon tabset bar. beginning session presents three icons: camera, upload, circular arrow. Clicking camera captures snapshot, clicking upload adds snapshot file applies filter states therein, clicking arrow resets initial application state. snapshots added, show rows table select button save button.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_snapshot_manager.html","id":"server-logic","dir":"Reference","previous_headings":"","what":"Server logic","title":"Filter state snapshot management ‚Äî module_snapshot_manager","text":"Snapshots basically teal_slices objects, however, since module served separate instance FilteredData objects require shared state, teal_slice reactiveVal teal_slices stored . Therefore, teal_slices reversibly converted list lists representation (attributes maintained). Snapshots stored reactiveVal named list. first snapshot initial state application user can add snapshot whenever see fit. every snapshot except initial one, piece UI generated contains snapshot name, select button restore snapshot, save button save file. initial snapshot restored separate \"reset\" button. saved directly user welcome capture initial state snapshot save .","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_snapshot_manager.html","id":"snapshot-mechanics","dir":"Reference","previous_headings":"","what":"Snapshot mechanics","title":"Filter state snapshot management ‚Äî module_snapshot_manager","text":"snapshot captured, user prompted name . Names displayed since used create button ids, hood converted syntactically valid strings. New snapshot names validated valid versions unique. Leading trailing white space trimmed. module can read global state application slices_global mapping_matrix. former provides list existing teal_slices latter says slice active module. name accepted, slices_global converted list lists - snapshot. snapshot contains mapping attribute initial application state (one restored), may reflect current one, mapping_matrix transformed obtain current mapping, .e. list , passed mapping argument teal_slices(), result current mapping. substituted snapshot's mapping attribute snapshot added snapshot list. restore app state, snapshot retrieved storage rebuilt teal_slices object. state FilteredData objects (provided datasets) cleared set anew according mapping attribute snapshot. snapshot set current content slices_global. save snapshot, snapshot retrieved reassembled just like restoring, saved file slices_store(). snapshot uploaded, first added storage just like newly created one, used restore app state much like snapshot taken storage. Upon clicking upload icon user prompted file upload may choose name new snapshot. name defaults name file (extension dropped) normal naming rules apply. Loading file yields teal_slices object, disassembled storage used directly restoring app state.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_snapshot_manager.html","id":"transferring-snapshots","dir":"Reference","previous_headings":"","what":"Transferring snapshots","title":"Filter state snapshot management ‚Äî module_snapshot_manager","text":"Snapshots uploaded disk used application come , .e. application uses data modules. ensure case, init stamps teal_slices app id stored app_id attribute teal_slices object. snapshot restored file, app_id compared current app state match snapshot admitted session.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_snapshot_manager.html","id":"bookmarks","dir":"Reference","previous_headings":"","what":"Bookmarks","title":"Filter state snapshot management ‚Äî module_snapshot_manager","text":"onBookmark callback creates snapshot current filter state. done app session, module session. (snapshot retrieved module_teal order set initial app state restored app.) snapshot, previous snapshot history dumped values.rds file <bookmark_dir>.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_snapshot_manager.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Filter state snapshot management ‚Äî module_snapshot_manager","text":"Aleksander Chlebowski","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_teal.html","id":null,"dir":"Reference","previous_headings":"","what":"teal main module ‚Äî module_teal","title":"teal main module ‚Äî module_teal","text":"Module create teal app Shiny Module.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_teal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"teal main module ‚Äî module_teal","text":"","code":"ui_teal(id, modules)  srv_teal(id, data, modules, filter = teal_slices())"},{"path":"https://insightsengineering.github.io/teal/main/reference/module_teal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"teal main module ‚Äî module_teal","text":"id (character(1)) shiny module instance id. modules (teal_modules) teal_modules object. specific output modules displayed teal application. See modules() module() details. data (teal_data, teal_data_module, reactive returning teal_data) data application depend . filter (teal_slices) Optionally, specifies initial filter using teal_slices().","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_teal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"teal main module ‚Äî module_teal","text":"NULL invisibly","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_teal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"teal main module ‚Äî module_teal","text":"module can used instead init() custom Shiny applications. Unlike init(), automatically include reporter_previewer_module, module_session_info, UI components like header, footer, title can added separately Shiny app consuming module. Module responsible creating main shiny app layout initializing necessary components. module establishes reactive connection input data every component app. Reactive change data passed argument, reloads app possibly keeps input settings user can continue one left .","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_teal.html","id":"data-flow-in-teal-application","dir":"Reference","previous_headings":"","what":"data flow in teal application","title":"teal main module ‚Äî module_teal","text":"module supports multiple data inputs eventually, converted reactive returning teal_data module. reactive teal_data object several actions performed: data loading module_init_data data filtering module_filter_data data transformation module_transform_data","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_teal.html","id":"fallback-on-failure","dir":"Reference","previous_headings":"","what":"Fallback on failure","title":"teal main module ‚Äî module_teal","text":"teal designed way app never crash error introduced custom shiny module provided app developer (e.g. teal_data_module(), teal_transform_module()). module returns failing object, app halt evaluation display warning message. App user always chance fix improper input continue without restarting session.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_teal_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute and validate teal_data_module ‚Äî module_teal_data","title":"Execute and validate teal_data_module ‚Äî module_teal_data","text":"low level module handle teal_data_module execution validation. teal_transform_module() inherits teal_data_module() handled module . srv_teal() accepts various data objects eventually transformed reactive teal.data::teal_data() standard data class whole teal framework.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_teal_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute and validate teal_data_module ‚Äî module_teal_data","text":"","code":"ui_teal_data_module(id, data_module = function(id) NULL)  srv_teal_data_module(   id,   data_module = function(id) NULL,   modules = NULL,   validate_shiny_silent_error = TRUE,   is_transform_failed = reactiveValues() )  ui_validate_reactive_teal_data(id)  srv_validate_reactive_teal_data(   id,   data,   modules = NULL,   validate_shiny_silent_error = FALSE,   hide_validation_error = reactive(FALSE) )"},{"path":"https://insightsengineering.github.io/teal/main/reference/module_teal_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute and validate teal_data_module ‚Äî module_teal_data","text":"id (character(1)) shiny module instance id. data_module (teal_data_module) modules (teal_modules teal_module) datanames validation purpose validate_shiny_silent_error (logical) TRUE, shiny.silent.error validated is_transform_failed (reactiveValues) contains logical flags named transformator. Help determine previous transformator failed, following transformators can disabled display generic failure message. data (reactive returning teal_data)","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_teal_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute and validate teal_data_module ‚Äî module_teal_data","text":"reactive teal_data","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_teal_data.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Execute and validate teal_data_module ‚Äî module_teal_data","text":"ui_teal_data_module renamed ui_teal_data. srv_teal_data_module renamed srv_teal_data.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_teal_data.html","id":"data-validation","dir":"Reference","previous_headings":"","what":"data validation","title":"Execute and validate teal_data_module ‚Äî module_teal_data","text":"Executed teal_data_module() validated output validated consistency. Output data invalid : teal_data_module() invalid server return reactive. Immediately crashes app! reactive throws shiny.error - happens module creating teal.data::teal_data() fails. reactive returns qenv.error - happens teal.data::teal_data() evaluates failing code. reactive object return teal.data::teal_data(). teal.data::teal_data() object lacks datanames specified modules argument. teal (observers srv_teal) always waits render app reactive teal_data returned. error 2-4 occurs, relevant error message displayed app user. issue resolved, app continue run. teal guarantees errors data crash app (except error 1).","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_teal_lockfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate lockfile for application's environment reproducibility ‚Äî module_teal_lockfile","title":"Generate lockfile for application's environment reproducibility ‚Äî module_teal_lockfile","text":"Generate lockfile application's environment reproducibility","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_teal_lockfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate lockfile for application's environment reproducibility ‚Äî module_teal_lockfile","text":"","code":"ui_teal_lockfile(id)  srv_teal_lockfile(id)  .teal_lockfile_process_invoke(lockfile_path)  .renv_snapshot(lockfile_path)  .is_lockfile_deps_installed()  .is_disabled_lockfile_scenario()"},{"path":"https://insightsengineering.github.io/teal/main/reference/module_teal_lockfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate lockfile for application's environment reproducibility ‚Äî module_teal_lockfile","text":"id (character(1)) shiny module instance id. lockfile_path (character) path lockfile.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_teal_lockfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate lockfile for application's environment reproducibility ‚Äî module_teal_lockfile","text":"NULL","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_teal_lockfile.html","id":"different-ways-of-creating-lockfile","dir":"Reference","previous_headings":"","what":"Different ways of creating lockfile","title":"Generate lockfile for application's environment reproducibility ‚Äî module_teal_lockfile","text":"teal leverages renv::snapshot(), offers multiple methods lockfile creation. Working directory lockfile: teal, default, create implicit type lockfile uses renv::dependencies() detect R packages current project's working directory. DESCRIPTION-based lockfile: generate lockfile based DESCRIPTION file working directory, set renv::settings$snapshot.type(\"explicit\"). naming convention type follows renv::snapshot(). \"explicit\" type, refer renv::settings$package.dependency.fields() DESCRIPTION fields included lockfile. Custom files-based lockfile: specify custom files basis lockfile, set renv::settings$snapshot.type(\"custom\") configure renv.snapshot.filter option.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_teal_lockfile.html","id":"lockfile-usage","dir":"Reference","previous_headings":"","what":"lockfile usage","title":"Generate lockfile for application's environment reproducibility ‚Äî module_teal_lockfile","text":"creating lockfile, can restore application's environment using renv::restore().","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/reference/module_teal_module.html","id":null,"dir":"Reference","previous_headings":"","what":"Calls all modules ‚Äî module_teal_module","title":"Calls all modules ‚Äî module_teal_module","text":"UI side teal_modules translated tabsetPanel teal_module tabPanel. , UI server called recursively tab separate module reflect nested structure modules argument.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_teal_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calls all modules ‚Äî module_teal_module","text":"","code":"ui_teal_module(id, modules, depth = 0L)  # Default S3 method ui_teal_module(id, modules, depth = 0L)  # S3 method for class 'teal_modules' ui_teal_module(id, modules, depth = 0L)  # S3 method for class 'teal_module' ui_teal_module(id, modules, depth = 0L)  srv_teal_module(   id,   data,   modules,   datasets = NULL,   slices_global,   reporter = teal.reporter::Reporter$new(),   data_load_status = reactive(\"ok\"),   is_active = reactive(TRUE) )  # Default S3 method srv_teal_module(   id,   data,   modules,   datasets = NULL,   slices_global,   reporter = teal.reporter::Reporter$new(),   data_load_status = reactive(\"ok\"),   is_active = reactive(TRUE) )  # S3 method for class 'teal_modules' srv_teal_module(   id,   data,   modules,   datasets = NULL,   slices_global,   reporter = teal.reporter::Reporter$new(),   data_load_status = reactive(\"ok\"),   is_active = reactive(TRUE) )  # S3 method for class 'teal_module' srv_teal_module(   id,   data,   modules,   datasets = NULL,   slices_global,   reporter = teal.reporter::Reporter$new(),   data_load_status = reactive(\"ok\"),   is_active = reactive(TRUE) )"},{"path":"https://insightsengineering.github.io/teal/main/reference/module_teal_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calls all modules ‚Äî module_teal_module","text":"id (character(1)) shiny module instance id. modules (teal_modules) teal_modules object. specific output modules displayed teal application. See modules() module() details. depth (integer(1)) number helps determine depth modules nesting. data (reactive returning teal_data) datasets (reactive returning FilteredData NULL) datasets passed parent module (srv_teal) dataset singleton implies filter-panel \"global\". NULL filter-panel \"module-specific\". slices_global (reactiveVal returning modules_teal_slices) see module_filter_manager data_load_status (reactive returning character) Determines action dependent data loading status: \"ok\" teal_data returned data loading. \"teal_data_module failed\" teal_data_module() return  teal_data. Disables tabs buttons. \"external failed\" reactive passed srv_teal(data) return teal_data. Hides whole tab panel.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_teal_module.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calls all modules ‚Äî module_teal_module","text":"output currently active module. srv_teal_module.teal_module returns reactiveVal containing output called module. srv_teal_module.teal_modules returns output module selected input$active_tab.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_teal_with_splash.html","id":null,"dir":"Reference","previous_headings":"","what":"UI and server modules of teal ‚Äî module_teal_with_splash","title":"UI and server modules of teal ‚Äî module_teal_with_splash","text":"Please use module_teal instead.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_teal_with_splash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UI and server modules of teal ‚Äî module_teal_with_splash","text":"","code":"ui_teal_with_splash(   id,   data,   modules,   title = build_app_title(),   header = tags$p(),   footer = tags$p() )  srv_teal_with_splash(id, data, modules, filter = teal_slices())"},{"path":"https://insightsengineering.github.io/teal/main/reference/module_teal_with_splash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UI and server modules of teal ‚Äî module_teal_with_splash","text":"id (character(1)) shiny module instance id. data (teal_data, teal_data_module, reactive returning teal_data) data application depend . modules (teal_modules) teal_modules object. specific output modules displayed teal application. See modules() module() details. title (shiny.tag character(1))  Optionally, browser window title. Defaults title \"teal app\" icon NEST. Can created using build_app_title() passing valid shiny.tag head tag title link tag. parameter deprecated. Use modify_title() teal app object instead. header (shiny.tag character(1))  Optionally, header app. parameter deprecated. Use modify_header() teal app object instead. footer (shiny.tag character(1))  Optionally, footer app. parameter deprecated. Use modify_footer() teal app object instead. filter (teal_slices) Optionally, specifies initial filter using teal_slices().","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_teal_with_splash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"UI and server modules of teal ‚Äî module_teal_with_splash","text":"Returns reactive expression containing teal_data object data loaded NULL .","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_transform_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Module to transform reactive teal_data ‚Äî module_transform_data","title":"Module to transform reactive teal_data ‚Äî module_transform_data","text":"Module calls teal_transform_module() sequence reactive teal_data output one module handed following module's input.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_transform_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Module to transform reactive teal_data ‚Äî module_transform_data","text":"","code":"ui_transform_teal_data(id, transformators, class = \"well\")  srv_transform_teal_data(   id,   data,   transformators,   modules = NULL,   is_transform_failed = reactiveValues() )"},{"path":"https://insightsengineering.github.io/teal/main/reference/module_transform_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Module to transform reactive teal_data ‚Äî module_transform_data","text":"id (character(1)) shiny module instance id. transformators (list teal_transform_module) applied transform module's data input. learn check vignette(\"data-transform--shiny-module\", package = \"teal\"). class (character(1)) CSS class added div wrapper tag. data (reactive returning teal_data) modules (teal_modules teal_module) datanames validation purpose is_transform_failed (reactiveValues) contains logical flags named transformator. Help determine previous transformator failed, following transformators can disabled display generic failure message.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/module_transform_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Module to transform reactive teal_data ‚Äî module_transform_data","text":"reactive teal_data","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/modules_bookmarkable.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve teal_bookmarkable attribute from teal_modules ‚Äî modules_bookmarkable","title":"Retrieve teal_bookmarkable attribute from teal_modules ‚Äî modules_bookmarkable","text":"Retrieve teal_bookmarkable attribute teal_modules","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/modules_bookmarkable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve teal_bookmarkable attribute from teal_modules ‚Äî modules_bookmarkable","text":"","code":"modules_bookmarkable(modules)"},{"path":"https://insightsengineering.github.io/teal/main/reference/modules_bookmarkable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve teal_bookmarkable attribute from teal_modules ‚Äî modules_bookmarkable","text":"modules (teal_modules teal_module) object","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/modules_bookmarkable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve teal_bookmarkable attribute from teal_modules ‚Äî modules_bookmarkable","text":"named list structure modules TRUE FALSE values indicating whether module bookmarkable.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/modules_depth.html","id":null,"dir":"Reference","previous_headings":"","what":"Get module depth ‚Äî modules_depth","title":"Get module depth ‚Äî modules_depth","text":"Depth starts 0, single teal.module depth 0. Nesting increases overall depth 1.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/modules_depth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get module depth ‚Äî modules_depth","text":"","code":"modules_depth(modules, depth = 0L)"},{"path":"https://insightsengineering.github.io/teal/main/reference/modules_depth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get module depth ‚Äî modules_depth","text":"modules (list teal_modules teal_module) Nested list teal_modules teal_module objects single teal_modules teal_module object. specific output modules displayed teal application. See modules() module() details. depth optional integer determining current depth level","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/modules_depth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get module depth ‚Äî modules_depth","text":"Depth level given module.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/pluralize.html","id":null,"dir":"Reference","previous_headings":"","what":"Pluralize a word depending on the size of the input ‚Äî pluralize","title":"Pluralize a word depending on the size of the input ‚Äî pluralize","text":"Pluralize word depending size input","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/pluralize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pluralize a word depending on the size of the input ‚Äî pluralize","text":"","code":"pluralize(x, singular, plural = NULL)"},{"path":"https://insightsengineering.github.io/teal/main/reference/pluralize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pluralize a word depending on the size of the input ‚Äî pluralize","text":"x (object) check length plural. singular (character) singular form word. plural (optional character) plural form word. given \"s\" added singular form.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/pluralize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pluralize a word depending on the size of the input ‚Äî pluralize","text":"character correctly represents size x argument.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/report_card_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Template function for TealReportCard creation and customization ‚Äî report_card_template","title":"Template function for TealReportCard creation and customization ‚Äî report_card_template","text":"function generates report card title, optional description, option append filter state list.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/report_card_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template function for TealReportCard creation and customization ‚Äî report_card_template","text":"","code":"report_card_template(   title,   label,   description = NULL,   with_filter,   filter_panel_api )"},{"path":"https://insightsengineering.github.io/teal/main/reference/report_card_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template function for TealReportCard creation and customization ‚Äî report_card_template","text":"title (character(1)) title card (unless overwritten label) label (character(1)) label provided user adding card description (character(1)) optional, additional description with_filter (logical(1)) flag indicating add filter state filter_panel_api (FilterPanelAPI) object API allows generation filter state report","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/report_card_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Template function for TealReportCard creation and customization ‚Äî report_card_template","text":"(TealReportCard) populated title, description filter state.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/reporter_previewer_module.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a teal module for previewing a report ‚Äî reporter_previewer_module","title":"Create a teal module for previewing a report ‚Äî reporter_previewer_module","text":"function wraps teal.reporter::reporter_previewer_ui() teal.reporter::reporter_previewer_srv() teal_module used teal applications. creating teal application using init() module added application automatically teal_modules support report generation.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/reporter_previewer_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a teal module for previewing a report ‚Äî reporter_previewer_module","text":"","code":"reporter_previewer_module(label = \"Report previewer\", server_args = list())"},{"path":"https://insightsengineering.github.io/teal/main/reference/reporter_previewer_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a teal module for previewing a report ‚Äî reporter_previewer_module","text":"label (character(1)) Label shown navigation item module module group. modules() defaults \"root\". See Details. server_args (named list) Arguments passed teal.reporter::reporter_previewer_srv().","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/reporter_previewer_module.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a teal module for previewing a report ‚Äî reporter_previewer_module","text":"teal_module (extended teal_module_previewer class) containing teal.reporter previewer functionality.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/restoreValue.html","id":null,"dir":"Reference","previous_headings":"","what":"Restore value from bookmark. ‚Äî restoreValue","title":"Restore value from bookmark. ‚Äî restoreValue","text":"Get value bookmark return default.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/restoreValue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restore value from bookmark. ‚Äî restoreValue","text":"","code":"restoreValue(value, default)"},{"path":"https://insightsengineering.github.io/teal/main/reference/restoreValue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restore value from bookmark. ‚Äî restoreValue","text":"value (character(1)) name value restore default fallback value","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/restoreValue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Restore value from bookmark. ‚Äî restoreValue","text":"application restored server-side bookmark, variable specified value values environment. Otherwise default.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/restoreValue.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Restore value from bookmark. ‚Äî restoreValue","text":"Bookmarks can store inputs also arbitrary values. values stored onBookmark callbacks restored onBookmarked callbacks, placed values environment session$restoreContext field. Using teal_data_module makes impossible run callbacks app becomes ready modules execute callbacks registered. cases stored values can still recovered session object directly. Note variable names values environment prefixed module name space names, therefore, using function modules, value must run name space function.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/run_js_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Run JS file from /inst/js/ package directory ‚Äî run_js_files","title":"Run JS file from /inst/js/ package directory ‚Äî run_js_files","text":"triggered server execute client rather triggered directly client. Unlike include_js_files includes JavaScript functions, run_js actually executes JavaScript functions.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/run_js_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run JS file from /inst/js/ package directory ‚Äî run_js_files","text":"","code":"run_js_files(files)"},{"path":"https://insightsengineering.github.io/teal/main/reference/run_js_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run JS file from /inst/js/ package directory ‚Äî run_js_files","text":"files (character) vector filenames.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/run_js_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run JS file from /inst/js/ package directory ‚Äî run_js_files","text":"NULL, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/run_js_files.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run JS file from /inst/js/ package directory ‚Äî run_js_files","text":"system.file used access files packages, work devtools. Therefore, redefine method package needed. Thus, export method.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/show_rcode_modal.html","id":null,"dir":"Reference","previous_headings":"","what":"Show R code modal ‚Äî show_rcode_modal","title":"Show R code modal ‚Äî show_rcode_modal","text":"Use shiny::showModal() function show R code inside.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/show_rcode_modal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show R code modal ‚Äî show_rcode_modal","text":"","code":"show_rcode_modal(title = NULL, rcode, session = getDefaultReactiveDomain())"},{"path":"https://insightsengineering.github.io/teal/main/reference/show_rcode_modal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show R code modal ‚Äî show_rcode_modal","text":"title (character(1)) Title modal, displayed first comment R code. rcode (character) vector R code show inside modal. session (ShinySession) optional shiny session object, defaults shiny::getDefaultReactiveDomain().","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/show_rcode_modal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Show R code modal ‚Äî show_rcode_modal","text":"shiny::showModal()","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/slices_store.html","id":null,"dir":"Reference","previous_headings":"","what":"Store and restore teal_slices object ‚Äî slices_store","title":"Store and restore teal_slices object ‚Äî slices_store","text":"Functions write teal_slices object file JSON format, also restore object disk.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/slices_store.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Store and restore teal_slices object ‚Äî slices_store","text":"","code":"slices_store(tss, file)  slices_restore(file)"},{"path":"https://insightsengineering.github.io/teal/main/reference/slices_store.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Store and restore teal_slices object ‚Äî slices_store","text":"tss (teal_slices) object stored. file (character(1)) file path teal_slices object saved restored. file extension \".json\".","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/slices_store.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Store and restore teal_slices object ‚Äî slices_store","text":"slices_store returns NULL, invisibly. slices_restore returns teal_slices object restored file.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/slices_store.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Store and restore teal_slices object ‚Äî slices_store","text":"Date date time objects stored following formats: Date class converted \"ISO8601\" standard (YYYY-MM-DD). POSIX*t classes converted character using format.POSIX*t(usetz = TRUE, tz = \"UTC\") (YYYY-MM-DD HH:MM:SS UTC, UTC Coordinated Universal Time timezone short-code). format assumed slices_restore. POSIX*t objects selected choices fields teal_slice objects always printed UTC timezone well.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/reference/tdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a tdata object ‚Äî tdata","title":"Create a tdata object ‚Äî tdata","text":"Recent changes teal cause modules fail modules expect tdata object passed data argument instead receive teal_data object, additionally wrapped reactive expression server functions. order easily adapt modules without proper refactor, use function downgrade data argument.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/tdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a tdata object ‚Äî tdata","text":"","code":"new_tdata(...)  tdata2env(...)  get_code_tdata(...)  # S3 method for class 'tdata' join_keys(...)  get_metadata(...)  as_tdata(...)"},{"path":"https://insightsengineering.github.io/teal/main/reference/tdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a tdata object ‚Äî tdata","text":"... ignored","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/tdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a tdata object ‚Äî tdata","text":"nothing","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal-package.html","id":null,"dir":"Reference","previous_headings":"","what":"teal: Interactive exploration of clinical trials data ‚Äî teal-package","title":"teal: Interactive exploration of clinical trials data ‚Äî teal-package","text":"teal package provides shiny based framework creating interactive data analysis environment.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"teal: Interactive exploration of clinical trials data ‚Äî teal-package","text":"learn mode package, visit project website read init() manual page.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/reference/teal-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"teal: Interactive exploration of clinical trials data ‚Äî teal-package","text":"Maintainer: Dawid Kaledkowski dawid.kaledkowski@roche.com (ORCID) Authors: Pawel Rucki pawel.rucki@roche.com Aleksander Chlebowski aleksander.chlebowski@contractors.roche.com (ORCID) Andre Verissimo andre.verissimo@roche.com (ORCID) Kartikeya Kirar kartikeya.kirar@businesspartner.roche.com Vedha Viyash vedha.viyash@roche.com Marcin Kosinski marcin.kosinski.mk1@roche.com Adrian Waddell adrian.waddell@gene.com Nikolas Burkoff Mahmoud Hallal Maciej Nasinski Konrad Pagacz Junlue Zhao Tadeusz Lewandowski contributors: Chendi Liao chendi.liao@roche.com [reviewer] Dony Unardi unardid@gene.com [reviewer] F. Hoffmann-La Roche AG [copyright holder, funder] Maximilian Mordig [contributor]","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_data_module.html","id":null,"dir":"Reference","previous_headings":"","what":"Data module for teal applications ‚Äî teal_data_module","title":"Data module for teal applications ‚Äî teal_data_module","text":"Create teal_data_module object evaluate code history tracking.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_data_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data module for teal applications ‚Äî teal_data_module","text":"","code":"teal_data_module(ui, server, label = \"data module\", once = TRUE)  # S4 method for class 'teal_data_module,character' eval_code(object, code)  # S3 method for class 'teal_data_module' within(data, expr, ...)"},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_data_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data module for teal applications ‚Äî teal_data_module","text":"ui (function(id)) shiny module UI function; must take id argument server (function(id)) shiny module server function; must take id argument; must return reactive expression containing teal_data object label (character(1)) Label module. (logical(1)) TRUE, data module shown disappear successful data loading. App user longer able interact module anymore. FALSE, data module can reused multiple times. App user able interact change data output module multiple times. object (teal_data_module) code (character, language expression) code evaluate. possible preserve original formatting code providing character expression result parse(keep.source = TRUE). data (teal_data_module) object expr (expression) evaluate. Must inline code. See within() ... See Details.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_data_module.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data module for teal applications ‚Äî teal_data_module","text":"teal_data_module returns list class teal_data_module containing two elements, ui server provided via arguments. eval_code returns teal_data_module object delayed evaluation code module run. within returns teal_data_module object delayed evaluation expr module run.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_data_module.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data module for teal applications ‚Äî teal_data_module","text":"teal_data_module creates shiny module interactively supply modify data teal application. module allows running code (creation modification) app starts reloads. body server function run app rather global environment. means run every time app starts, use sparingly. Pass module instead teal_data object call init(). Note server function must always return teal_data object wrapped reactive expression. See vignette vignette(\"data--shiny-module\", package = \"teal\") details. eval_code evaluates given code environment teal_data object created teal_data_module. code added @code slot teal_data. within convenience function evaluating inline code inside environment teal_data_module. accepts inline expressions (simple compound) allows injecting values expr ... argument: name:value pairs passed ..., name expr replaced value.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_data_module.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data module for teal applications ‚Äî teal_data_module","text":"","code":"tdm <- teal_data_module(   ui = function(id) {     ns <- NS(id)     actionButton(ns(\"submit\"), label = \"Load data\")   },   server = function(id) {     moduleServer(id, function(input, output, session) {       eventReactive(input$submit, {         data <- within(           teal_data(),           {             dataset1 <- iris             dataset2 <- mtcars           }         )          data       })     })   } )  eval_code(tdm, \"dataset1 <- subset(dataset1, Species == 'virginica')\") #> $ui #> function(id) { #>       ns <- NS(id) #>       object$ui(ns(\"mutate_inner\")) #>     } #> <environment: 0x55da9d2eb1d8> #>  #> $server #> function(id) { #>         data_out <- server(id) #>         decorate_err_msg( #>           assert_reactive(data_out), #>           pre = sprintf(\"From: 'teal_data_module()':\\nA 'teal_data_module' with \\\"%s\\\" label:\", label), #>           post = \"Please make sure that this module returns a 'reactive` object containing 'teal_data' class of object.\" # nolint: line_length_linter. #>         ) #>       } #> <environment: 0x55da9d2eadb0> #>  #> attr(,\"label\") #> [1] \"data module\" #> attr(,\"class\") #> [1] \"teal_data_module\" #> attr(,\"once\") #> [1] TRUE  within(tdm, dataset1 <- subset(dataset1, Species == \"virginica\")) #> $ui #> function(id) { #>       ns <- NS(id) #>       object$ui(ns(\"mutate_inner\")) #>     } #> <environment: 0x55da9d824628> #>  #> $server #> function(id) { #>         data_out <- server(id) #>         decorate_err_msg( #>           assert_reactive(data_out), #>           pre = sprintf(\"From: 'teal_data_module()':\\nA 'teal_data_module' with \\\"%s\\\" label:\", label), #>           post = \"Please make sure that this module returns a 'reactive` object containing 'teal_data' class of object.\" # nolint: line_length_linter. #>         ) #>       } #> <environment: 0x55da9d8241c8> #>  #> attr(,\"label\") #> [1] \"data module\" #> attr(,\"class\") #> [1] \"teal_data_module\" #> attr(,\"once\") #> [1] TRUE  # use additional parameter for expression value substitution. valid_species <- \"versicolor\" within(tdm, dataset1 <- subset(dataset1, Species %in% species), species = valid_species) #> $ui #> function(id) { #>       ns <- NS(id) #>       object$ui(ns(\"mutate_inner\")) #>     } #> <environment: 0x55da9d442fa8> #>  #> $server #> function(id) { #>         data_out <- server(id) #>         decorate_err_msg( #>           assert_reactive(data_out), #>           pre = sprintf(\"From: 'teal_data_module()':\\nA 'teal_data_module' with \\\"%s\\\" label:\", label), #>           post = \"Please make sure that this module returns a 'reactive` object containing 'teal_data' class of object.\" # nolint: line_length_linter. #>         ) #>       } #> <environment: 0x55da9d442b80> #>  #> attr(,\"label\") #> [1] \"data module\" #> attr(,\"class\") #> [1] \"teal_data_module\" #> attr(,\"once\") #> [1] TRUE"},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_data_to_filtered_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a FilteredData ‚Äî teal_data_to_filtered_data","title":"Create a FilteredData ‚Äî teal_data_to_filtered_data","text":"Create FilteredData object teal_data object.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_data_to_filtered_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a FilteredData ‚Äî teal_data_to_filtered_data","text":"","code":"teal_data_to_filtered_data(x, datanames = names(x))"},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_data_to_filtered_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a FilteredData ‚Äî teal_data_to_filtered_data","text":"x (teal_data) object datanames (character) vector data set names include; must subset names(x)","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_data_to_filtered_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a FilteredData ‚Äî teal_data_to_filtered_data","text":"FilteredData object.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_data_utilities.html","id":null,"dir":"Reference","previous_headings":"","what":"teal_data utils ‚Äî teal_data_utilities","title":"teal_data utils ‚Äî teal_data_utilities","text":"teal need recreate teal_data object due two operations: need append filter-data code objects evaluated FilteredData want avoid double-evaluation. need subset teal_data datanames used module, shorten obtainable R-code","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_data_utilities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"teal_data utils ‚Äî teal_data_utilities","text":"","code":".append_evaluated_code(data, code)  .append_modified_data(data, objects)"},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_data_utilities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"teal_data utils ‚Äî teal_data_utilities","text":"data (teal_data) code (character) code append object's code slot. objects (list) objects append object's environment.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_data_utilities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"teal_data utils ‚Äî teal_data_utilities","text":"modified teal_data","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_data_utilities.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"teal_data utils ‚Äî teal_data_utilities","text":"Due recreation teal_data object done simply using public teal.code teal.data methods.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_extend_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Custom Server Logic to teal Application ‚Äî teal_extend_server","title":"Add a Custom Server Logic to teal Application ‚Äî teal_extend_server","text":"Adds custom server function teal app. function can define additional server logic.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_extend_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Custom Server Logic to teal Application ‚Äî teal_extend_server","text":"","code":"teal_extend_server(x, custom_server, module_id = character(0))"},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_extend_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Custom Server Logic to teal Application ‚Äî teal_extend_server","text":"x (teal_app) teal_app object created using init function. custom_server (function(input, output, session) function(id, ...)) custom server function server module set. module_id (character(1)) ID module module server function passed.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_modifiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace UI Elements in teal UI objects ‚Äî teal_modifiers","title":"Replace UI Elements in teal UI objects ‚Äî teal_modifiers","text":"Replace UI Elements teal UI objects","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_modifiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace UI Elements in teal UI objects ‚Äî teal_modifiers","text":"","code":"modify_title(x, title = \"teal app\", favicon = NULL)  modify_header(x, element = tags$p())  modify_footer(x, element = tags$p())"},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_modifiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace UI Elements in teal UI objects ‚Äî teal_modifiers","text":"x (teal_app) teal_app object created using init function. title (shiny.tag character(1)) new title used. favicon (character) path icon title. image/icon path can remote static path accessible shiny, like www/. favicon NULL teal logo used favicon. element Replacement UI element (shiny tag HTML)","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_modifiers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace UI Elements in teal UI objects ‚Äî teal_modifiers","text":"","code":"app <- init(   data = teal_data(IRIS = iris, MTCARS = mtcars),   modules = modules(example_module()) ) |>   modify_title(title = \"Custom title\")  if (interactive()) {   shinyApp(app$ui, app$server) } app <- init(   data = teal_data(IRIS = iris),   modules = modules(example_module()) ) |>   modify_header(element = tags$div(h3(\"Custom header\")))  if (interactive()) {   shinyApp(app$ui, app$server) } app <- init(   data = teal_data(IRIS = iris),   modules = modules(example_module()) ) |>   modify_footer(element = \"Custom footer\")  if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_modules.html","id":null,"dir":"Reference","previous_headings":"","what":"Create teal_module and teal_modules objects ‚Äî teal_modules","title":"Create teal_module and teal_modules objects ‚Äî teal_modules","text":"Create nested tab structure embed modules teal application.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_modules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create teal_module and teal_modules objects ‚Äî teal_modules","text":"","code":"module(   label = \"module\",   server = function(id, data, ...) moduleServer(id, function(input, output, session)     NULL),   ui = function(id, ...) tags$p(paste0(\"This module has no UI (id: \", id, \" )\")),   filters,   datanames = \"all\",   server_args = NULL,   ui_args = NULL,   transformators = list() )  modules(..., label = \"root\")  # S3 method for class 'teal_module' format(   x,   is_last = FALSE,   parent_prefix = \"\",   what = c(\"datasets\", \"properties\", \"ui_args\", \"server_args\", \"decorators\",     \"transformators\"),   ... )  # S3 method for class 'teal_modules' format(x, is_root = TRUE, is_last = FALSE, parent_prefix = \"\", ...)  # S3 method for class 'teal_module' print(x, ...)  # S3 method for class 'teal_modules' print(x, ...)"},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_modules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create teal_module and teal_modules objects ‚Äî teal_modules","text":"label (character(1)) Label shown navigation item module module group. modules() defaults \"root\". See Details. server (function) shiny module following arguments: id - teal set proper shiny namespace module (see shiny::moduleServer()). input, output, session - (optional; recommended) provided, shiny::callModule() used call module. shiny 1.5.0, recommended way use shiny::moduleServer() instead require arguments. data (optional) server function includes data argument, receive reactive expression containing teal_data object. datasets (optional) provided, module called FilteredData object value argument. (See teal.slice::FilteredData). reporter (optional) provided, module called Reporter object value argument. (See teal.reporter::Reporter). filter_panel_api (optional) provided, module called FilterPanelAPI object value argument. (See teal.slice::FilterPanelAPI). ... (optional) provided, server_args elements passed module named argument .... ui (function) shiny UI module function following arguments: id - teal set proper shiny namespace module. ... (optional) provided, ui_args elements passed module named argument .... filters (character) Deprecated. Use datanames instead. datanames (character) Names datasets relevant item. 2 reserved values specific behaviors: keyword \"\" includes datasets available data passed teal application. NULL hides sidebar panel completely. transformators specified, datanames automatically added datanames argument. server_args (named list) additional arguments passed server function. ui_args (named list) additional arguments passed UI function. transformators (list teal_transform_module) applied transform module's data input. learn check vignette(\"data-transform--shiny-module\", package = \"teal\"). ... modules(): (teal_module teal_modules) Objects wrap tab. format() print(): Arguments passed methods. x (teal_module teal_modules) Object format/print. is_last (logical(1)) Whether last item parent's children list. Affects tree branch character used (L- vs |-) parent_prefix (character(1)) prefix inherited parent nodes, used maintain tree structure nested levels (character) Specifies metadata display. Possible values: \"datasets\", \"properties\", \"ui_args\", \"server_args\", \"transformators\" is_root (logical(1)) Whether root node tree. used format.teal_modules(). Determines whether show \"TEAL ROOT\" header","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_modules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create teal_module and teal_modules objects ‚Äî teal_modules","text":"module() returns object class teal_module. modules() returns teal_modules object contains following fields: label: taken label argument. children: list containing objects passed .... List elements named label attribute converted valid shiny id.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_modules.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create teal_module and teal_modules objects ‚Äî teal_modules","text":"module() creates instance teal_module can placed teal application. modules() shapes structure application organizing teal_module within navigation panel. wraps teal_module teal_modules objects teal_modules object, results nested structure corresponding nested tabs final application. Note modules() label comes ..., must passed named argument, otherwise captured .... labels \"global_filters\" \"Report previewer\" reserved used mapping argument teal_slices() report previewer module reporter_previewer_module(), respectively.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_modules.html","id":"restricting-datasets-used-by-teal-module-","dir":"Reference","previous_headings":"","what":"Restricting datasets used by teal_module:","title":"Create teal_module and teal_modules objects ‚Äî teal_modules","text":"datanames argument controls datasets used module‚Äôs server. datasets, passed via server's data argument, ones shown module's tab. datanames set \"\", datasets data object treated relevant. However, may include unnecessary datasets, : Proxy variables column modifications Temporary datasets used create final ones Connection objects Datasets name prefixed teal_data dot (.) displayed teal application. Please see \"Hidden datasets\" section `vignette(\"including-data--teal-applications\").","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_modules.html","id":"datanames-with-transformators","dir":"Reference","previous_headings":"","what":"datanames with transformators","title":"Create teal_module and teal_modules objects ‚Äî teal_modules","text":"transformators specified, datanames added module‚Äôs datanames, changes behavior follows: module(datanames) NULL transformators defined datanames, sidebar appear showing transformators' datasets, instead hidden. module(datanames) set specific values transformator datanames = \"\", module may receive extra datasets unnecessary","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_modules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create teal_module and teal_modules objects ‚Äî teal_modules","text":"","code":"library(shiny)  module_1 <- module(   label = \"a module\",   server = function(id, data) {     moduleServer(       id,       module = function(input, output, session) {         output$data <- renderDataTable(data()[[\"iris\"]])       }     )   },   ui = function(id) {     ns <- NS(id)     tagList(dataTableOutput(ns(\"data\")))   },   datanames = \"all\" )  module_2 <- module(   label = \"another module\",   server = function(id) {     moduleServer(       id,       module = function(input, output, session) {         output$text <- renderText(\"Another Module\")       }     )   },   ui = function(id) {     ns <- NS(id)     tagList(textOutput(ns(\"text\")))   },   datanames = NULL )  modules <- modules(   label = \"modules\",   modules(     label = \"nested modules\",     module_1   ),   module_2 )  app <- init(   data = teal_data(iris = iris),   modules = modules )  if (interactive()) {   shinyApp(app$ui, app$server) } mod <- module(   label = \"My Custom Module\",   server = function(id, data, ...) {},   ui = function(id, ...) {},   datanames = c(\"ADSL\", \"ADTTE\"),   transformators = list(),   ui_args = list(a = 1, b = \"b\"),   server_args = list(x = 5, y = list(p = 1)) ) cat(format(mod)) #> |- My Custom Module #> |  |- Datasets         : ADSL, ADTTE #> |  |- Properties: #> |  |  |- Bookmarkable  : FALSE #> |  |  L- Reportable    : FALSE #> |  |- UI Arguments     : a (numeric) #> |  |                     b (character) #> |  |- Server Arguments : x (numeric) #> |  |                     y (list) #> |  |- Decorators       :  #> |  L- Transformators   :  custom_module <- function(     label = \"label\", ui_args = NULL, server_args = NULL,     datanames = \"all\", transformators = list(), bk = FALSE) {   ans <- module(     label,     server = function(id, data, ...) {},     ui = function(id, ...) {     },     datanames = datanames,     transformators = transformators,     ui_args = ui_args,     server_args = server_args   )   attr(ans, \"teal_bookmarkable\") <- bk   ans }  dummy_transformator <- teal_transform_module(   label = \"Dummy Transform\",   ui = function(id) div(\"(does nothing)\"),   server = function(id, data) {     moduleServer(id, function(input, output, session) data)   } )  plot_transformator <- teal_transform_module(   label = \"Plot Settings\",   ui = function(id) div(\"(does nothing)\"),   server = function(id, data) {     moduleServer(id, function(input, output, session) data)   } )  static_decorator <- teal_transform_module(   label = \"Static decorator\",   server = function(id, data) {     moduleServer(id, function(input, output, session) {       reactive({         req(data())         within(data(), {           plot <- plot +             ggtitle(\"This is title\") +             xlab(\"x axis\")         })       })     })   } )  complete_modules <- modules(   custom_module(     label = \"Data Overview\",     datanames = c(\"ADSL\", \"ADAE\", \"ADVS\"),     ui_args = list(       view_type = \"table\",       page_size = 10,       filters = c(\"ARM\", \"SEX\", \"RACE\"),       decorators = list(static_decorator)     ),     server_args = list(       cache = TRUE,       debounce = 1000,       decorators = list(static_decorator)     ),     transformators = list(dummy_transformator),     bk = TRUE   ),   modules(     label = \"Nested 1\",     custom_module(       label = \"Interactive Plots\",       datanames = c(\"ADSL\", \"ADVS\"),       ui_args = list(         plot_type = c(\"scatter\", \"box\", \"line\"),         height = 600,         width = 800,         color_scheme = \"viridis\"       ),       server_args = list(         render_type = \"svg\",         cache_plots = TRUE       ),       transformators = list(dummy_transformator, plot_transformator),       bk = TRUE     ),     modules(       label = \"Nested 2\",       custom_module(         label = \"Summary Statistics\",         datanames = \"ADSL\",         ui_args = list(           stats = c(\"mean\", \"median\", \"sd\", \"range\"),           grouping = c(\"ARM\", \"SEX\")         )       ),       modules(         label = \"Labeled nested modules\",         custom_module(           label = \"Subgroup Analysis\",           datanames = c(\"ADSL\", \"ADAE\"),           ui_args = list(             subgroups = c(\"AGE\", \"SEX\", \"RACE\"),             analysis_type = \"stratified\"           ),           bk = TRUE         )       ),       modules(custom_module(label = \"Subgroup Analysis in non-labled modules\"))     )   ),   custom_module(\"Non-nested module\") )  cat(format(complete_modules)) #> TEAL ROOT #>   |- Data Overview #>   |  |- Datasets         : ADSL, ADAE, ADVS, all #>   |  |- Properties: #>   |  |  |- Bookmarkable  : TRUE #>   |  |  L- Reportable    : FALSE #>   |  |- UI Arguments     : view_type (character) #>   |  |                     page_size (numeric) #>   |  |                     filters (character) #>   |  |- Server Arguments : cache (logical) #>   |  |                     debounce (numeric) #>   |  |- Decorators       : Static decorator #>   |  L- Transformators   : Dummy Transform #>   |- Nested 1 #>   |  |- Interactive Plots #>   |  |  |- Datasets         : ADSL, ADVS, all #>   |  |  |- Properties: #>   |  |  |  |- Bookmarkable  : TRUE #>   |  |  |  L- Reportable    : FALSE #>   |  |  |- UI Arguments     : plot_type (character) #>   |  |  |                     height (numeric) #>   |  |  |                     width (numeric) #>   |  |  |                     color_scheme (character) #>   |  |  |- Server Arguments : render_type (character) #>   |  |  |                     cache_plots (logical) #>   |  |  |- Decorators       :  #>   |  |  L- Transformators   : Dummy Transform, Plot Settings #>   |  L- Nested 2 #>   |     |- Summary Statistics #>   |     |  |- Datasets         : ADSL #>   |     |  |- Properties: #>   |     |  |  |- Bookmarkable  : FALSE #>   |     |  |  L- Reportable    : FALSE #>   |     |  |- UI Arguments     : stats (character) #>   |     |  |                     grouping (character) #>   |     |  |- Server Arguments :  #>   |     |  |- Decorators       :  #>   |     |  L- Transformators   :  #>   |     |- Labeled nested modules #>   |     |  L- Subgroup Analysis #>   |     |     |- Datasets         : ADSL, ADAE #>   |     |     |- Properties: #>   |     |     |  |- Bookmarkable  : TRUE #>   |     |     |  L- Reportable    : FALSE #>   |     |     |- UI Arguments     : subgroups (character) #>   |     |     |                     analysis_type (character) #>   |     |     |- Server Arguments :  #>   |     |     |- Decorators       :  #>   |     |     L- Transformators   :  #>   |     L- root #>   |        L- Subgroup Analysis in non-labled modules #>   |           |- Datasets         : all #>   |           |- Properties: #>   |           |  |- Bookmarkable  : FALSE #>   |           |  L- Reportable    : FALSE #>   |           |- UI Arguments     :  #>   |           |- Server Arguments :  #>   |           |- Decorators       :  #>   |           L- Transformators   :  #>   L- Non-nested module #>      |- Datasets         : all #>      |- Properties: #>      |  |- Bookmarkable  : FALSE #>      |  L- Reportable    : FALSE #>      |- UI Arguments     :  #>      |- Server Arguments :  #>      |- Decorators       :  #>      L- Transformators   :  cat(format(complete_modules, what = c(\"ui_args\", \"server_args\", \"transformators\"))) #> TEAL ROOT #>   |- Data Overview #>   |  |- UI Arguments     : view_type (character) #>   |  |                     page_size (numeric) #>   |  |                     filters (character) #>   |  |- Server Arguments : cache (logical) #>   |  |                     debounce (numeric) #>   |  L- Transformators   : Dummy Transform #>   |- Nested 1 #>   |  |- Interactive Plots #>   |  |  |- UI Arguments     : plot_type (character) #>   |  |  |                     height (numeric) #>   |  |  |                     width (numeric) #>   |  |  |                     color_scheme (character) #>   |  |  |- Server Arguments : render_type (character) #>   |  |  |                     cache_plots (logical) #>   |  |  L- Transformators   : Dummy Transform, Plot Settings #>   |  L- Nested 2 #>   |     |- Summary Statistics #>   |     |  |- UI Arguments     : stats (character) #>   |     |  |                     grouping (character) #>   |     |  |- Server Arguments :  #>   |     |  L- Transformators   :  #>   |     |- Labeled nested modules #>   |     |  L- Subgroup Analysis #>   |     |     |- UI Arguments     : subgroups (character) #>   |     |     |                     analysis_type (character) #>   |     |     |- Server Arguments :  #>   |     |     L- Transformators   :  #>   |     L- root #>   |        L- Subgroup Analysis in non-labled modules #>   |           |- UI Arguments     :  #>   |           |- Server Arguments :  #>   |           L- Transformators   :  #>   L- Non-nested module #>      |- UI Arguments     :  #>      |- Server Arguments :  #>      L- Transformators   :  cat(format(complete_modules, what = c(\"decorators\", \"transformators\"))) #> TEAL ROOT #>   |- Data Overview #>   |  |- Decorators       : Static decorator #>   |  L- Transformators   : Dummy Transform #>   |- Nested 1 #>   |  |- Interactive Plots #>   |  |  |- Decorators       :  #>   |  |  L- Transformators   : Dummy Transform, Plot Settings #>   |  L- Nested 2 #>   |     |- Summary Statistics #>   |     |  |- Decorators       :  #>   |     |  L- Transformators   :  #>   |     |- Labeled nested modules #>   |     |  L- Subgroup Analysis #>   |     |     |- Decorators       :  #>   |     |     L- Transformators   :  #>   |     L- root #>   |        L- Subgroup Analysis in non-labled modules #>   |           |- Decorators       :  #>   |           L- Transformators   :  #>   L- Non-nested module #>      |- Decorators       :  #>      L- Transformators   :"},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_slices.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter settings for teal applications ‚Äî teal_slices","title":"Filter settings for teal applications ‚Äî teal_slices","text":"Specify initial filter states filtering settings teal app.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_slices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter settings for teal applications ‚Äî teal_slices","text":"","code":"teal_slices(   ...,   exclude_varnames = NULL,   include_varnames = NULL,   count_type = NULL,   allow_add = TRUE,   module_specific = FALSE,   mapping,   app_id = NULL )  as.teal_slices(x)  # S3 method for class 'teal_slices' c(...)"},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_slices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter settings for teal applications ‚Äî teal_slices","text":"... number teal_slice objects. include_varnames, exclude_varnames (named lists character) list names match names data sets vector elements match variable names respective data sets; specify variables allowed filtered; see Details. count_type new feature. kindly share opinions teal.slice's GitHub repository. (character(1)) string specifying observations tallied filter states. Possible options: \"none\" (default) counts single FilterState show unfiltered number . \"\" counts single FilterState show number observation filtered unfiltered dataset. Note, issues reported using option MultiAssayExperiment. Please make sure adding new filters fail target platform deploying production. allow_add (logical(1)) logical flag specifying whether user able add new filters module_specific (logical(1)) optional, FALSE (default) one filter panel applied modules. filters shared modules. TRUE filter panel module-specific. Modules can different set filters specified - see mapping argument. mapping new feature. kindly share opinions teal's GitHub repository. (named list) specifies filters active modules app start. Elements contain character vector teal_slice ids (see teal.slice::teal_slice). Names list correspond teal_module label set module() function. ids listed \"global_filters active modules. missing, filters applied modules. empty list, filters available modules start inactive. module_specific FALSE, global_filters active start. app_id (character(1)) internal use , set manually. Added init teal_slices can matched app used. Used verifying snapshots uploaded file. See snapshot. x (list) lists convert teal_slices","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_slices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter settings for teal applications ‚Äî teal_slices","text":"teal_slices object.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_slices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter settings for teal applications ‚Äî teal_slices","text":"Produces teal_slices object. teal_slice components specify filter states active app starts. Attributes (created named arguments) configure way app applies filters. See argument descriptions details.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_slices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter settings for teal applications ‚Äî teal_slices","text":"","code":"filter <- teal_slices(   teal_slice(dataname = \"iris\", varname = \"Species\", id = \"species\"),   teal_slice(dataname = \"iris\", varname = \"Sepal.Length\", id = \"sepal_length\"),   teal_slice(     dataname = \"iris\", id = \"long_petals\", title = \"Long petals\", expr = \"Petal.Length > 5\"   ),   teal_slice(dataname = \"mtcars\", varname = \"mpg\", id = \"mtcars_mpg\"),   mapping = list(     module1 = c(\"species\", \"sepal_length\"),     module2 = c(\"mtcars_mpg\"),     global_filters = \"long_petals\"   ) )  app <- init(   data = teal_data(iris = iris, mtcars = mtcars),   modules = list(     module(\"module1\"),     module(\"module2\")   ),   filter = filter )  if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_transform_module.html","id":null,"dir":"Reference","previous_headings":"","what":"Data module for teal transformations and output customization ‚Äî teal_transform_module","title":"Data module for teal transformations and output customization ‚Äî teal_transform_module","text":"teal_transform_module provides shiny module enables data transformations within teal application allows customization outputs generated modules.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_transform_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data module for teal transformations and output customization ‚Äî teal_transform_module","text":"","code":"teal_transform_module(   ui = NULL,   server = function(id, data) data,   label = \"transform module\",   datanames = \"all\" )"},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_transform_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data module for teal transformations and output customization ‚Äî teal_transform_module","text":"ui (function(id)) shiny module UI function; must take id argument server (function(id, data) expression) shiny module server function takes id data arguments, id module id data reactive teal_data input. server function must return reactive expression containing teal_data object. simplified syntax, use make_teal_transform_server(). label (character(1)) Label module. datanames (character) Specifies names datasets relevant module. filters specified datanames displayed filter panel. keyword \"\" can used display filters datasets. datanames automatically appended modules() datanames.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_transform_module.html","id":"transforming-module-inputs-in-teal","dir":"Reference","previous_headings":"","what":"Transforming Module Inputs in teal","title":"Data module for teal transformations and output customization ‚Äî teal_transform_module","text":"Data transformations occur data filtered teal. transformed data passed server teal_module() managed teal's internal processes. primary advantage teal_transform_module custom modules error handling, warnings errors managed teal, allowing developers focus transformation logic. details, see vignette: vignette(\"data-transform--shiny-module\", package = \"teal\").","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_transform_module.html","id":"customizing-module-outputs","dir":"Reference","previous_headings":"","what":"Customizing Module Outputs","title":"Data module for teal transformations and output customization ‚Äî teal_transform_module","text":"teal_transform_module also allows developers modify object created within teal.data::teal_data. means can use customize datasets also tables, listings, graphs. teal_modules permit developers inject custom shiny modules enhance displayed outputs. manage decorators within module, use ui_transform_teal_data() srv_transform_teal_data(). (guidance managing decorators, refer ui_args srv_args vignette documentation.) See vignette vignette(\"decorate-modules-output\", package = \"teal\") additional examples.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_transform_module.html","id":"server-as-a-language","dir":"Reference","previous_headings":"","what":"server as a language","title":"Data module for teal transformations and output customization ‚Äî teal_transform_module","text":"server function teal_transform_module must return reactive teal.data::teal_data object. simple transformations without complex reactivity, server function might look like :s   example can simplified using make_teal_transform_server, level automatically matched corresponding input parameter:","code":"function(id, data) {   moduleServer(id, function(input, output, session) {     reactive({       within(         data(),         expr = x <- subset(x, col == level),         level = input$level       )     })   }) } make_teal_transform_server(expr = expression(x <- subset(x, col == level)))"},{"path":"https://insightsengineering.github.io/teal/main/reference/teal_transform_module.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data module for teal transformations and output customization ‚Äî teal_transform_module","text":"","code":"data_transformators <- list(   teal_transform_module(     label = \"Static transformator for iris\",     datanames = \"iris\",     server = function(id, data) {       moduleServer(id, function(input, output, session) {         reactive({           within(data(), {             iris <- head(iris, 5)           })         })       })     }   ),   teal_transform_module(     label = \"Interactive transformator for iris\",     datanames = \"iris\",     ui = function(id) {       ns <- NS(id)       tags$div(         numericInput(ns(\"n_cols\"), \"Show n columns\", value = 5, min = 1, max = 5, step = 1)       )     },     server = function(id, data) {       moduleServer(id, function(input, output, session) {         reactive({           within(data(),             {               iris <- iris[, 1:n_cols]             },             n_cols = input$n_cols           )         })       })     }   ) )  output_decorator <- teal_transform_module(   server = make_teal_transform_server(     expression(       object <- rev(object)     )   ) )  app <- init(   data = teal_data(iris = iris),   modules = example_module(     transformators = data_transformators,     decorators = list(output_decorator)   ) ) if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_app_title_tag.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for validating the title parameter of teal::init ‚Äî validate_app_title_tag","title":"Function for validating the title parameter of teal::init ‚Äî validate_app_title_tag","text":"Checks input title teal::init create valid title favicon tag.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_app_title_tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for validating the title parameter of teal::init ‚Äî validate_app_title_tag","text":"","code":"validate_app_title_tag(shiny_tag)"},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_app_title_tag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for validating the title parameter of teal::init ‚Äî validate_app_title_tag","text":"shiny_tag (shiny.tag) Object validate valid title.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_has_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate that dataset has a minimum number of observations ‚Äî validate_has_data","text":"","code":"validate_has_data(   x,   min_nrow = NULL,   complete = FALSE,   allow_inf = TRUE,   msg = NULL )"},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_has_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate that dataset has a minimum number of observations ‚Äî validate_has_data","text":"x (data.frame) min_nrow (numeric(1)) Minimum allowed number rows x. complete (logical(1)) Flag specifying whether check complete cases. Defaults FALSE. allow_inf (logical(1)) Flag specifying whether allow infinite values. Defaults TRUE. msg (character(1)) Additional message display alongside default message.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_has_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate that dataset has a minimum number of observations ‚Äî validate_has_data","text":"function wrapper shiny::validate.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_has_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate that dataset has a minimum number of observations ‚Äî validate_has_data","text":"","code":"library(teal) ui <- fluidPage(   sliderInput(\"len\", \"Max Length of Sepal\",     min = 4.3, max = 7.9, value = 5   ),   plotOutput(\"plot\") )  server <- function(input, output) {   output$plot <- renderPlot({     iris_df <- iris[iris$Sepal.Length <= input$len, ]     validate_has_data(       iris_df,       min_nrow = 10,       complete = FALSE,       msg = \"Please adjust Max Length of Sepal\"     )      hist(iris_df$Sepal.Length, breaks = 5)   }) } if (interactive()) {   shinyApp(ui, server) }"},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_has_elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validates that vector has length greater than 0 ‚Äî validate_has_elements","text":"","code":"validate_has_elements(x, msg)"},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_has_elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validates that vector has length greater than 0 ‚Äî validate_has_elements","text":"x vector msg message display","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_has_elements.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validates that vector has length greater than 0 ‚Äî validate_has_elements","text":"function wrapper shiny::validate.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_has_elements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validates that vector has length greater than 0 ‚Äî validate_has_elements","text":"","code":"data <- data.frame(   id = c(1:10, 11:20, 1:10),   strata = rep(c(\"A\", \"B\"), each = 15) ) ui <- fluidPage(   selectInput(\"ref1\", \"Select strata1 to compare\",     choices = c(\"A\", \"B\", \"C\"), selected = \"A\"   ),   selectInput(\"ref2\", \"Select strata2 to compare\",     choices = c(\"A\", \"B\", \"C\"), selected = \"B\"   ),   verbatimTextOutput(\"arm_summary\") )  server <- function(input, output) {   output$arm_summary <- renderText({     sample_1 <- data$id[data$strata == input$ref1]     sample_2 <- data$id[data$strata == input$ref2]      validate_has_elements(sample_1, \"No subjects in strata1.\")     validate_has_elements(sample_2, \"No subjects in strata2.\")      paste0(       \"Number of samples in: strata1=\", length(sample_1),       \" comparions strata2=\", length(sample_2)     )   }) } if (interactive()) {   shinyApp(ui, server) }"},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_has_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validates that dataset contains specific variable ‚Äî validate_has_variable","text":"","code":"validate_has_variable(data, varname, msg)"},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_has_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validates that dataset contains specific variable ‚Äî validate_has_variable","text":"data (data.frame) varname (character(1)) name variable check data msg (character(1)) message display data include varname","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_has_variable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validates that dataset contains specific variable ‚Äî validate_has_variable","text":"function wrapper shiny::validate.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_has_variable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validates that dataset contains specific variable ‚Äî validate_has_variable","text":"","code":"data <- data.frame(   one = rep(\"a\", length.out = 20),   two = rep(c(\"a\", \"b\"), length.out = 20) ) ui <- fluidPage(   selectInput(     \"var\",     \"Select variable\",     choices = c(\"one\", \"two\", \"three\", \"four\"),     selected = \"one\"   ),   verbatimTextOutput(\"summary\") )  server <- function(input, output) {   output$summary <- renderText({     validate_has_variable(data, input$var)     paste0(\"Selected treatment variables: \", paste(input$var, collapse = \", \"))   }) } if (interactive()) {   shinyApp(ui, server) }"},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_in.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validates that vector includes all expected values ‚Äî validate_in","text":"","code":"validate_in(x, choices, msg)"},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_in.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validates that vector includes all expected values ‚Äî validate_in","text":"x Vector values test. choices Vector test . msg (character(1)) Error message display elements x elements choices.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_in.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validates that vector includes all expected values ‚Äî validate_in","text":"function wrapper shiny::validate.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_in.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validates that vector includes all expected values ‚Äî validate_in","text":"","code":"ui <- fluidPage(   selectInput(     \"species\",     \"Select species\",     choices = c(\"setosa\", \"versicolor\", \"virginica\", \"unknown species\"),     selected = \"setosa\",     multiple = FALSE   ),   verbatimTextOutput(\"summary\") )  server <- function(input, output) {   output$summary <- renderPrint({     validate_in(input$species, iris$Species, \"Species does not exist.\")     nrow(iris[iris$Species == input$species, ])   }) } if (interactive()) {   shinyApp(ui, server) }"},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Send input validation messages to output ‚Äî validate_inputs","title":"Send input validation messages to output ‚Äî validate_inputs","text":"Captures messages InputValidator objects collates one message passed validate.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send input validation messages to output ‚Äî validate_inputs","text":"","code":"validate_inputs(..., header = \"Some inputs require attention\")"},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send input validation messages to output ‚Äî validate_inputs","text":"... either number InputValidator objects optionally named, possibly nested list InputValidator objects, see Details header (character(1)) generic validation message; set NULL omit","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_inputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Send input validation messages to output ‚Äî validate_inputs","text":"Returns NULL final validation call passes shiny.silent.error fails.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_inputs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Send input validation messages to output ‚Äî validate_inputs","text":"shiny::validate used withhold rendering output element certain conditions met print validation message place output element. shinyvalidate::InputValidator allows validate input elements display specific messages respective input widgets. validate_inputs provides hybrid solution. Given InputValidator object, messages corresponding inputs fail validation extracted placed one validation message passed validate/need call. way input validator messages repeated output. ... argument accepts number InputValidator objects nested list objects. validators passed directly, messages printed together one (optional) header message specified header. list passed, messages grouped validator. list's names used headers respective message groups. neither nested list elements named, header message taken header.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_inputs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Send input validation messages to output ‚Äî validate_inputs","text":"","code":"library(shiny) library(shinyvalidate)  ui <- fluidPage(   selectInput(\"method\", \"validation method\", c(\"sequential\", \"combined\", \"grouped\")),   sidebarLayout(     sidebarPanel(       selectInput(\"letter\", \"select a letter:\", c(letters[1:3], LETTERS[4:6])),       selectInput(\"number\", \"select a number:\", 1:6),       tags$br(),       selectInput(\"color\", \"select a color:\",         c(\"black\", \"indianred2\", \"springgreen2\", \"cornflowerblue\"),         multiple = TRUE       ),       sliderInput(\"size\", \"select point size:\",         min = 0.1, max = 4, value = 0.25       )     ),     mainPanel(plotOutput(\"plot\"))   ) )  server <- function(input, output) {   # set up input validation   iv <- InputValidator$new()   iv$add_rule(\"letter\", sv_in_set(LETTERS, \"choose a capital letter\"))   iv$add_rule(\"number\", function(x) {     if (as.integer(x) %% 2L == 1L) \"choose an even number\"   })   iv$enable()   # more input validation   iv_par <- InputValidator$new()   iv_par$add_rule(\"color\", sv_required(message = \"choose a color\"))   iv_par$add_rule(\"color\", function(x) {     if (length(x) > 1L) \"choose only one color\"   })   iv_par$add_rule(     \"size\",     sv_between(       left = 0.5, right = 3,       message_fmt = \"choose a value between {left} and {right}\"     )   )   iv_par$enable()    output$plot <- renderPlot({     # validate output     switch(input[[\"method\"]],       \"sequential\" = {         validate_inputs(iv)         validate_inputs(iv_par, header = \"Set proper graphical parameters\")       },       \"combined\" = validate_inputs(iv, iv_par),       \"grouped\" = validate_inputs(list(         \"Some inputs require attention\" = iv,         \"Set proper graphical parameters\" = iv_par       ))     )      plot(faithful$eruptions ~ faithful$waiting,       las = 1, pch = 16,       col = input[[\"color\"]], cex = input[[\"size\"]]     )   }) }  if (interactive()) {   shinyApp(ui, server) }"},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_n_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate that variables has expected number of levels ‚Äî validate_n_levels","text":"","code":"validate_n_levels(x, min_levels = 1, max_levels = 12, var_name)"},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_n_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate that variables has expected number of levels ‚Äî validate_n_levels","text":"x variable name. x factor, unique values treated levels. min_levels cutoff minimum number levels x max_levels cutoff maximum number levels x var_name name variable validated use validation message","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_n_levels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate that variables has expected number of levels ‚Äî validate_n_levels","text":"number levels x less min_levels greater max_levels validation fail. function wrapper shiny::validate.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_n_levels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate that variables has expected number of levels ‚Äî validate_n_levels","text":"","code":"data <- data.frame(   one = rep(\"a\", length.out = 20),   two = rep(c(\"a\", \"b\"), length.out = 20),   three = rep(c(\"a\", \"b\", \"c\"), length.out = 20),   four = rep(c(\"a\", \"b\", \"c\", \"d\"), length.out = 20),   stringsAsFactors = TRUE ) ui <- fluidPage(   selectInput(     \"var\",     \"Select variable\",     choices = c(\"one\", \"two\", \"three\", \"four\"),     selected = \"one\"   ),   verbatimTextOutput(\"summary\") )  server <- function(input, output) {   output$summary <- renderText({     validate_n_levels(data[[input$var]], min_levels = 2, max_levels = 15, var_name = input$var)     paste0(       \"Levels of selected treatment variable: \",       paste(levels(data[[input$var]]),         collapse = \", \"       )     )   }) } if (interactive()) {   shinyApp(ui, server) }"},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_no_intersection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validates no intersection between two vectors ‚Äî validate_no_intersection","text":"","code":"validate_no_intersection(x, y, msg)"},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_no_intersection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validates no intersection between two vectors ‚Äî validate_no_intersection","text":"x vector y vector msg (character(1)) message display x y intersect","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_no_intersection.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validates no intersection between two vectors ‚Äî validate_no_intersection","text":"function wrapper shiny::validate.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_no_intersection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validates no intersection between two vectors ‚Äî validate_no_intersection","text":"","code":"data <- data.frame(   id = c(1:10, 11:20, 1:10),   strata = rep(c(\"A\", \"B\", \"C\"), each = 10) )  ui <- fluidPage(   selectInput(\"ref1\", \"Select strata1 to compare\",     choices = c(\"A\", \"B\", \"C\"),     selected = \"A\"   ),   selectInput(\"ref2\", \"Select strata2 to compare\",     choices = c(\"A\", \"B\", \"C\"),     selected = \"B\"   ),   verbatimTextOutput(\"summary\") )  server <- function(input, output) {   output$summary <- renderText({     sample_1 <- data$id[data$strata == input$ref1]     sample_2 <- data$id[data$strata == input$ref2]      validate_no_intersection(       sample_1, sample_2,       \"subjects within strata1 and strata2 cannot overlap\"     )     paste0(       \"Number of subject in: reference treatment=\", length(sample_1),       \" comparions treatment=\", length(sample_2)     )   }) } if (interactive()) {   shinyApp(ui, server) }"},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_one_row_per_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate that dataset has unique rows for key variables ‚Äî validate_one_row_per_id","text":"","code":"validate_one_row_per_id(x, key = c(\"USUBJID\", \"STUDYID\"))"},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_one_row_per_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate that dataset has unique rows for key variables ‚Äî validate_one_row_per_id","text":"x (data.frame) key (character) Vector ID variables x identify unique records.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_one_row_per_id.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate that dataset has unique rows for key variables ‚Äî validate_one_row_per_id","text":"function wrapper shiny::validate.","code":""},{"path":"https://insightsengineering.github.io/teal/main/reference/validate_one_row_per_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate that dataset has unique rows for key variables ‚Äî validate_one_row_per_id","text":"","code":"iris$id <- rep(1:50, times = 3) ui <- fluidPage(   selectInput(     inputId = \"species\",     label = \"Select species\",     choices = c(\"setosa\", \"versicolor\", \"virginica\"),     selected = \"setosa\",     multiple = TRUE   ),   plotOutput(\"plot\") ) server <- function(input, output) {   output$plot <- renderPlot({     iris_f <- iris[iris$Species %in% input$species, ]     validate_one_row_per_id(iris_f, key = c(\"id\"))      hist(iris_f$Sepal.Length, breaks = 5)   }) } if (interactive()) {   shinyApp(ui, server) }"},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"new-features-0-15-2-9119","dir":"Changelog","previous_headings":"","what":"New features","title":"teal 0.15.2.9119","text":"Possible call ui_teal srv_teal directly application delivering data argument reactive returning teal_data object. #669 Since introduction ui_teal srv_teal functions id argument init deprecated. #1438 Introduce ui_session_info srv_session_info shiny module create user session info teal app lockfile download button. Introduced teal_transform_module provide way interactively modify data delivered teal_module‚Äôs server decorate module outputs. #1228 #1384 Introduced new argument = FALSE teal_data_module possibly reload data run time. Possibility download lockfile restore app session reproducibility. #479 Datasets name starts . ignored module‚Äôs datanames set \"\". Added warning reserved datanames, .raw_data used. Added add_custom_server() allow adding custom server logic main shiny server function teal app.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"breaking-changes-0-15-2-9119","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"teal 0.15.2.9119","text":"Setting datanames() data passed teal application longer effect. order change teal_module‚Äôs datanames one modify module$datanames. landing_popup_module() deprecated. Please use add_landing_modal() function add landing popup teal application. teal longer re-export %>%. Please load library(magrittr) instead use |> base. build_app_title removed future release. Please use modify_title() function change title teal application. title, header, footer arguments init() function deprecated. Please use modify_title, modify_header, modify_footer respectively.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"enhancement-0-15-2-9119","dir":"Changelog","previous_headings":"","what":"Enhancement","title":"teal 0.15.2.9119","text":"Enhanced system data validation display error messages. Easier way call javascript events setting $(document).ready(function() { ... }). #1114 Provided progress bar modules loading data filtering teal app startup. Filter mapping display separate icon tab. Environment data passed teal_module‚Äôs server consists unfiltered datasets contained .raw_data.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"teal-0152","dir":"Changelog","previous_headings":"","what":"teal 0.15.2","title":"teal 0.15.2","text":"CRAN release: 2024-03-07","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"bug-fixes-0-15-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal 0.15.2","text":"Fixed bug handling datanames modules crashed module-specific applications filtering child datasets.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"teal-0151","dir":"Changelog","previous_headings":"","what":"teal 0.15.1","title":"teal 0.15.1","text":"CRAN release: 2024-02-22","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"bug-fixes-0-15-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal 0.15.1","text":"Fixed bug stopped module_specific feature teal module specified datanames length 1.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"miscellaneous-0-15-1","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal 0.15.1","text":"Updated links vignettes","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"teal-0150","dir":"Changelog","previous_headings":"","what":"teal 0.15.0","title":"teal 0.15.0","text":"CRAN release: 2024-02-08","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"new-features-0-15-0","dir":"Changelog","previous_headings":"","what":"New features","title":"teal 0.15.0","text":"Added landing_popup_module function creates module display popup app starts. popup block access app dismissed. Filter state snapshots can now uploaded file. See ?snapshot. Added as_tdata function facilitate migration modules new teal_data class. Added build_app_title function facilitate adding favicons app title.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"breaking-changes-0-15-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"teal 0.15.0","text":"data argument init now accepts teal_data teal_data_module. tdata deprecated replaced teal_data. Support tdata passed data argument module(server) removed next release. module(ui) argument longer accepts data datasets arguments. data dependent logic set server function. module(server) argument deprecated datasets argument. teal_modules‚Äô server functions accept data (teal_data) instead. Changed order formal arguments init. filter now comes directly modules, title.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"miscellaneous-0-15-0","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal 0.15.0","text":"Enhanced module validation checks won‚Äôt throw messages data argument unnecessarily. Added argument teal_slices made modifications init enable tagging teal_slices app id safely upload snapshots disk. FilteredData longer stores pre-processing code specific slots. Code now attached attribute. Adjusted appropriately.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"bug-fixes-0-15-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal 0.15.0","text":"Removed Report previewer module mapping matrix display filter manager. Specified minimal version package dependencies.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"new-features-0-14-0","dir":"Changelog","previous_headings":"","what":"New features","title":"teal 0.14.0","text":"Enabled module specific filter panel. See module_specific teal::teal_slices documentation. Enabled capturing resetting application filter state snapshots. See ?snapshot. Enabled reporter_previewer_module customize default values srv_args. Enabled passing reporter_previewer_module list modules override default one.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"breaking-changes-0-14-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"teal 0.14.0","text":"Specifying filter argument teal::init requires teal_slices object now. Details documentation teal::init. Soft deprecated filters argument module replaced datanames. Details documentation teal::module","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"miscellaneous-0-14-0","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal 0.14.0","text":"Removed scda package dependency examples. Updated header tag style enhance element containment.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"breaking-changes-0-13-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"teal 0.13.0","text":"use datasets argument modules deprecated removed future release. Please use data argument instead. data type tdata; see ‚ÄúCreating custom modules‚Äù vignettes function documentation teal::new_tdata details. Due deprecation chunks teal.code, teal framework now uses replacement (qenv) instead. documentation teal updated reflect custom modules written chunks updated use qenv. Due deprecation chunks teal.code, get_rcode, get_rcode_srv, get_rcode_ui removed.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"new-features-0-13-0","dir":"Changelog","previous_headings":"","what":"New features","title":"teal 0.13.0","text":"Added validate_inputs function transfers input validation messages app output. modules argument init accepts teal_module type object. need wrap single module modules() list(). Updated module_nested_tabs active modules calculated teal app.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"miscellaneous-0-13-0","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal 0.13.0","text":"Updated examples use scda.2022. Added R session information link footer teal applications. Added data hashing step using rlang instead digest package calculate hash (moved teal.data teal.slice). now explicit hashing check reproducible code output. Removed deprecated functions: root_modules, default_filter, bookmarkableShinyApp, well deprecated logging mechanism, including functions log_app_usage .log. Updated ‚ÄúTeal Bootstrap Themes‚Äù vignette provide details customizing teal app bslib::run_with_themer. Removed outdated diagram srv_nested_tabs documentation. Changed default values header footer arguments init empty text.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"new-features-0-12-0","dir":"Changelog","previous_headings":"","what":"New features","title":"teal 0.12.0","text":"Added support custom bslib bootstrap themes teal::init apps, please read new teal-bs-themes vignette.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"enhancements-0-12-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal 0.12.0","text":"Added option choose variables can filtered filter panel using filterable attributes per-dataset lists filter argument init. Updated teal_module data argument receives list reactive filter data \"code\" \"join_keys\" attributes. Updated teal_module filter_panel_api argument receives FilterPanelAPI object. Updated internals module_teal reflect changes teal.slice.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"breaking-changes-0-12-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"teal 0.12.0","text":"Updated teal_module longer receive datasets object ... argument. order use datasets teal_module please specify datasets explicitly. Deprecated merge_expression argument get_rcode_srv function removed get_rcode function. Deprecated session argument get_rcode function.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"miscellaneous-0-12-0","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal 0.12.0","text":"Enhanced burger button disabled filter panel used.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"enhancements-0-11-1","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal 0.11.1","text":"Added new function reporter_previewer_module wrap teal.reporter package previewer functionality teal module. Updated teal support modules include reporting. module supports reporting included reporter_previewer_module included. Added default arguments module() server argument now function second argument can ... datasets.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"breaking-changes-0-11-1","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"teal 0.11.1","text":"Deprecated bookmarkableShinyApp. future releases teal framework stop supporting shiny bookmarking (officially supported); may officially supported future. Note filter panel teal.slice retains ability save restore state used standalone shiny app bookmarking.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"miscellaneous-0-11-1","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal 0.11.1","text":"Added template pkgdown configuration. Removed unneeded shinytest app tests. Updated package authors. Added package vignettes.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"teal-0110","dir":"Changelog","previous_headings":"","what":"teal 0.11.0","title":"teal 0.11.0","text":"teal.data: creating loading data needed teal applications. teal.widgets: shiny components used within teal. teal.slice: provides filtering panel allow filtering data. teal.code: handles reproducibility outputs. teal.transform: standardizes extracting merging data. teal.logger: standardizes logging within teal framework. teal package contains code create apps (teal::init), create module (teal::module) group modules app (teal::modules). teal depends teal.transform teal.data contain functions teal app creators likely need. package teal imports therefore teal module creators either fully specify functions packages required import custom packages library(teal) load .","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"new-features-0-11-0","dir":"Changelog","previous_headings":"","what":"New features","title":"teal 0.11.0","text":"simple new teal module named example_module included package.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"breaking-changes-0-11-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"teal 0.11.0","text":"teal package split multiple smaller packages, see . Deprecated root_modules function, users use modules directly inside init. Due deprecation root_modules label argument modules must explicitly named. example modules(\"lab\", mod1, mod2) replaced modules(label = \"lab\", mod1, mod2).","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"miscellaneous-0-11-0","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal 0.11.0","text":"Minor changes internals teal: main module panel now fixed shiny name root active tab named active_tab Active_tab. MultiAssayExperiment now suggested packages, required. Objects dependent MultiAssayExperiment changed lazy-load now suggested package.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"bug-fixes-0-11-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal 0.11.0","text":"Showing R Code longer shows reproducibility warning message reproducibility check passed.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"breaking-changes-0-10-1","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"teal 0.10.1","text":"Changed HTML identifiers teal modules - now nested module receives shiny namespace. Deprecated functions related connectors moved separate packages. Removed raw_dataset, raw_dataset_connector, named_dataset, named_dataset_file, named_dataset_connector, relational_dataset, relational_dataset_file, relational_dataset_connector, key, as_cdisc, as_cdisc_relational. Removed rcd_connection rcd_data; scda_dataset_connectors can passed cdisc_data teal_data directly. Replaced rcd_dataset_connector rcd_cdisc_dataset_connector scda_dataset_connector scda_cdisc_dataset_connector respectively. Renamed teal_show_js_log option teal.show_js_log match options naming convention. Removed %is_in% stop_shiny internal utility functions.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"logging-0-10-1","dir":"Changelog","previous_headings":"New features","what":"Logging","title":"teal 0.10.1","text":"Added support logging using logger package. Added new function register_logger, registers logger given namespace. Added trace info levels log messages teal framework. Added pid shiny session token footnote app developers can identify logs apps.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"other-0-10-1","dir":"Changelog","previous_headings":"New features","what":"Other","title":"teal 0.10.1","text":"Added print methods DatasetConnector, RelationalData, RelationalDataconnector JoinKeys classes added input validation implementation print method already Dataset object. Added public facing constructor functions CDISCDataConnector, RelationalDataConnector, DataConnection classes. Modified data_extract_spec allow filter select parameters NULL, results data_extract_ui acting filter_spec variables possible choices supplied filter argument select_spec multiple parameter set TRUE supplied select argument. Added support full screen module filters argument equal NULL. Added support shiny::moduleServer passed server parameter teal::module. Added teal.threshold_slider_vs_checkboxgroup R option: categorical variable number unique values, filter panel uses drop-select input instead checkbox group. Extended FilteredData API allow managing filter states programmatically UI teal application. Hid buttons remove filters datasets dataset active filters. Updated init accept RelationalData, data.frame, MultiAssayExperiment, Dataset, DatasetConnector, list function returning named list data input.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"bug-fixes-0-10-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal 0.10.1","text":"choices_selected now correctly removes duplicates array passed choices parameter. Fixed call returned FilterState case using MultiAssayExperiment::subsetByColData. Now single condition variable containing NA values !.na(var) & var == <condition>. Fixed data loading DatasetConnector dependent Dataset DatasetConnector objects. Fixed restoring bookmarked filter state teal application. Refactored module_nested_tabs fix issue filter panel reacting input change nested module. updateOptionalSelectInput longer sets input NULL logical value passed selected. Fixed setting JoinKeys key name two Dataset object differs. Fixed printing JavaScript console logs R console teal.show_js_log = TRUE.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"miscellaneous-0-10-1","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal 0.10.1","text":"Soft-deprecate mae_dataset() favor general dataset() constructor. Added vignette describing modifications teal applications users can apply using R options. Added default values label argument select_spec filter_spec. Added validation FilteredDataset::get_data accept logical input . Changed references outdated functions teal.devel documentation. Introduced Teal prefix public R6 classes avoid name collisions packages. Removed dependency utils.nest replaced functionality teal equivalents checkmate package base R. Replaced old shiny server functions DataConnection, RelationalDataConnector, DatasetConnector, RelationalData shiny::moduleServer equivalents. Running teal application via ui_teal_with_splash srv_teal_with_splash now longer recommended doesn‚Äôt support new features (e.g.¬†logging, bookmarking). Use init instead. Updated R version requirement >= 4.0. Updated ‚Äúfilter panel collapse‚Äù icon remove warnings using shiny version >= 1.7. Removed non-exported, debugging modules. Updated footer tag style less visible.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"new-features-0-10-0","dir":"Changelog","previous_headings":"","what":"New features","title":"teal 0.10.0","text":"Allow passing MultiAssayExperiment teal::init using mae_dataset function connectors. Refactored filter panel use MultiAssayExperiment objects. Filters can set subject level (colData MAE object) experiment level (colData rowData assay). Added cdse_dataset_connector create delayed data objects CDSE. Added datasetdb_dataset_connector create delayed data objects DataSetDB. Added ricepass_connection create delayed data objects entimICE via ricepass. Simplified setting initial filter state without need specify ‚Äúchoices‚Äù ‚Äúrange‚Äù named list element depending variable class. Dataset type determines appearance functionality related filters filters summary. Datasets passed (reference) DDL FilteredData skipping extracting data attributes. Redesigned variable filter labels ‚ÄúActive Filter Variables‚Äù panel. Fully testable server functions.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"bug-fixes-0-10-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal 0.10.0","text":"Fixed bug caused calling mutate_dataset multiple times DatasetConnector Dataset object. Fixed bug caused output get_code function reproduce raw data set. Changed filter_spec allow variable selection upon app initialization, first possible value previously selected.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"enhancements-0-10-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal 0.10.0","text":"modules parameter teal::init function can also receive list except root_modules function call. Added split merge methods JoinKeys object. Added all_choices() possible argument selected parameter filter_spec, select_spec choices_selected indicating choices selected. append method CodeClass object modified print warning message argument result code added duplicated. Implemented delayed functionality mutate method Dataset DatasetConnector objects. Modified teal_data return CDISCData object whenever arguments type CDISCData object. Updated filters show levels logical variable TRUE/FALSE even one missing original array.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"miscellaneous-0-10-0","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal 0.10.0","text":"Updated LICENCE README new package references. Added method get_hash Dataset class returning MD5 hash object stored inside Dataset object. Replaced random.cdisc.data scda examples tests. Implemented functionality store JoinKeys Dataset DatasetConnector classes. Added error_on_lintr: TRUE .lintr pipe operator %>% now exported downstream code packages can use . Removed hyperlinks rice package documentation.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"enhancements-0-9-5","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal 0.9.5","text":"Added informational stop message using mutate_data RelationalDataConnector. Modified as_cdisc behave similarly cdisc_dataset called Dataset object. Changed displayed format data name column name data_extract_spec UI elements. now compressed <data name>.<column name> don‚Äôt change runtime app. Added ADSAFTTE list recognized ADaM dataset names. Added another example data_extract_spec‚Äôs doc string showcasing app users can choose variable used filtering encoding panel. Added CSS styling tool tips teal modules.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"bug-fixes-0-9-5","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal 0.9.5","text":"Fixed edge case error creating filter variable missing values crashed app. Fixed bug crashes app whenever Date datetime column selected filter_spec.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"enhancements-0-9-4","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal 0.9.4","text":"Released snowflake connection connectors. Changed ordering datasets intuitive (topologically first CDISC datasets according input datasets order). closing teal app (ending user shiny session), DataConnections now try close connections. Added ADHY keys configuration file. Extended filter_spec function: parameter choices longer mandatory (function take possible choices default) vars parameter additionally accepts choices_selected allows change variables filtering using UI elements encoding panel.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"bug-fixes-0-9-4","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal 0.9.4","text":"Cleaned imports package. Modified value_choices function handle edge case \"NA\" NA values exist character column choices derived . Fixed issue cloning Callable class.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"new-features-0-9-3","dir":"Changelog","previous_headings":"","what":"New Features","title":"teal 0.9.3","text":"Support data-standard independent input filtering. includes refactor data dataset structures together refactor FilteredData class. New JoinKeys class (join_keys() constructors join_key() constructor elements) store joining key columns datasets. Refactored basic dataset() constructor, added cdisc_dataset() constructor as_cdisc() conversion function. Soft-deprecate removed class constructors obsolete functions (e.g.¬†keys()). Added get_keys() set_keys() functions extract manipulate datasets primary keys respectively. Unexported filtered_data_new, filtered_data_set filtered_data_set_filters.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"bug-fixes-0-9-3","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal 0.9.3","text":"Duplicated lines code passed teal::cdisc_dataset teal::RelationalDataset constructors now shown getting code teal::cdisc_data objects teal::RelationalData objects. Added ability press ‚ÄúEnter‚Äù key without set focus Submit button delayed data loading. Allow variable_choices use datasets missing labels. Fixed bug ignores input NULL selected argument select_spec function.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"enhancements-0-9-3","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal 0.9.3","text":"Added button remove active filters Filter Panel.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"new-features-0-9-2","dir":"Changelog","previous_headings":"","what":"New Features","title":"teal 0.9.2","text":"Added python_dataset_connector create delayed data objects python scripts directly python code. NOTE: python_dataset_connector yet ready deployed RSConnect contain numpy pandas, Python libraries used python_dataset_connector. Added support filtering Date Datetime variables Filter Panel. Added buttons date datetime filter widgets reset value original. Added new function check_key_duplicates, creates short summary rows duplicated primary key (row numbers number duplicates)","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"enhancements-0-9-2","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal 0.9.2","text":"Fixed lack labels character factor variables Filter Panel. variables now displayed module_filter_panel, types numeric, logical, factor, character Date Fixed mutate_data accept whole scope objects vars. Clarified teal::init function documentation state custom CSS loading code htmltools::htmlDependency included header argument rather inside UI arguments modules. Enabled empty select field inside data_extract_spec. Added new argument drop_keys filter_spec decide whether drop keep keys columns single filter columns. Added new optional argument keys variable_choices. keys specifies names variables, new key icon shown next variable drop menus left-hand side encoding panels instead icon appropriate original R variable type. variable_choices now also works RelationalDataset RelationalDatasetConnector objects.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"miscellaneous-0-9-2","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal 0.9.2","text":"Removed include_factors option get_class_colnames RawDataset.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"teal-091","dir":"Changelog","previous_headings":"","what":"teal 0.9.1","title":"teal 0.9.1","text":"Adds method resolve nested lists containing delayed data objects, can used arm_ref_comp objects. Nested tabs module now better alignment filter panel page. Allow width argument optionalSelectInput. Added lifecycle badges exported functions. Added new code_dataset_connector code_cdisc_dataset_connector functions enable creation new delayed data objects given string code. Added new functions csv_dataset_connector csv_cdisc_dataset_connector. Updated set_ui_input method RawDatasetConnector NamedDatasetConnector handle user defined shiny inputs. Include Keep Inf checkbox numerical filter items. Keep NA Keep Inf checkbox doesn‚Äôt appear missing infinite values. Replace existing RelationalData class abstract class RelationalDataCollection rename RelationalDataList class RelationalData. data argument teal::init now always RelationalData object. Added fun_cdisc_dataset_connector enable providing custom function returning dataset. Removed code script arguments as_relational wrapper. intended done mutate_dataset functionality. filer argument init added validation step ensure compatibility rest app. Variables inherited ADSL specified ADSL dataset. Fixes issue connection close code present get_code results. Fixes issue occasional incorrect ordering bar charts filter panel. informative error displayed pull_fun DataConnection produces error.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"teal-090","dir":"Changelog","previous_headings":"","what":"teal 0.9.0","title":"teal 0.9.0","text":"cdisc_dataset dataset now return R6 class objects (RelationalDataset). new teal_data function include datasets connectors teal application. cdisc_data function include datasets connectors teal application check argument still used consistency tests performed. get_raw_data can used derive raw data R6 objects e.g.¬†(RelationalDataset). RawDatasetConnector, NamedDatasetConnector RelationalDatasetConnector execute custom function call order get data connection. CodeClass manage reproducibility data relationships datasets. directly exposed public interface. mutate_dataset allows modify dataset connector via code argument R script. mutate_data allows change dataset RelationalData, RelationalDataConnector RelationalDataList. New wrapper functions manipulate RelationalDatasetConnector RelationalDataset get_dataset, load_dataset, as_relational. New wrapper functions manipulate RelationalDataConnector, RelationalData RelationalDataList get_datasets, load_datasets. choices_labeled, filter_spec, select_spec, data_extract_spec, value_choices, variable_choices S3 class applied data.frame also delayed data. can longer modify app$datasets, must instead use argument filter init function. New modules created create module nested teal modules, another one adds right filter pane tab. teal::init function stays unchanged. teal::init function now returns UI function optional id argument. allows embed applications. split view two teal applications side--side one example shown vignette. teal::init turned wrapper function around module_teal_with_splash.R developers want embed teal shiny module directly work functions (ui_teal_with_splash srv_teal_with_splash) instead teal::init. teal::init function now title parameter set title browser window. Missing data NA now explicitly addressed filter panel: NAs excluded default checkbox include added. Statistics data visually depicted terms histograms bar charts overlayed onto shiny input elements. Added buttons remove filters applied dataset. Restored functionality hide filter panel module constructed filters = NULL. Moved helper functions utils.nest removed unused functions set_labels_df get_labels_df. optionalSelectInput now allows grouped choices.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"refactor-of-filtereddata-for-developers-0-9-0","dir":"Changelog","previous_headings":"","what":"Refactor of FilteredData (for developers)","title":"teal 0.9.0","text":"FilteredData now fully reactive. Now filtered data lazy evaluated per need. opens door bookmarking teal apps (bookmarking currently works right filtering panel, make feature sophisticated future release, module must reviewed adapted contains reactiveValues). Datasets materialized connectors provided FilteredData set_datasets_data function located init_datasets.R file. Renamed get_dataset() method get_data(). Renamed get_filter_call() method get_filter_expr(); returns expression rather list. Removed argument isolate get_data() method similar methods. must isolate needed. want temporarily deactivate shiny errors due missing errors, can set options(shiny.suppressMissingContextError = TRUE). general, avoid isolate breaks reactivity. added development module add several filters , e.g.¬†safety filters. evaluated converted proper module made available end-users.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"teal-085","dir":"Changelog","previous_headings":"","what":"teal 0.8.5","title":"teal 0.8.5","text":"UI bug fix hide filter elements used datasets.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"teal-084","dir":"Changelog","previous_headings":"","what":"teal 0.8.4","title":"teal 0.8.4","text":"Progress bar UI creation delayed loading module. Change output keys function keys object. Delayed version choices_selected. Fix error choices_selected selected choices. Fix pickerInput display column name label ‚Äôs missing.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"teal-083","dir":"Changelog","previous_headings":"","what":"teal 0.8.3","title":"teal 0.8.3","text":"Enable teal app initialize without data. data loaded within teal app. New classes (DatasetConnector, DataConnector) connect various data sources, including: * connector rice API - rice_data rice_dataset_connector * connector RDS files - rds_data rds_dataset_connector Message appears bottom right shiny app shiny busy update views. Remove labels argument cdisc_data function. Labels now already present data passed cdisc_data function. can achieved using var_relabel function.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"teal-082","dir":"Changelog","previous_headings":"","what":"teal 0.8.2","title":"teal 0.8.2","text":"Fixed several BUGS optionalSelectInput improved inputs look. Added get_data_labels function FilteredData class. Improved sep passing within data_extract_spec.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"teal-081","dir":"Changelog","previous_headings":"","what":"teal 0.8.1","title":"teal 0.8.1","text":"Refactor choices_labeled fix bug showing column name data_extract_spec.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"teal-080","dir":"Changelog","previous_headings":"","what":"teal 0.8.0","title":"teal 0.8.0","text":"Added cdisc_dataset (general dataset) functions properly handle dataset keys merging. Possibility load custom .css .js files. Renamed columns_spec select_spec. Show number observations filter panel. Add labeling functions variable_choices value_choices.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"teal-070","dir":"Changelog","previous_headings":"","what":"teal 0.7.0","title":"teal 0.7.0","text":"Added functions cdisc_data get_code deal preprocessing moving step towards data standard independent teal. Moved teal.utils functions teal: log_app_usage, stop_shiny. Added *_spec functions. Improvements usage PickerInput SelectInput.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"teal-060","dir":"Changelog","previous_headings":"","what":"teal 0.6.0","title":"teal 0.6.0","text":"Removed deprecated functions tab*. Removed data generation functions including generate_sample_data. Incorporate shinyjs package. Added ‚ÄúCopy R code clipboard‚Äù button.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"teal-005","dir":"Changelog","previous_headings":"","what":"teal 0.0.5","title":"teal 0.0.5","text":"Added limit data_table scrolling, preventing overlap UI elements. Boolean filtering.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"teal-004","dir":"Changelog","previous_headings":"","what":"teal 0.0.4","title":"teal 0.0.4","text":"Bug fix teal crashes filter variable gets added many decimal places.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"teal-003","dir":"Changelog","previous_headings":"","what":"teal 0.0.3","title":"teal 0.0.3","text":"Note version 0.0.3 backwards compatible. Reading changes studying example app , however, clarify changes.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"new-features-0-0-3","dir":"Changelog","previous_headings":"","what":"New features","title":"teal 0.0.3","text":"tm_scatterplot module. tm_table module.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"changes-0-0-3","dir":"Changelog","previous_headings":"","what":"Changes","title":"teal 0.0.3","text":"tabs arguments renamed modules. tab_item function now called module. tab_items function now called modules. tabs function removed. variable_browser_item now called tm_variable_browser. data_table_item now called tm_data_table. datasets argument automatically added server functions specified module. Hence teal_datasets removed server_args element.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"teal-002","dir":"Changelog","previous_headings":"","what":"teal 0.0.2","title":"teal 0.0.2","text":"New ‚Äò01_getting_started‚Äô vignette. Datanames FilteredData now case sensitive.","code":""},{"path":"https://insightsengineering.github.io/teal/main/news/index.html","id":"teal-001","dir":"Changelog","previous_headings":"","what":"teal 0.0.1","title":"teal 0.0.1","text":"March 28, 2016 - Initial Release.","code":""}]
