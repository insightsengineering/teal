% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CDISCTealDatasetConnector.R
\name{CDISCTealDatasetConnector}
\alias{CDISCTealDatasetConnector}
\title{A \code{CDISCTealDatasetConnector} class of objects}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}
Objects of this class store the connection function to fetch a single dataset.

The difference compared to the inherited class is a parent field that
indicates name of the parent dataset. Note that the parent field might
be empty (i.e. \code{character(0)}).
}
\section{Super class}{
\code{\link[teal:TealDatasetConnector]{teal::TealDatasetConnector}} -> \code{CDISCTealDatasetConnector}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{CDISCTealDatasetConnector$new()}}
\item \href{#method-get_parent}{\code{CDISCTealDatasetConnector$get_parent()}}
\item \href{#method-pull}{\code{CDISCTealDatasetConnector$pull()}}
\item \href{#method-clone}{\code{CDISCTealDatasetConnector$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="check">}\href{../../teal/html/TealDatasetConnector.html#method-check}{\code{teal::TealDatasetConnector$check()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="get_code">}\href{../../teal/html/TealDatasetConnector.html#method-get_code}{\code{teal::TealDatasetConnector$get_code()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="get_code_class">}\href{../../teal/html/TealDatasetConnector.html#method-get_code_class}{\code{teal::TealDatasetConnector$get_code_class()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="get_dataname">}\href{../../teal/html/TealDatasetConnector.html#method-get_dataname}{\code{teal::TealDatasetConnector$get_dataname()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="get_datanames">}\href{../../teal/html/TealDatasetConnector.html#method-get_datanames}{\code{teal::TealDatasetConnector$get_datanames()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="get_dataset">}\href{../../teal/html/TealDatasetConnector.html#method-get_dataset}{\code{teal::TealDatasetConnector$get_dataset()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="get_dataset_label">}\href{../../teal/html/TealDatasetConnector.html#method-get_dataset_label}{\code{teal::TealDatasetConnector$get_dataset_label()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="get_error_message">}\href{../../teal/html/TealDatasetConnector.html#method-get_error_message}{\code{teal::TealDatasetConnector$get_error_message()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="get_join_keys">}\href{../../teal/html/TealDatasetConnector.html#method-get_join_keys}{\code{teal::TealDatasetConnector$get_join_keys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="get_keys">}\href{../../teal/html/TealDatasetConnector.html#method-get_keys}{\code{teal::TealDatasetConnector$get_keys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="get_pull_args">}\href{../../teal/html/TealDatasetConnector.html#method-get_pull_args}{\code{teal::TealDatasetConnector$get_pull_args()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="get_pull_callable">}\href{../../teal/html/TealDatasetConnector.html#method-get_pull_callable}{\code{teal::TealDatasetConnector$get_pull_callable()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="get_raw_data">}\href{../../teal/html/TealDatasetConnector.html#method-get_raw_data}{\code{teal::TealDatasetConnector$get_raw_data()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="get_server">}\href{../../teal/html/TealDatasetConnector.html#method-get_server}{\code{teal::TealDatasetConnector$get_server()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="get_ui">}\href{../../teal/html/TealDatasetConnector.html#method-get_ui}{\code{teal::TealDatasetConnector$get_ui()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="get_var_r6">}\href{../../teal/html/TealDatasetConnector.html#method-get_var_r6}{\code{teal::TealDatasetConnector$get_var_r6()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="is_failed">}\href{../../teal/html/TealDatasetConnector.html#method-is_failed}{\code{teal::TealDatasetConnector$is_failed()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="is_mutate_delayed">}\href{../../teal/html/TealDatasetConnector.html#method-is_mutate_delayed}{\code{teal::TealDatasetConnector$is_mutate_delayed()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="is_pulled">}\href{../../teal/html/TealDatasetConnector.html#method-is_pulled}{\code{teal::TealDatasetConnector$is_pulled()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="launch">}\href{../../teal/html/TealDatasetConnector.html#method-launch}{\code{teal::TealDatasetConnector$launch()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="mutate">}\href{../../teal/html/TealDatasetConnector.html#method-mutate}{\code{teal::TealDatasetConnector$mutate()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="mutate_join_keys">}\href{../../teal/html/TealDatasetConnector.html#method-mutate_join_keys}{\code{teal::TealDatasetConnector$mutate_join_keys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="print">}\href{../../teal/html/TealDatasetConnector.html#method-print}{\code{teal::TealDatasetConnector$print()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="reassign_datasets_vars">}\href{../../teal/html/TealDatasetConnector.html#method-reassign_datasets_vars}{\code{teal::TealDatasetConnector$reassign_datasets_vars()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="set_args">}\href{../../teal/html/TealDatasetConnector.html#method-set_args}{\code{teal::TealDatasetConnector$set_args()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="set_dataset_label">}\href{../../teal/html/TealDatasetConnector.html#method-set_dataset_label}{\code{teal::TealDatasetConnector$set_dataset_label()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="set_join_keys">}\href{../../teal/html/TealDatasetConnector.html#method-set_join_keys}{\code{teal::TealDatasetConnector$set_join_keys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="set_keys">}\href{../../teal/html/TealDatasetConnector.html#method-set_keys}{\code{teal::TealDatasetConnector$set_keys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDatasetConnector" data-id="set_ui_input">}\href{../../teal/html/TealDatasetConnector.html#method-set_ui_input}{\code{teal::TealDatasetConnector$set_ui_input()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new \code{TealDatasetConnector} object. Set the pulling function
\code{CallableFunction} which returns a \code{data.frame}, e.g. by reading
from a function or creating it on the fly.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCTealDatasetConnector$new(
  dataname,
  pull_callable,
  keys,
  parent,
  code = character(0),
  label = character(0),
  vars = list()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataname}}{(\code{character})\cr
A given name for the dataset it may not contain spaces}

\item{\code{pull_callable}}{(\code{CallableFunction})\cr
function with necessary arguments set to fetch data from connection.}

\item{\code{keys}}{(\code{character})\cr
vector of dataset primary keys column names}

\item{\code{parent}}{optional, (\code{character}) \cr
parent dataset name}

\item{\code{code}}{(\code{character})\cr
A character string defining code to modify \code{raw_data} from this dataset. To modify
current dataset code should contain at least one assignment to object defined in \code{dataname}
argument. For example if \code{dataname = ADSL} example code should contain
\verb{ADSL <- <some R code>}. Can't be used simultaneously with \code{script}}

\item{\code{label}}{(\code{character})\cr
Label to describe the dataset.}

\item{\code{vars}}{(named \code{list})) \cr
In case when this object code depends on other \code{TealDataset} object(s) or
other constant value, this/these object(s) should be included as named
element(s) of the list. For example if this object code needs \code{ADSL}
object we should specify \verb{vars = list(ADSL = <adsl object>)}.
It's recommended to include \code{TealDataset} or \code{TealDatasetConnector} objects to
the \code{vars} list to preserve reproducibility. Please note that \code{vars}
are included to this object as local \code{vars} and they cannot be modified
within another dataset.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_parent"></a>}}
\if{latex}{\out{\hypertarget{method-get_parent}{}}}
\subsection{Method \code{get_parent()}}{
Get parent dataset name
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCTealDatasetConnector$get_parent()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(\code{character}) indicating parent dataname
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-pull"></a>}}
\if{latex}{\out{\hypertarget{method-pull}{}}}
\subsection{Method \code{pull()}}{
Pull the data

Read or create the data using \code{pull_callable} specified in the constructor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCTealDatasetConnector$pull(args = NULL, try = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{args}}{(\code{NULL} or named \code{list})\cr
additional dynamic arguments for pull function. \code{args} can be omitted if \code{pull_callable}
from constructor already contains all necessary arguments to pull data. One can try
to execute \code{pull_callable} directly by \code{x$pull_callable$run()} or to get code using
\code{x$pull_callable$get_code()}. \code{args} specified in pull are used temporary to get data but
not saved in code.}

\item{\code{try}}{(\code{logical} value)\cr
whether perform function evaluation inside \code{try} clause}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{self} invisibly for chaining.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCTealDatasetConnector$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
