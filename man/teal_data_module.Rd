% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/teal_data_module.R
\name{teal_data_module}
\alias{teal_data_module}
\title{Data module for \code{teal} applications}
\usage{
teal_data_module(ui, server)
}
\arguments{
\item{ui}{(\verb{function(id)})\cr
\code{shiny} module \code{ui} function; must only take \code{id} argument}

\item{server}{(\verb{function(id)})\cr
\code{shiny} module \code{ui} function; must only take \code{id} argument;
must return reactive expression containing \code{teal_data} object}
}
\value{
Object of class \code{teal_data_module}.
}
\description{
Creates \code{teal_data_module} object - a \code{shiny} module to supply or modify data in a \code{teal} application.
}
\details{
This function creates a \code{shiny} module that allows for running data pre-processing code after the app starts.
The body of the server function will be run in the app rather than in the global environment.
This means it will be run every time the app starts, so use sparingly.

Pass this module instead of a \code{teal_data} object in a call to \code{\link[=init]{init()}}.

See vignette \code{vignette("data-as-shiny-module", package = "teal")} for more details.
}
\examples{
data <- teal_data_module(
  ui = function(id) {
    ns <- NS(id)
    actionButton(ns("submit"), label = "Load data")
  },
  server = function(id) {
    moduleServer(id, function(input, output, session) {
      eventReactive(input$submit, {
        data <- within(
          teal_data(),
          {
            dataset1 <- iris
            dataset2 <- mtcars
          }
        )
        datanames(data) <- c("iris", "mtcars")

        data
      })
    })
  }
)
}
