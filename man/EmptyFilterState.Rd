% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FilterState.R
\docType{class}
\name{EmptyFilterState}
\alias{EmptyFilterState}
\title{\code{FilterState} object for empty variable}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
}
\examples{
filter_state <- teal:::EmptyFilterState$new(
  NA,
  varname = "x",
  input_dataname = as.name("data"),
  use_dataname = TRUE
)
isolate(filter_state$get_call())
isolate(filter_state$set_selected(TRUE))
isolate(filter_state$set_keep_na(TRUE))
isolate(filter_state$get_call())
}
\section{Super class}{
\code{\link[teal:FilterState]{teal::FilterState}} -> \code{EmptyFilterState}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{EmptyFilterState$new()}}
\item \href{#method-get_call}{\code{EmptyFilterState$get_call()}}
\item \href{#method-ui}{\code{EmptyFilterState$ui()}}
\item \href{#method-clone}{\code{EmptyFilterState$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilterState" data-id="destroy_observers">}\href{../../teal/html/FilterState.html#method-destroy_observers}{\code{teal::FilterState$destroy_observers()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilterState" data-id="get_dataname">}\href{../../teal/html/FilterState.html#method-get_dataname}{\code{teal::FilterState$get_dataname()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilterState" data-id="get_selected">}\href{../../teal/html/FilterState.html#method-get_selected}{\code{teal::FilterState$get_selected()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilterState" data-id="get_varlabel">}\href{../../teal/html/FilterState.html#method-get_varlabel}{\code{teal::FilterState$get_varlabel()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilterState" data-id="get_varname">}\href{../../teal/html/FilterState.html#method-get_varname}{\code{teal::FilterState$get_varname()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilterState" data-id="server">}\href{../../teal/html/FilterState.html#method-server}{\code{teal::FilterState$server()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilterState" data-id="set_keep_na">}\href{../../teal/html/FilterState.html#method-set_keep_na}{\code{teal::FilterState$set_keep_na()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilterState" data-id="set_selected">}\href{../../teal/html/FilterState.html#method-set_selected}{\code{teal::FilterState$set_selected()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialize \code{EmptyFilterState} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EmptyFilterState$new(
  x,
  varname,
  varlabel = character(0),
  input_dataname = NULL,
  use_dataname = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{(\code{vector})\cr
values of the variable used in filter}

\item{\code{varname}}{(\code{character}, \code{name})\cr
name of the variable}

\item{\code{varlabel}}{(\code{character(1)})\cr
label of the variable (optional).}

\item{\code{input_dataname}}{(\code{name} or \code{call})\cr
name of dataset where \code{x} is taken from}

\item{\code{use_dataname}}{(\code{logical(1)})\cr
whether to prefix condition calls with \verb{input_dataname$}.
For example \code{input_dataname$variable == "selection"}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_call"></a>}}
\if{latex}{\out{\hypertarget{method-get_call}{}}}
\subsection{Method \code{get_call()}}{
Returns reproducible condition call for current selection relevant
for selected variable type.
Method is using internal reactive values which makes it reactive
and must be executed in reactive or isolated context.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EmptyFilterState$get_call()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ui"></a>}}
\if{latex}{\out{\hypertarget{method-ui}{}}}
\subsection{Method \code{ui()}}{
UI Module for \code{EmptyFilterState}.
This UI element contains information that all values are missing.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EmptyFilterState$ui(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{(\code{character(1)})\cr
id of shiny element}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EmptyFilterState$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
