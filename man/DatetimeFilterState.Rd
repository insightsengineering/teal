% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FilterState.R
\docType{class}
\name{DatetimeFilterState}
\alias{DatetimeFilterState}
\title{\code{FilterState} object for \code{POSIXct} variable}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
}
\examples{
filter_state <- teal:::init_filter_state(
  c(Sys.time() + seq(0, by = 3600, length.out = 10), NA),
  varname = "x",
  input_dataname = as.name("data"),
  use_dataname = TRUE
)

isolate(filter_state$get_call())
isolate(filter_state$set_selected(c(Sys.time() + 3L, Sys.time() + 8L)))
isolate(filter_state$set_keep_na(TRUE))
isolate(filter_state$get_call())
}
\section{Super class}{
\code{\link[teal:FilterState]{teal::FilterState}} -> \code{DatetimeFilterState}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{DatetimeFilterState$new()}}
\item \href{#method-get_call}{\code{DatetimeFilterState$get_call()}}
\item \href{#method-ui}{\code{DatetimeFilterState$ui()}}
\item \href{#method-server}{\code{DatetimeFilterState$server()}}
\item \href{#method-clone}{\code{DatetimeFilterState$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilterState" data-id="destroy_observers">}\href{../../teal/html/FilterState.html#method-destroy_observers}{\code{teal::FilterState$destroy_observers()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilterState" data-id="get_dataname">}\href{../../teal/html/FilterState.html#method-get_dataname}{\code{teal::FilterState$get_dataname()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilterState" data-id="get_selected">}\href{../../teal/html/FilterState.html#method-get_selected}{\code{teal::FilterState$get_selected()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilterState" data-id="get_varlabel">}\href{../../teal/html/FilterState.html#method-get_varlabel}{\code{teal::FilterState$get_varlabel()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilterState" data-id="get_varname">}\href{../../teal/html/FilterState.html#method-get_varname}{\code{teal::FilterState$get_varname()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilterState" data-id="set_keep_na">}\href{../../teal/html/FilterState.html#method-set_keep_na}{\code{teal::FilterState$set_keep_na()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilterState" data-id="set_selected">}\href{../../teal/html/FilterState.html#method-set_selected}{\code{teal::FilterState$set_selected()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialize a \code{FilterState} object. This class
have a extra fields which is \code{private$timezone} which is set to \code{Sys.timezone()} by
default. However, in case when using this module in \code{teal} app, one needs
timezone of the app user. App user timezone is taken from \code{session$userData$timezone}
and is set only if object is initialized in \code{shiny}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatetimeFilterState$new(
  x,
  varname,
  varlabel = character(0),
  input_dataname = NULL,
  use_dataname = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{(\code{POSIXct} or \code{POSIXlt})\cr
values of the variable used in filter}

\item{\code{varname}}{(\code{character}, \code{name})\cr
name of the variable}

\item{\code{varlabel}}{(\code{character(1)})\cr
label of the variable (optional).}

\item{\code{input_dataname}}{(\code{name} or \code{call})\cr
name of dataset where \code{x} is taken from}

\item{\code{use_dataname}}{(\code{logical(1)})\cr
whether to prefix condition calls with \verb{input_dataname$}.
For example \code{input_dataname$variable == "selection"}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_call"></a>}}
\if{latex}{\out{\hypertarget{method-get_call}{}}}
\subsection{Method \code{get_call()}}{
Returns reproducible condition call for current selection.
For this class returned call looks like
\verb{<varname> >= as.POSIXct(<min>, tz = <timezone>) & <varname> <= <max>, tz = <timezone>)}
with optional \verb{is.na(<varname>)}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatetimeFilterState$get_call()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ui"></a>}}
\if{latex}{\out{\hypertarget{method-ui}{}}}
\subsection{Method \code{ui()}}{
UI Module for \code{EmptyFilterState}.
This UI element contains two date-time selections for \code{min} and \code{max}
of the range and a checkbox whether to keep the \code{NA} values.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatetimeFilterState$ui(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{(\code{character(1)})\cr
id of shiny element}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-server"></a>}}
\if{latex}{\out{\hypertarget{method-server}{}}}
\subsection{Method \code{server()}}{
Server module
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatetimeFilterState$server(input, output, session)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{(\code{Shiny})\cr input object}

\item{\code{output}}{(\code{Shiny})\cr output object}

\item{\code{session}}{(\code{Shiny})\cr session object}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
nothing
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatetimeFilterState$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
