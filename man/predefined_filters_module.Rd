% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modules_debugging.R
\name{predefined_filters_module}
\alias{predefined_filters_module}
\title{Add predefined filters with a button click}
\usage{
predefined_filters_module(label = "Apply filters", filter)
}
\arguments{
\item{label}{\code{character} label of module}

\item{filter}{(\code{list})\cr
You can define filters that show when the app starts. List names should be
named according to datanames passed to the \code{data} argument.
In case of  data.frame` the list should be composed as follows:\preformatted{list(<dataname1> = list(<varname1> = ..., <varname2> = ...),
     <dataname2> = list(...),
     ...)

}

For example, filters for variable \code{Sepal.Length} in \code{iris} can be specified as
follows:\preformatted{list(iris = list(Sepal.Length = list(selected = c(5.0, 7.0))))
# or
list(iris = list(Sepal.Length = c(5.0, 7.0)))
}

In case developer would like to include \code{NA} and \code{Inf} values in  the
filtered dataset.\preformatted{list(Species = list(selected = c(5.0, 7.0), keep_na = TRUE, keep_inf = TRUE))
list(Species = c(c(5.0, 7.0), NA, Inf))
}

To initialize with specific variable filter with all values on start, one
can use\preformatted{list(Species = default_filter())
}

\code{filter} should be set with respect to the class of the column:
\itemize{
\item \code{numeric}: \code{selected} should be a two elements vector defining the range
of the filter.
\item \code{Date}: \code{selected} should be a two elements vector defining the date-range
of the filter
\item \code{POSIXct}: \code{selected} should be a two elements vector defining the
\code{datetime} range of the filter
\item \code{character} and \code{factor}: \code{selected} should be a vector of any length
defining initial values selected to filter.
\cr
\code{MultiAssayExperiment} \code{filter} should be specified in slightly different
way. Since \code{\link[MultiAssayExperiment:MultiAssayExperiment]{MultiAssayExperiment::MultiAssayExperiment()}} contains
patient data (\code{\link[SummarizedExperiment:SummarizedExperiment-class]{SummarizedExperiment::colData()}}) with list of experiments
(\code{\link[MultiAssayExperiment:ExperimentList]{MultiAssayExperiment::ExperimentList()}}), \code{filter} list should be named
in the following name.
\cr
}\preformatted{list(
  <MAE dataname> = list(
    subjects = list(<column in colData> = ..., <column in colData> = ...),
    <experiment name> = list(
      subset = list(<column in rowData of experiment> = ...,
                    <column in rowData of experiment> = ...),
      select = list(<column in colData of experiment> = ...,
                    <column in colData of experiment> = ...)
    )
  )
)
}

\code{filter} is ignored if the app is restored from a bookmarked state.}
}
\description{
For instance, one wants to add all filters at once for a safety analysis.
}
\details{
After resetting to the predefined filters \code{filter}, the applied filters
will match exactly the \code{filter}.
There is a checkbox option to not reset those datanames that don't appear
in \code{filter}.
There is a checkbox option to not reset variables that are currently filtered
(but they must still appear in the \code{filter}, otherwise they are removed).
}
\note{
The filters of all datasets are set, not just the active datanames
in the module's tab. Some datasets may be hidden from filtering, but the
filter state is still changed. However, the dataset is not immediately
recomputed, only lazily.
A drawback with the current approach is that the module computes on the full
dataset immediately after reset (which may take a lot of time) and the new
filter state is only applied in the next reactive cycle.
}
\keyword{internal}
