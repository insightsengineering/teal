% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/module_data_summary.R
\name{get_filter_overview}
\alias{get_filter_overview}
\title{Get filter overview}
\usage{
get_filter_overview(current_data, initial_data, dataname, subject_keys)
}
\arguments{
\item{current_data}{(\code{object}) current object (after filtering and transforming).}

\item{initial_data}{(\code{object}) initial object.}

\item{dataname}{(\code{character(1)})}
}
\value{
\code{data.frame}
}
\description{
Method to create a single entry in \code{\link{module_data_summary}}. Method returns \code{data.frame} containing:
\itemize{
\item \code{dataname}: name of the dataset.
\item \code{obs}: number of observations in form of a text \code{filtered/initial}.
\item \code{subjects}: number of subjects in form of a text \code{filtered/initial}. Applicable when a dataset
has multiple entries for a single subject.
}
}
\section{Extending for other data types}{
\code{teal} supports data summary table with observation counts for \code{data.frame} and
\code{MultiAssayExperiment}. For other datasets teal displays only \code{dataname} and \code{class} information.
To extend this functionality by other data types one needs to create \verb{get_filter_overview.<custom class>}.
New method needs to return a \code{data.frame} containing at least \code{dataname} column. In general, \code{teal} supports
any type of the information contained in this \code{data.frame} and they will be included in combined table.
Example method for \code{data.frame} could look like this:

\if{html}{\out{<div class="sourceCode">}}\preformatted{get_filter_overview.data.frame <- function(current_data, initial_data, dataname, subject_keys) \{
  data.frame(
    dataname = dataname,
    obs = if (!is.null(initial_data)) \{
      sprintf("\%s/\%s", nrow(current_data), nrow(initial_data))
    \} else \{
      # when dataset is added in transform
      # then only current data is available
      nrow(current_data)
    \}
  )
\}
}\if{html}{\out{</div>}}
}

