% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TealAppDriver.R
\name{TealAppDriver}
\alias{TealAppDriver}
\title{Drive a \code{teal} application}
\description{
Drive a \code{teal} application

Drive a \code{teal} application
}
\details{
This class inherits the \code{shinytest2::AppDriver} class and has additional
helper functions to help in driving a \code{teal} application for performing interactions
on a \code{teal} application for implementing \code{shinytest2} tests.
}
\keyword{internal}
\section{Super class}{
\code{\link[shinytest2:AppDriver]{shinytest2::AppDriver}} -> \code{TealAppDriver}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{app}}{The instance of the \code{TealAppDriver} object}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TealAppDriver-new}{\code{TealAppDriver$new()}}
\item \href{#method-TealAppDriver-expect_no_shiny_error}{\code{TealAppDriver$expect_no_shiny_error()}}
\item \href{#method-TealAppDriver-expect_no_validation_error}{\code{TealAppDriver$expect_no_validation_error()}}
\item \href{#method-TealAppDriver-expect_validation_error}{\code{TealAppDriver$expect_validation_error()}}
\item \href{#method-TealAppDriver-navigate_teal_tab}{\code{TealAppDriver$navigate_teal_tab()}}
\item \href{#method-TealAppDriver-get_active_ns}{\code{TealAppDriver$get_active_ns()}}
\item \href{#method-TealAppDriver-helper_NS}{\code{TealAppDriver$helper_NS()}}
\item \href{#method-TealAppDriver-get_module_input}{\code{TealAppDriver$get_module_input()}}
\item \href{#method-TealAppDriver-get_module_output}{\code{TealAppDriver$get_module_output()}}
\item \href{#method-TealAppDriver-set_module_input}{\code{TealAppDriver$set_module_input()}}
\item \href{#method-TealAppDriver-get_active_filter_vars}{\code{TealAppDriver$get_active_filter_vars()}}
\item \href{#method-TealAppDriver-get_active_data_filters}{\code{TealAppDriver$get_active_data_filters()}}
\item \href{#method-TealAppDriver-get_filter_selection_value}{\code{TealAppDriver$get_filter_selection_value()}}
\item \href{#method-TealAppDriver-add_filter_var}{\code{TealAppDriver$add_filter_var()}}
\item \href{#method-TealAppDriver-remove_filter_var}{\code{TealAppDriver$remove_filter_var()}}
\item \href{#method-TealAppDriver-set_filter_selection_value}{\code{TealAppDriver$set_filter_selection_value()}}
\item \href{#method-TealAppDriver-open_filter_manager}{\code{TealAppDriver$open_filter_manager()}}
\item \href{#method-TealAppDriver-clone}{\code{TealAppDriver$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="click"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-click'><code>shinytest2::AppDriver$click()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="expect_download"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-expect_download'><code>shinytest2::AppDriver$expect_download()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="expect_html"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-expect_html'><code>shinytest2::AppDriver$expect_html()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="expect_js"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-expect_js'><code>shinytest2::AppDriver$expect_js()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="expect_screenshot"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-expect_screenshot'><code>shinytest2::AppDriver$expect_screenshot()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="expect_text"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-expect_text'><code>shinytest2::AppDriver$expect_text()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="expect_unique_names"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-expect_unique_names'><code>shinytest2::AppDriver$expect_unique_names()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="expect_values"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-expect_values'><code>shinytest2::AppDriver$expect_values()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="get_chromote_session"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-get_chromote_session'><code>shinytest2::AppDriver$get_chromote_session()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="get_dir"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-get_dir'><code>shinytest2::AppDriver$get_dir()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="get_download"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-get_download'><code>shinytest2::AppDriver$get_download()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="get_html"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-get_html'><code>shinytest2::AppDriver$get_html()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="get_js"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-get_js'><code>shinytest2::AppDriver$get_js()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="get_logs"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-get_logs'><code>shinytest2::AppDriver$get_logs()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="get_screenshot"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-get_screenshot'><code>shinytest2::AppDriver$get_screenshot()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="get_text"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-get_text'><code>shinytest2::AppDriver$get_text()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="get_url"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-get_url'><code>shinytest2::AppDriver$get_url()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="get_value"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-get_value'><code>shinytest2::AppDriver$get_value()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="get_values"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-get_values'><code>shinytest2::AppDriver$get_values()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="get_variant"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-get_variant'><code>shinytest2::AppDriver$get_variant()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="get_window_size"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-get_window_size'><code>shinytest2::AppDriver$get_window_size()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="log_message"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-log_message'><code>shinytest2::AppDriver$log_message()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="run_js"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-run_js'><code>shinytest2::AppDriver$run_js()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="set_inputs"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-set_inputs'><code>shinytest2::AppDriver$set_inputs()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="set_window_size"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-set_window_size'><code>shinytest2::AppDriver$set_window_size()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="stop"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-stop'><code>shinytest2::AppDriver$stop()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="upload_file"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-upload_file'><code>shinytest2::AppDriver$upload_file()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="view"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-view'><code>shinytest2::AppDriver$view()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="wait_for_idle"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-wait_for_idle'><code>shinytest2::AppDriver$wait_for_idle()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="wait_for_js"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-wait_for_js'><code>shinytest2::AppDriver$wait_for_js()</code></a></span></li>
<li><span class="pkg-link" data-pkg="shinytest2" data-topic="AppDriver" data-id="wait_for_value"><a href='../../shinytest2/html/AppDriver.html#method-AppDriver-wait_for_value'><code>shinytest2::AppDriver$wait_for_value()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TealAppDriver-new"></a>}}
\if{latex}{\out{\hypertarget{method-TealAppDriver-new}{}}}
\subsection{Method \code{new()}}{
Initialize a \code{TealAppDriver} object for testing a \code{teal} application.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TealAppDriver$new(
  data,
  modules,
  filter = teal_slices(),
  title = build_app_title(),
  header = tags$p(),
  footer = tags$p(),
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{(\code{teal_data} or \code{teal_data_module})
For constructing the data object, refer to \code{\link[=teal_data]{teal_data()}} and \code{\link[=teal_data_module]{teal_data_module()}}.}

\item{\code{modules}}{(\code{list} or \code{teal_modules} or \code{teal_module})
nested list of \code{teal_modules} or \code{teal_module} objects or a single
\code{teal_modules} or \code{teal_module} object. These are the specific output modules which
will be displayed in the \code{teal} application. See \code{\link[=modules]{modules()}} and \code{\link[=module]{module()}} for
more details.}

\item{\code{filter}}{(\code{teal_slices})
Specifies the initial filter using \code{\link[=teal_slices]{teal_slices()}}.}

\item{\code{title}}{(\code{shiny.tag} or \code{character(1)})
The browser window title. Defaults to a title "teal app" with the icon of NEST.
Can be created using the \code{build_app_title()} or
by passing a valid \code{shiny.tag} which is a head tag with title and link tag.}

\item{\code{header}}{(\code{shiny.tag} or \code{character(1)})
The header of the app.}

\item{\code{footer}}{(\code{shiny.tag} or \code{character(1)})
The footer of the app.}

\item{\code{...}}{Additional arguments to be passed to \code{shinytest2::AppDriver$new}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Object of class \code{TealAppDriver}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TealAppDriver-expect_no_shiny_error"></a>}}
\if{latex}{\out{\hypertarget{method-TealAppDriver-expect_no_shiny_error}{}}}
\subsection{Method \code{expect_no_shiny_error()}}{
Check if the app has shiny errors. This checks for global shiny errors.
Note that any shiny errors dependant on shiny server render will only be captured after the teal module tab
is visited because shiny will not trigger server computations when the tab is invisible.
So, navigate to the module tab you want to test before calling this function.
Although, this catches errors hidden in the other module tabs if they are already rendered.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TealAppDriver$expect_no_shiny_error()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TealAppDriver-expect_no_validation_error"></a>}}
\if{latex}{\out{\hypertarget{method-TealAppDriver-expect_no_validation_error}{}}}
\subsection{Method \code{expect_no_validation_error()}}{
Check if the app has no validation errors. This checks for global shiny validation errors.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TealAppDriver$expect_no_validation_error()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TealAppDriver-expect_validation_error"></a>}}
\if{latex}{\out{\hypertarget{method-TealAppDriver-expect_validation_error}{}}}
\subsection{Method \code{expect_validation_error()}}{
Check if the app has validation errors. This checks for global shiny validation errors.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TealAppDriver$expect_validation_error()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TealAppDriver-navigate_teal_tab"></a>}}
\if{latex}{\out{\hypertarget{method-TealAppDriver-navigate_teal_tab}{}}}
\subsection{Method \code{navigate_teal_tab()}}{
Navigate the teal tabs in the \code{teal} app.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TealAppDriver$navigate_teal_tab(tabs)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tabs}}{(character) The tabs to navigate to. The order of the tabs is important,
and it should start with the most parent level tab.
Note: In case the teal tab group has duplicate names, the first tab will be selected,
If you wish to select the second tab with the same name, use the suffix "_1".
If you wish to select the third tab with the same name, use the siffix "_2" and so on.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{TealAppDriver} object invisibly.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TealAppDriver-get_active_ns"></a>}}
\if{latex}{\out{\hypertarget{method-TealAppDriver-get_active_ns}{}}}
\subsection{Method \code{get_active_ns()}}{
Get the active shiny name space for the Module content and the Filter panel.
Note that in the case of the filter panel, the name space is constant when it is not moudle specific.
However, module specific filter panel will have the name space linked with the module name space.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TealAppDriver$get_active_ns(component)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{component}}{(character) The component to get the active name space for.
Currently supported components are "module", "filter_panel", and "filter_manager".}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The active shiny name space of the component.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TealAppDriver-helper_NS"></a>}}
\if{latex}{\out{\hypertarget{method-TealAppDriver-helper_NS}{}}}
\subsection{Method \code{helper_NS()}}{
Advance utility to help in creating namespace and CSS selectors for Shiny UI.
It is similar with \code{\link[shiny:NS]{shiny::NS()}} by returning a function that can be used
to create a namespace for the shiny UI.

This namespace can be enriched with a prefix and suffix to create a CSS selector.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TealAppDriver$helper_NS(namespace, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{namespace}}{(\code{character(1)}) The base id to be used for the namespace.}

\item{\code{...}}{(\code{character}) The additional ids to be appended to \code{namespace}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A function similar to \code{\link[shiny:NS]{shiny::NS()}} that is used to create a \code{character}
namespace for the shiny UI.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TealAppDriver-get_module_input"></a>}}
\if{latex}{\out{\hypertarget{method-TealAppDriver-get_module_input}{}}}
\subsection{Method \code{get_module_input()}}{
Get the input from the module in the \code{teal} app.
This function will only access inputs from the name space of the current active teal module.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TealAppDriver$get_module_input(input_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_id}}{(character) The shiny input id to get the value from.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The value of the shiny input.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TealAppDriver-get_module_output"></a>}}
\if{latex}{\out{\hypertarget{method-TealAppDriver-get_module_output}{}}}
\subsection{Method \code{get_module_output()}}{
Get the output from the module in the \code{teal} app.
This function will only access outputs from the name space of the current active teal module.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TealAppDriver$get_module_output(output_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{output_id}}{(character) The shiny output id to get the value from.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The value of the shiny output.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TealAppDriver-set_module_input"></a>}}
\if{latex}{\out{\hypertarget{method-TealAppDriver-set_module_input}{}}}
\subsection{Method \code{set_module_input()}}{
Set the input in the module in the \code{teal} app.
This function will only set inputs in the name space of the current active teal module.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TealAppDriver$set_module_input(input_id, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_id}}{(character) The shiny input id to get the value from.}

\item{\code{value}}{The value to set the input to.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{TealAppDriver} object invisibly.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TealAppDriver-get_active_filter_vars"></a>}}
\if{latex}{\out{\hypertarget{method-TealAppDriver-get_active_filter_vars}{}}}
\subsection{Method \code{get_active_filter_vars()}}{
Get the active datasets that can be accessed via the filter panel of the current active teal module.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TealAppDriver$get_active_filter_vars()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TealAppDriver-get_active_data_filters"></a>}}
\if{latex}{\out{\hypertarget{method-TealAppDriver-get_active_data_filters}{}}}
\subsection{Method \code{get_active_data_filters()}}{
Get the active filter variables from a dataset in the \code{teal} app.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TealAppDriver$get_active_data_filters(dataset_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataset_name}}{(character) The name of the dataset to get the filter variables from.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TealAppDriver-get_filter_selection_value"></a>}}
\if{latex}{\out{\hypertarget{method-TealAppDriver-get_filter_selection_value}{}}}
\subsection{Method \code{get_filter_selection_value()}}{
Get the active filter values from the active filter selection of dataset from the filter panel.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TealAppDriver$get_filter_selection_value(
  dataset_name,
  var_name,
  is_numeric = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataset_name}}{(character) The name of the dataset to get the filter values from.}

\item{\code{var_name}}{(character) The name of the variable to get the filter values from.}

\item{\code{is_numeric}}{(logical) If the variable is numeric or not.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The value of the active filter selection.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TealAppDriver-add_filter_var"></a>}}
\if{latex}{\out{\hypertarget{method-TealAppDriver-add_filter_var}{}}}
\subsection{Method \code{add_filter_var()}}{
Add a new variable from the dataset to be filtered.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TealAppDriver$add_filter_var(dataset_name, var_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataset_name}}{(character) The name of the dataset to add the filter variable to.}

\item{\code{var_name}}{(character) The name of the variable to add to the filter panel.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{TealAppDriver} object invisibly.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TealAppDriver-remove_filter_var"></a>}}
\if{latex}{\out{\hypertarget{method-TealAppDriver-remove_filter_var}{}}}
\subsection{Method \code{remove_filter_var()}}{
Remove an active filter variable of a dataset from the active filter variables panel.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TealAppDriver$remove_filter_var(dataset_name, var_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataset_name}}{(character) The name of the dataset to remove the filter variable from.}

\item{\code{var_name}}{(character) The name of the variable to remove from the filter panel.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{TealAppDriver} object invisibly.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TealAppDriver-set_filter_selection_value"></a>}}
\if{latex}{\out{\hypertarget{method-TealAppDriver-set_filter_selection_value}{}}}
\subsection{Method \code{set_filter_selection_value()}}{
Set the active filter values for a variable of a dataset in the active filter variable panel.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TealAppDriver$set_filter_selection_value(
  dataset_name,
  var_name,
  input,
  is_numeric = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataset_name}}{(character) The name of the dataset to set the filter value for.}

\item{\code{var_name}}{(character) The name of the variable to set the filter value for.}

\item{\code{input}}{The value to set the filter to.}

\item{\code{is_numeric}}{(logical) If the variable is numeric or not.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{TealAppDriver} object invisibly.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TealAppDriver-open_filter_manager"></a>}}
\if{latex}{\out{\hypertarget{method-TealAppDriver-open_filter_manager}{}}}
\subsection{Method \code{open_filter_manager()}}{
Click on the filter manager show button.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TealAppDriver$open_filter_manager()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The \code{TealAppDriver} object invisibly.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TealAppDriver-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TealAppDriver-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TealAppDriver$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
