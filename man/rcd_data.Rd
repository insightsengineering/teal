% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RelationalDataConnector_constructors.R
\name{rcd_data}
\alias{rcd_data}
\title{\code{RelationalDataConnector} connector for \code{random.cdisc.data}}
\usage{
rcd_data(..., connection = rcd_connection(), check = TRUE)
}
\arguments{
\item{...}{(\code{DatasetConnector}) dataset connectors created using \code{\link{rcd_dataset_connector}}
In case \code{cached = FALSE}, please watch the order and call \code{ADSL} generation first.}

\item{connection}{(\code{DataConnection}) object returned from \code{rcd_connection}.}

\item{check}{optional, (\code{logical}) whether perform reproducibility check}
}
\value{
An object of class \code{RelationalDataConnector}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
Build data connector for \code{random.cdisc.data} functions or datasets
}
\details{
This data connector can load data from \code{random.cdisc.data}. datasets can be loaded
from a seed or cached. In case datasets should be loaded from cache, the
\code{\link{rcd_dataset_connector}} needs to be used with the cached argument set
to \code{TRUE} for all datasets.

In case non-cached datasets should be used, please watch the order of datasets. Most
of the datasets from \code{random.cdisc.data} need \code{ADSL} to be produced first. So
please create the \code{ADSL} dataset first.
}
\examples{
library(random.cdisc.data)
x <- rcd_data(
  rcd_cdisc_dataset_connector("ADSL", radsl, cached = TRUE),
  rcd_cdisc_dataset_connector("ADLB", radlb, cached = TRUE)
)

# add the data to a proper teal app
app <- init(
  data = cdisc_data(x),
  modules = root_modules(
    module(
      "ADSL AGE histogram",
      server = function(input, output, session, datasets) {
        output$hist <- renderPlot(
          hist(datasets$get_data("ADSL", filtered = TRUE)$AGE)
        )
      },
      ui = function(id, ...) {ns <- NS(id); plotOutput(ns('hist'))},
      filters = "ADSL"
    )
  ),
  header = tags$h1("Sample App")
)
\dontrun{
shinyApp(app$ui, app$server)
}
}
