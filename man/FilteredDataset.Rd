% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FilteredDataset.R
\name{FilteredDataset}
\alias{FilteredDataset}
\title{\code{FilterStates} R6 class}
\description{
\code{FilteredDataset} is a class which renders/controls \code{FilterStates}(s) for \code{TealDataset}.
Each \code{FilteredDataset} contains \code{filter_states} field - a \code{list} which contains one
(\code{data.frame}) or multiple (\code{MultiAssayExperiment}) \code{FilterStates} objects.
Each \code{FilterStates} is responsible for one filter/subset expression applied for specific
components of the \code{TealDataset}.
}
\keyword{internal}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{FilteredDataset$new()}}
\item \href{#method-add_to_eval_env}{\code{FilteredDataset$add_to_eval_env()}}
\item \href{#method-queues_empty}{\code{FilteredDataset$queues_empty()}}
\item \href{#method-get_call}{\code{FilteredDataset$get_call()}}
\item \href{#method-get_data}{\code{FilteredDataset$get_data()}}
\item \href{#method-get_data_reactive}{\code{FilteredDataset$get_data_reactive()}}
\item \href{#method-get_filter_state}{\code{FilteredDataset$get_filter_state()}}
\item \href{#method-get_filter_states}{\code{FilteredDataset$get_filter_states()}}
\item \href{#method-get_dataname}{\code{FilteredDataset$get_dataname()}}
\item \href{#method-get_dataset}{\code{FilteredDataset$get_dataset()}}
\item \href{#method-get_filter_overview_info}{\code{FilteredDataset$get_filter_overview_info()}}
\item \href{#method-get_hash}{\code{FilteredDataset$get_hash()}}
\item \href{#method-get_keys}{\code{FilteredDataset$get_keys()}}
\item \href{#method-get_join_keys}{\code{FilteredDataset$get_join_keys()}}
\item \href{#method-get_varlabels}{\code{FilteredDataset$get_varlabels()}}
\item \href{#method-get_varnames}{\code{FilteredDataset$get_varnames()}}
\item \href{#method-get_filtered_dataname}{\code{FilteredDataset$get_filtered_dataname()}}
\item \href{#method-get_filterable_varnames}{\code{FilteredDataset$get_filterable_varnames()}}
\item \href{#method-ui}{\code{FilteredDataset$ui()}}
\item \href{#method-server}{\code{FilteredDataset$server()}}
\item \href{#method-ui_add_filter_state}{\code{FilteredDataset$ui_add_filter_state()}}
\item \href{#method-srv_add_filter_state}{\code{FilteredDataset$srv_add_filter_state()}}
\item \href{#method-clone}{\code{FilteredDataset$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initializes this \code{FilteredDataset} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilteredDataset$new(dataset)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataset}}{(\code{TealDataset})\cr
single dataset for which filters are rendered}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-add_to_eval_env"></a>}}
\if{latex}{\out{\hypertarget{method-add_to_eval_env}{}}}
\subsection{Method \code{add_to_eval_env()}}{
Adds objects to the filter call evaluation environment
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilteredDataset$add_to_eval_env(name, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{(\code{character}) object name}

\item{\code{value}}{object value}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisibly this \code{FilteredDataset}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-queues_empty"></a>}}
\if{latex}{\out{\hypertarget{method-queues_empty}{}}}
\subsection{Method \code{queues_empty()}}{
Removes all active filter items applied to this dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilteredDataset$queues_empty()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
NULL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_call"></a>}}
\if{latex}{\out{\hypertarget{method-get_call}{}}}
\subsection{Method \code{get_call()}}{
Gets a filter expression

This functions returns filter calls equivalent to selected items
within each of \code{filter_states}. Configuration of the calls is constant and
depends on \code{filter_states} type and order which are set during initialization.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilteredDataset$get_call()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
filter \code{call} or \code{list} of filter calls
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_data"></a>}}
\if{latex}{\out{\hypertarget{method-get_data}{}}}
\subsection{Method \code{get_data()}}{
Gets raw data of this dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilteredDataset$get_data(filtered)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{filtered}}{(\code{logical(1)})\cr
whether returned data should be filtered or not}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
type of returned object depending on a data stored in
\code{TealDataset}. Currently \code{data.frame} or \code{MultiAssayExperiment}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_data_reactive"></a>}}
\if{latex}{\out{\hypertarget{method-get_data_reactive}{}}}
\subsection{Method \code{get_data_reactive()}}{
Gets the reactive object which returns filtered data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilteredDataset$get_data_reactive()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(\code{reactive})
Gets the reactive values from the active \code{FilterState} objects.

Get all active filters from this dataset in form of the nested list.
The output list is a compatible input to \code{self$set_filter_state}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_filter_state"></a>}}
\if{latex}{\out{\hypertarget{method-get_filter_state}{}}}
\subsection{Method \code{get_filter_state()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilteredDataset$get_filter_state()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{list} with named elements corresponding to \code{FilterStates} objects
with active filters.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_filter_states"></a>}}
\if{latex}{\out{\hypertarget{method-get_filter_states}{}}}
\subsection{Method \code{get_filter_states()}}{
Gets the active \code{FilterStates} objects.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilteredDataset$get_filter_states(id = character(0))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{(\code{character(1)}, \code{character(0)})\cr
the id of the \code{private$filter_states} list element where \code{FilterStates} is kept.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{FilterStates} or \code{list} of \code{FilterStates} objects.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_dataname"></a>}}
\if{latex}{\out{\hypertarget{method-get_dataname}{}}}
\subsection{Method \code{get_dataname()}}{
Get name of the dataset

Get name of the dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilteredDataset$get_dataname()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{character(1)} as a name of this dataset
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_dataset"></a>}}
\if{latex}{\out{\hypertarget{method-get_dataset}{}}}
\subsection{Method \code{get_dataset()}}{
Gets the dataset in this \code{FilteredDataset}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilteredDataset$get_dataset()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{TealDataset}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_filter_overview_info"></a>}}
\if{latex}{\out{\hypertarget{method-get_filter_overview_info}{}}}
\subsection{Method \code{get_filter_overview_info()}}{
Get filter overview rows of a dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilteredDataset$get_filter_overview_info()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(\code{matrix}) matrix of observations and subjects
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_hash"></a>}}
\if{latex}{\out{\hypertarget{method-get_hash}{}}}
\subsection{Method \code{get_hash()}}{
Returns the hash of the unfiltered dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilteredDataset$get_hash()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(\code{character(1)}) the hash
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_keys"></a>}}
\if{latex}{\out{\hypertarget{method-get_keys}{}}}
\subsection{Method \code{get_keys()}}{
Gets the keys for the dataset of this \code{FilteredDataset}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilteredDataset$get_keys()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(\code{character}) the keys of dataset
Gets join keys to join the dataset of this \code{FilteredDataset}
with other \code{TealDataset} objects.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_join_keys"></a>}}
\if{latex}{\out{\hypertarget{method-get_join_keys}{}}}
\subsection{Method \code{get_join_keys()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilteredDataset$get_join_keys()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{list} of keys
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_varlabels"></a>}}
\if{latex}{\out{\hypertarget{method-get_varlabels}{}}}
\subsection{Method \code{get_varlabels()}}{
Gets labels of variables in the data

Variables are the column names of the data.
Either, all labels must have been provided for all variables
in \code{set_data} or \code{NULL}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilteredDataset$get_varlabels(variables = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{variables}}{(\code{character} vector) variables to get labels for;
if \code{NULL}, for all variables in data}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(\code{character} or \code{NULL}) variable labels, \code{NULL} if \code{column_labels}
attribute does not exist for the data
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_varnames"></a>}}
\if{latex}{\out{\hypertarget{method-get_varnames}{}}}
\subsection{Method \code{get_varnames()}}{
Gets variable names from dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilteredDataset$get_varnames()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{character} the variable names
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_filtered_dataname"></a>}}
\if{latex}{\out{\hypertarget{method-get_filtered_dataname}{}}}
\subsection{Method \code{get_filtered_dataname()}}{
Gets the suffixed dataname
Used when filtering the data to get \verb{<dataname>_FILTERED},
\verb{<dataname>_FILTERED_ALONE} or any other name.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilteredDataset$get_filtered_dataname(
  dataname = self$get_dataname(),
  suffix = "_FILTERED"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataname}}{(\code{character(1)}) dataname}

\item{\code{suffix}}{(\code{character(1)}) string to be putted after dataname}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{character(1)}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_filterable_varnames"></a>}}
\if{latex}{\out{\hypertarget{method-get_filterable_varnames}{}}}
\subsection{Method \code{get_filterable_varnames()}}{
Gets variable names for the filtering.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilteredDataset$get_filterable_varnames()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(\code{character} vector) of variable names
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ui"></a>}}
\if{latex}{\out{\hypertarget{method-ui}{}}}
\subsection{Method \code{ui()}}{
UI module for dataset active filters

UI module containing dataset active filters along with
title and remove button.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilteredDataset$ui(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{(\code{character(1)})\cr
identifier of the element - preferably containing dataset name}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
function - shiny UI module
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-server"></a>}}
\if{latex}{\out{\hypertarget{method-server}{}}}
\subsection{Method \code{server()}}{
Server module for a dataset active filters

Server module managing a  active filters.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilteredDataset$server(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{(\code{character(1)})\cr
an ID string that corresponds with the ID used to call the module's UI function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{moduleServer} function which returns \code{NULL}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ui_add_filter_state"></a>}}
\if{latex}{\out{\hypertarget{method-ui_add_filter_state}{}}}
\subsection{Method \code{ui_add_filter_state()}}{
UI module to add filter variable for this dataset

UI module to add filter variable for this dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilteredDataset$ui_add_filter_state(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{(\code{character(1)})\cr
identifier of the element - preferably containing dataset name}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
function - shiny UI module
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-srv_add_filter_state"></a>}}
\if{latex}{\out{\hypertarget{method-srv_add_filter_state}{}}}
\subsection{Method \code{srv_add_filter_state()}}{
Server module to add filter variable for this dataset

Server module to add filter variable for this dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilteredDataset$srv_add_filter_state(id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{(\code{character(1)})\cr
an ID string that corresponds with the ID used to call the module's UI function.}

\item{\code{...}}{ignored}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{moduleServer} function.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilteredDataset$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
