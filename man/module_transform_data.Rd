% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/module_transform_data.R
\name{module_transform_data}
\alias{module_transform_data}
\alias{ui_transform_teal_data}
\alias{srv_transform_teal_data}
\alias{srv_decorate_teal_data}
\alias{ui_decorate_teal_data}
\title{Module to transform \code{reactive} \code{teal_data}}
\usage{
ui_transform_teal_data(id, transformators, class = "well")

srv_transform_teal_data(
  id,
  data,
  transformators,
  modules = NULL,
  is_transform_failed = reactiveValues()
)

srv_decorate_teal_data(id, data, decorators, expr = NULL)

ui_decorate_teal_data(id, transformators, class = "well")
}
\arguments{
\item{id}{(\code{character(1)}) Module id}

\item{transformators}{(\code{list} of \code{teal_transform_module}) that will be applied to transformator module's data input.}

\item{class}{(character(1)) CSS class to be added in the \code{div} wrapper tag.}

\item{data}{(\verb{reactive teal_data})}

\item{modules}{(\code{teal_modules} or \code{teal_module}) For \code{datanames} validation purpose}

\item{is_transform_failed}{(\code{reactiveValues}) contains \code{logical} flags named after each transformator.
Help to determine if any previous transformator failed, so that following transformators can be disabled
and display a generic failure message.}

\item{expr}{(\code{expression}) to evaluate on the output of the decoration.
Must be inline code. See \code{\link[=within]{within()}}
Default is \code{NULL} which won't append any expression.}
}
\value{
\code{reactive} \code{teal_data}
}
\description{
Module calls \code{\link[=teal_transform_module]{teal_transform_module()}} in sequence so that \verb{reactive teal_data} output
from one module is handed over to the following module's input.
}
\details{
\code{srv_decorate_teal_data} is a wrapper around \code{srv_transform_teal_data} that
allows to decorate the data with additional reactive expressions.
When original \code{teal_data} object is in error state, it will show that error
first.

\code{ui_decorate_teal_data} is a wrapper around \code{ui_transform_teal_data}.
}
