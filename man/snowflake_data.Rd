% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RelationalDataConnector_constructors.R
\name{snowflake_data}
\alias{snowflake_data}
\title{\code{RelationalDataConnector} connector for \code{SNOWFLAKE}}
\usage{
snowflake_data(..., connection)
}
\arguments{
\item{...}{(\code{DatasetConnector}) dataset connectors created using \code{\link{snowflake_dataset_connector}}}

\item{connection}{(\code{DataConnection}) object returned from \code{snowflake_connection}.}
}
\value{
An object of class \code{RelationalDataConnector}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
Build data connector for \code{SNOWFLAKE} functions or datasets
}
\examples{
\dontrun{
library(magrittr)
data <- snowflake_data(
  snowflake_cdisc_dataset_connector(
    dataname ="ADSL",
    sql_query = <<sql_query>>,
  ) \%>\% mutate_dataset(<<any mutations required, e.g. to convert data types>>),
  connection = snowflake_connection(
    open_args = list(
      role = <<role>>,
      database = <<database>>,
      schema = <<schema>>,
      warehouse = <<warehouse>>
    )
  )
)

app <- init(
  data = cdisc_data(data),
  root_modules(
    module(
      "ADSL AGE histogram",
      server = function(input, output, session, datasets) {
        output$hist <- renderPlot(
          hist(datasets$get_data("ADSL", filtered = TRUE)$AGE)
        )
      },
      ui = function(id, ...) {ns <- NS(id); plotOutput(ns('hist'))},
      filters = "ADSL"
    )
  ),
  header = tags$h1("Sample App")
)

shinyApp(app$ui, app$server)
}
}
