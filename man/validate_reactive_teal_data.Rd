% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/1.0_validate_reactive_teal_data.R
\name{validate_reactive_teal_data}
\alias{validate_reactive_teal_data}
\alias{ui_validate_reactive_teal_data}
\alias{srv_validate_reactive_teal_data}
\title{Validate reactive \code{teal_data}}
\usage{
ui_validate_reactive_teal_data(id)

srv_validate_reactive_teal_data(
  id,
  data,
  modules = NULL,
  validate_shiny_silent_error = FALSE
)
}
\arguments{
\item{id}{(\code{character}) optional
string specifying the \code{shiny} module id in cases it is used as a \code{shiny} module
rather than a standalone \code{shiny} app. This is a legacy feature.}

\item{data}{(\code{teal_data}, \code{teal_data_module} or \code{reactive} returning \code{teal_data})}

\item{modules}{(\code{list} or \code{teal_modules} or \code{teal_module})
nested list of \code{teal_modules} or \code{teal_module} objects or a single
\code{teal_modules} or \code{teal_module} object. These are the specific output modules which
will be displayed in the \code{teal} application. See \code{\link[=modules]{modules()}} and \code{\link[=module]{module()}} for
more details.}

\item{validate_shiny_silent_error}{(\code{logical}) If \code{TRUE}, then \code{shiny.silent.error} is validated and
error message is displayed.
Default is \code{FALSE} to handle empty reactive cycle on init.}
}
\value{
(\code{reactive} returning \code{teal_data})
}
\description{
Validate reactive \code{teal_data}
}
\section{data validation}{

\code{data} is invalid if:
\itemize{
\item \code{\link[=teal_data_module]{teal_data_module()}} is invalid if server doesn't return \code{reactive}.
\item \code{reactive} throws a \code{shiny.error} - happens when module creating \code{\link[=teal_data]{teal_data()}} fails.
\item \code{reactive} returns \code{qenv.error} - happens when \code{\link[=teal_data]{teal_data()}} evaluates a failing code.
\item \code{reactive} object doesn't return \code{\link[=teal_data]{teal_data()}}.
\item \code{\link[=teal_data]{teal_data()}} object lacks any datanames specified in the \code{modules} argument.
}

Any errors or warnings are displayed in the app pointing out to the reason of failure.
In all above, reactive cycle is halted and \code{teal} doesn't continue sending data further. On init,
halting reactive cycle stops an app load, while on subsequent reactive cycles, data just remains
unchanged and user is able to continue using the app.
}

\keyword{internal}
