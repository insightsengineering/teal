% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validations.R
\name{validate_has_data}
\alias{validate_has_data}
\title{Validate that dataset has a minimum number of observations}
\usage{
validate_has_data(
  x,
  min_nrow = NULL,
  complete = FALSE,
  allow_inf = TRUE,
  msg = NULL
)
}
\arguments{
\item{x}{a data.frame}

\item{min_nrow}{minimum number of rows in \code{x}}

\item{complete}{\code{logical} default \code{FALSE} when set to \code{TRUE} then complete cases are checked.}

\item{allow_inf}{\code{logical} default \code{TRUE} when set to \code{FALSE} then error thrown if any values are
infinite.}

\item{msg}{(\code{character(1)}) additional message to display alongside the default message.}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}
}
\details{
This function is a wrapper for \code{shiny::validate}.
}
\examples{
library(teal)
ui <- fluidPage(
  sliderInput("len", "Max Length of Sepal",
    min = 4.3, max = 7.9, value = 5
  ),
  plotOutput("plot")
)

server <- function(input, output) {
  output$plot <- renderPlot({
    df <- iris[iris$Sepal.Length <= input$len, ]
    validate_has_data(
      iris_f,
      min_nrow = 10,
      complete = FALSE,
      msg = "Please adjust Max Length of Sepal"
    )

    hist(iris_f$Sepal.Length, breaks = 5)
  })
}
if (interactive()) {
  shinyApp(ui, server)
}

}
