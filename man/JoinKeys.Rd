% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/JoinKeys.R
\name{JoinKeys}
\alias{JoinKeys}
\title{R6 Class to store relationships for joining datasets}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}
This class stores symmetric links between pairs of key-values
(e.g. column A of dataset X can be joined with column B of dataset Y). This relationship
is more general than the SQL foreign key relationship which also imposes constraints on the values
of these columns.
}
\examples{
x <- teal:::JoinKeys$new()
x$set(
  list(
    join_key("dataset_A", "dataset_B", c("col_1" = "col_a")),
    join_key("dataset_A", "dataset_C", c("col_2" = "col_x", "col_3" = "col_y"))
  )
)
x$get()
x$mutate("dataset_A", "dataset_B", c("col1" = "col10"))
x$get("dataset_A", "dataset_B")
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{JoinKeys$new()}}
\item \href{#method-split}{\code{JoinKeys$split()}}
\item \href{#method-merge}{\code{JoinKeys$merge()}}
\item \href{#method-get}{\code{JoinKeys$get()}}
\item \href{#method-mutate}{\code{JoinKeys$mutate()}}
\item \href{#method-set}{\code{JoinKeys$set()}}
\item \href{#method-clone}{\code{JoinKeys$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new object of \code{JoinKeys}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JoinKeys$new()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
empty (\code{JoinKeys})
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-split"></a>}}
\if{latex}{\out{\hypertarget{method-split}{}}}
\subsection{Method \code{split()}}{
Split the current \code{JoinKeys} object into a named list of join keys objects with an element for each dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JoinKeys$split()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(\code{list}) a list of \code{JoinKeys} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-merge"></a>}}
\if{latex}{\out{\hypertarget{method-merge}{}}}
\subsection{Method \code{merge()}}{
Merging a list (or one) of \code{JoinKeys} objects into the current \code{JoinKeys} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JoinKeys$merge(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{\code{list} of \code{JoinKeys} objects or single \code{JoinKeys} object}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(\code{self}) invisibly for chaining
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get"></a>}}
\if{latex}{\out{\hypertarget{method-get}{}}}
\subsection{Method \code{get()}}{
Get join keys between two datasets.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JoinKeys$get(dataset_1, dataset_2)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataset_1}}{(\code{character}) one dataset name}

\item{\code{dataset_2}}{(\code{character}) other dataset name}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
if one or both of \code{dataset_1} and \code{dataset_2} are missing then
underlying keys structure is returned for further processing
}

\subsection{Returns}{
(\code{character}) named character vector x with names(x) the
columns of \code{dataset_1} and the values of \code{(x)} the corresponding join
keys in \code{dataset_2} or \code{character(0)} if no relationship
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mutate"></a>}}
\if{latex}{\out{\hypertarget{method-mutate}{}}}
\subsection{Method \code{mutate()}}{
Change join_keys for a given pair of dataset names (or
add join_keys for given pair if it does not exist)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JoinKeys$mutate(dataset_1, dataset_2, val)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataset_1}}{(\code{character}) one dataset name}

\item{\code{dataset_2}}{(\code{character}) other dataset name}

\item{\code{val}}{(named \code{character}) column names used to join}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(\code{self}) invisibly for chaining
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set"></a>}}
\if{latex}{\out{\hypertarget{method-set}{}}}
\subsection{Method \code{set()}}{
Set up join keys basing on list of \code{JoinKeySet} objects.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JoinKeys$set(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{\code{list} of \code{JoinKeySet} objects (which are created using the \code{join_key} function)
or single \code{JoinKeySet} objects}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Note that join keys are symmetric although the relationship only needs
to be specified once
}

\subsection{Returns}{
(\code{self}) invisibly for chaining
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JoinKeys$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
