% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transform.R
\name{transform}
\alias{transform}
\alias{transform.teal_modules}
\title{Modificates a teal module}
\usage{
\method{transform}{teal_modules}(
  `_data`,
  ui = function(id, elem) elem,
  server = function(input, output, session, data) data,
  when = "after",
  ...
)
}
\arguments{
\item{_data}{(\code{teal_module} or \code{teal_modules}), which in case of \code{teal_modules} will apply
\code{transform} to each module in the list.}

\item{ui}{(\verb{function(id, elem, ...)}) function to receive output (\code{shiny.tag}) from \verb{_data$ui}.}

\item{server}{(\verb{function(input, output, session, data, ...)}) function to receive output data from \verb{_data$server}.}

\item{when}{A character vector with when should this modification be applied: \code{before} or \code{after}.
Default \code{after}, as before is equivalent to having a transformer on the module.}

\item{...}{additional argument. Passed to \code{ui} and \code{server} by matching their formals names or to \code{teal_transform_module}.}
}
\value{
A \code{teal_module} object with the modifications.
New element ids are under \code{wrapper} namespace, old elements' ids are on the \code{wrapped} namespace.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

Modify the module's ui or server functions.
Primary used to modify the output of the report.
}
\details{
This method can overwrite the input or output of existing modules, or modify
the report generated by the module.
}
\examples{
library("teal.reporter")
app <- init(
  data = teal_data(IRIS = iris, MTCARS = mtcars),
  modules = example_module() |>
    transform(
      ui = function(id, elem) {
        ns <- NS(id)
        check_box <- checkboxInput(ns("src"), "Include R Code in the report", TRUE)
        htmltools::tagAppendChild(elem, check_box,
          .cssSelector = ".standard-layout .sidebar .sidebar-content"
        )
      },
      server = function(input, output, session, data) {
        teal_card(data) <- c(teal_card(data), teal_card("Modification"))
        if (!input$`wrapper-src`) {
          teal_card(data) <- Filter(function(x) !inherits(x, "code_chunk"), teal_card(data))
        }
        data
      }
    )
)
if (interactive()) {
  runApp(app)
}
}
\seealso{
To modify just the output see \code{\link{teal_transform_module}}.
}
