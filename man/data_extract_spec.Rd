% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_extract_spec.R
\name{data_extract_spec}
\alias{data_extract_spec}
\title{Data Extract input for teal modules}
\usage{
data_extract_spec(dataname, select = NULL, filter = NULL, reshape = FALSE)
}
\arguments{
\item{dataname}{(\code{character}) The name of the dataset to
be extracted. This dataset has to be handed over to the \code{data} argument of the
\code{\link{init}} function.}

\item{select}{(\code{NULL} or \code{select_spec}-S3 class or \code{delayed_select_spec}-S3-class object)
Columns to be selected from the input dataset
mentioned in \code{dataname}. The setup can be created using \link{select_spec} function.}

\item{filter}{(\code{NULL} or \code{filter_spec} or its respective delayed version)
Setup of the filtering of key columns inside the dataset.
This setup can be created using the \link{filter_spec} function.
Please note that if both select and filter are set to NULL, then the result will be a filter spec UI with all
variables as possible choices and a select spec with multiple set to TRUE.}

\item{reshape}{(\code{logical}) whether reshape long to wide. Note that it will be used only in case of long dataset
with multiple keys selected in filter part.}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#maturing}{\figure{lifecycle-maturing.svg}{options: alt='[Maturing]'}}}{\strong{[Maturing]}}

The Data Extract input can be used to filter and select columns from a data
set. This function enables such an input in teal.
Please use the constructor function \link{data_extract_spec} to set it up.

Note that no checks based on columns can be done because the data is only referred to by name.
}
\section{Module Development}{

\describe{
From this function's output a \code{\link[teal.devel:data_extract_ui]{teal.devel::data_extract_ui()}} can be constructed.
This input can be read by a \code{\link[teal.devel:data_extract_srv]{teal.devel::data_extract_srv()}} module.
}
}

\section{Examples}{

\describe{
\enumerate{
\item{\code{TealDataset} with multiple filters and column selection}{
\preformatted{
adtte_filters <- filter_spec(
vars = c("PARAMCD", "CNSR"),
sep = "-",
choices = c("OS-1" = "OS-1", "OS-0" = "OS-0", "PFS-1" = "PFS-1"),
selected = "OS-1",
multiple = FALSE,
label = "Choose endpoint and Censor"
)

data_extract_spec(
  dataname = "ADTTE",
  filter = adtte_filters,
  select = select_spec(
    choices = c("AVAL", "BMRKR1", "AGE"),
        selected = c("AVAL", "BMRKR1"),
        multiple = TRUE,
        fixed = FALSE,
        label = "Column"
    )
)
    }
\if{html}{
      \figure{data_extract_spec_1.png}{options: alt="TealDataset with multiple filters and column selection"}
    }
\if{html}{
      \figure{data_extract_spec_12.png}{options: alt="TealDataset with multiple filters and column selection"}
    }
\if{html}{
      \figure{data_extract_spec_11.png}{options: alt="TealDataset with multiple filters and column selection"}
    }
}
\item{Data extract without filtering}{
\preformatted{

data_extract_spec(
  dataname = "ADSL",
  filter = NULL,
  select = select_spec(
    choices = c("AGE", "SEX", "USUBJID"),
        selected = c("SEX"),
        multiple = FALSE,
        fixed = FALSE
    )
)
  }
}
\if{html}{
      \figure{data_extract_spec_2.png}{options: alt="Data extract without filtering"}
    }

\item{Data extract with a single filter}{
\preformatted{
 data_extract_spec(
   dataname = "ADSL",
   filter = filter_spec(
     vars = variable_choices("ADSL", subset = c("AGE"))
   )
 )
    }
}

\item{Data extract with a filter that also selects columns due to no select_spec}{
\preformatted{

 dynamic_filter <- filter_spec(
   vars = choices_selected(variable_choices(ADSL), "COUNTRY"),
   multiple = TRUE
  )
 data_extract_spec(
   dataname = "ADSL",
   filter = dynamic_filter
 )
    }
}
}
}
}

\references{
\link{select_spec} \link{filter_spec}
}
