% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dummy_functions.R
\name{example_module}
\alias{example_module}
\title{An example \code{teal} module}
\usage{
example_module(
  label = "example teal module",
  datanames = "all",
  transformators = list(),
  decorators = teal_transform_module()
)
}
\arguments{
\item{label}{(\code{character(1)}) Label shown in the navigation item for the module or module group.
For \code{modules()} defaults to \code{"root"}. See \code{Details}.}

\item{datanames}{(\code{character}) Names of the datasets relevant to the item.
There are 2 reserved values that have specific behaviors:
\itemize{
\item The keyword \code{"all"} includes all datasets available in the data passed to the teal application.
\item \code{NULL} hides the sidebar panel completely.
\item If \code{transformators} are specified, their \code{datanames} are automatically added to this \code{datanames}
argument.
}}

\item{transformators}{(\code{list} of \code{teal_transform_module}) that will be applied to transformator module's data input.
Each transformator module UI will appear in the \code{teal} application, unless the \code{custom_ui} attribute is set on the list.
If so, the module developer is responsible to display the UI in the module itself. \code{datanames} of the \code{transformators}
will be added to the \code{datanames}.}
}
\value{
A \code{teal} module which can be included in the \code{modules} argument to \code{\link[=init]{init()}}.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
}
\examples{
app <- init(
  data = teal_data(IRIS = iris, MTCARS = mtcars),
  modules = example_module()
)
if (interactive()) {
  shinyApp(app$ui, app$server)
}
}
