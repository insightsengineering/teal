% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CDISCTealData.R
\name{CDISCTealData}
\alias{CDISCTealData}
\title{Manage multiple \code{CDISCTealDataConnector}, \code{CDISCTealDatasetConnector} and \code{CDISCTealDataset} objects.}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

Class manages \code{CDISCTealDataConnector}, \code{CDISCTealDatasetConnector} and
\code{CDISCTealDataset} objects and aggregate them in one collection.
Class also decides whether to launch app before initialize teal application.
}
\section{Super classes}{
\code{\link[teal:TealDataAbstract]{teal::TealDataAbstract}} -> \code{\link[teal:TealData]{teal::TealData}} -> \code{CDISCTealData}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{CDISCTealData$new()}}
\item \href{#method-get_parent}{\code{CDISCTealData$get_parent()}}
\item \href{#method-check_metadata}{\code{CDISCTealData$check_metadata()}}
\item \href{#method-clone}{\code{CDISCTealData$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataAbstract" data-id="check">}\href{../../teal/html/TealDataAbstract.html#method-check}{\code{teal::TealDataAbstract$check()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataAbstract" data-id="check_reproducibility">}\href{../../teal/html/TealDataAbstract.html#method-check_reproducibility}{\code{teal::TealDataAbstract$check_reproducibility()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataAbstract" data-id="execute_mutate">}\href{../../teal/html/TealDataAbstract.html#method-execute_mutate}{\code{teal::TealDataAbstract$execute_mutate()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataAbstract" data-id="get_check_result">}\href{../../teal/html/TealDataAbstract.html#method-get_check_result}{\code{teal::TealDataAbstract$get_check_result()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataAbstract" data-id="get_code">}\href{../../teal/html/TealDataAbstract.html#method-get_code}{\code{teal::TealDataAbstract$get_code()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataAbstract" data-id="get_code_class">}\href{../../teal/html/TealDataAbstract.html#method-get_code_class}{\code{teal::TealDataAbstract$get_code_class()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataAbstract" data-id="get_dataset">}\href{../../teal/html/TealDataAbstract.html#method-get_dataset}{\code{teal::TealDataAbstract$get_dataset()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataAbstract" data-id="get_datasets">}\href{../../teal/html/TealDataAbstract.html#method-get_datasets}{\code{teal::TealDataAbstract$get_datasets()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataAbstract" data-id="is_pulled">}\href{../../teal/html/TealDataAbstract.html#method-is_pulled}{\code{teal::TealDataAbstract$is_pulled()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataAbstract" data-id="mutate">}\href{../../teal/html/TealDataAbstract.html#method-mutate}{\code{teal::TealDataAbstract$mutate()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataAbstract" data-id="mutate_dataset">}\href{../../teal/html/TealDataAbstract.html#method-mutate_dataset}{\code{teal::TealDataAbstract$mutate_dataset()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataAbstract" data-id="reassign_datasets_vars">}\href{../../teal/html/TealDataAbstract.html#method-reassign_datasets_vars}{\code{teal::TealDataAbstract$reassign_datasets_vars()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataAbstract" data-id="set_check">}\href{../../teal/html/TealDataAbstract.html#method-set_check}{\code{teal::TealDataAbstract$set_check()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataAbstract" data-id="set_pull_code">}\href{../../teal/html/TealDataAbstract.html#method-set_pull_code}{\code{teal::TealDataAbstract$set_pull_code()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealData" data-id="copy">}\href{../../teal/html/TealData.html#method-copy}{\code{teal::TealData$copy()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealData" data-id="get_connectors">}\href{../../teal/html/TealData.html#method-get_connectors}{\code{teal::TealData$get_connectors()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealData" data-id="get_datanames">}\href{../../teal/html/TealData.html#method-get_datanames}{\code{teal::TealData$get_datanames()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealData" data-id="get_items">}\href{../../teal/html/TealData.html#method-get_items}{\code{teal::TealData$get_items()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealData" data-id="get_join_keys">}\href{../../teal/html/TealData.html#method-get_join_keys}{\code{teal::TealData$get_join_keys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealData" data-id="get_server">}\href{../../teal/html/TealData.html#method-get_server}{\code{teal::TealData$get_server()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealData" data-id="get_ui">}\href{../../teal/html/TealData.html#method-get_ui}{\code{teal::TealData$get_ui()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealData" data-id="launch">}\href{../../teal/html/TealData.html#method-launch}{\code{teal::TealData$launch()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealData" data-id="mutate_join_keys">}\href{../../teal/html/TealData.html#method-mutate_join_keys}{\code{teal::TealData$mutate_join_keys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealData" data-id="print">}\href{../../teal/html/TealData.html#method-print}{\code{teal::TealData$print()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new object of \code{CDISCTealData} class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCTealData$new(..., check = FALSE, join_keys)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{(\code{TealDataConnector}, \code{TealDataset} or
\code{TealDatasetConnector}) elements to include where \code{ADSL} data is mandatory.}

\item{\code{check}}{(\code{logical}) reproducibility check - whether evaluated preprocessing code gives the same objects
as provided in arguments. Check is run only if flag is true and preprocessing code is not empty.}

\item{\code{join_keys}}{(\code{JoinKeys}) or a single (\code{JoinKeySet})\cr
(optional) object with datasets column names used for joining.
If empty then it would be automatically derived basing on intersection of datasets primary keys}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_parent"></a>}}
\if{latex}{\out{\hypertarget{method-get_parent}{}}}
\subsection{Method \code{get_parent()}}{
Get all datasets parent names
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCTealData$get_parent()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(named \code{list}) with dataset name and its corresponding parent dataset name
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-check_metadata"></a>}}
\if{latex}{\out{\hypertarget{method-check_metadata}{}}}
\subsection{Method \code{check_metadata()}}{
Check correctness of stored joining keys and presence of keys to parent
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCTealData$check_metadata()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
raise and error or invisible \code{TRUE}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCTealData$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
