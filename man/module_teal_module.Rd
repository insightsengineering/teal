% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/1.0_module_teal_transform.R,
%   R/module_nested_tabs.R
\name{module_teal_module}
\alias{module_teal_module}
\alias{ui_teal_data_module}
\alias{srv_teal_data_module}
\alias{ui_teal_module}
\alias{ui_teal_module.default}
\alias{ui_teal_module.teal_modules}
\alias{ui_teal_module.teal_module}
\alias{srv_teal_module}
\alias{srv_teal_module.default}
\alias{srv_teal_module.teal_modules}
\alias{srv_teal_module.teal_module}
\title{Execute teal_data_module}
\usage{
ui_teal_data_module(id, transformers, class = "")

srv_teal_data_module(id, teal_data, transformers, modules)

ui_teal_module(id, modules, depth = 0L)

\method{ui_teal_module}{default}(id, modules, depth = 0L)

\method{ui_teal_module}{teal_modules}(id, modules, depth = 0L)

\method{ui_teal_module}{teal_module}(id, modules, depth = 0L)

srv_teal_module(
  id,
  data_rv,
  modules,
  datasets = NULL,
  slices_global = reactiveVal(teal_slices()),
  reporter = teal.reporter::Reporter$new()
)

\method{srv_teal_module}{default}(
  id,
  data_rv,
  modules,
  datasets = NULL,
  slices_global = reactiveVal(teal_slices()),
  reporter = teal.reporter::Reporter$new()
)

\method{srv_teal_module}{teal_modules}(
  id,
  data_rv,
  modules,
  datasets = NULL,
  slices_global = reactiveVal(teal_slices()),
  reporter = teal.reporter::Reporter$new()
)

\method{srv_teal_module}{teal_module}(
  id,
  data_rv,
  modules,
  datasets = NULL,
  slices_global = reactiveVal(teal_slices()),
  reporter = teal.reporter::Reporter$new()
)
}
\arguments{
\item{id}{(\code{character(1)}) Module id}

\item{modules}{(\code{list} or \code{teal_modules} or \code{teal_module})
nested list of \code{teal_modules} or \code{teal_module} objects or a single
\code{teal_modules} or \code{teal_module} object. These are the specific output modules which
will be displayed in the \code{teal} application. See \code{\link[=modules]{modules()}} and \code{\link[=module]{module()}} for
more details.}

\item{depth}{(\code{integer(1)})
number which helps to determine depth of the modules nesting.}

\item{data_rv}{(\code{reactive} returning \code{teal_data})}

\item{datasets}{(\code{reactive} returning \code{FilteredData} or \code{NULL})
When \code{datasets} is passed from the parent module (\code{srv_teal}) then \code{dataset} is a singleton
which implies in filter-panel to be "global". When \code{NULL} then filter-panel is "module-specific".}

\item{slices_global}{(\code{reactiveVal} returning \code{modules_teal_slices})
see \code{\link{slices_global}}}

\item{data}{(\code{reactive}) \code{teal_data}}

\item{...}{(\code{teal_data_module})}
}
\value{
\code{reactive} \code{teal_data}

Depending on the class of \code{modules}, \code{ui_teal_module} returns:
\itemize{
\item \code{teal_module}: instantiated UI of the module.
\item \code{teal_modules}: \code{bslib::navset_tab} with each tab corresponding to recursively
calling this function on it.
}

\code{srv_teal_module} returns a reactive which returns the active module that corresponds to the selected tab.
}
\description{
Function executes the \code{teal_data_module} and returns the modified data.
Modules' execution order is determined by the order provided to \code{...} argument.
Reactive data output of the previous module is used as input for the next module, so the final
data is the product of all consecutive transformations.
}
\section{\code{ui_teal_module}}{

Each \code{teal_modules} is translated to a \code{bslib::navset_tab} and each
of its children is another tab-module called recursively. The UI of a
\code{teal_module} is obtained by calling its UI function.

The \code{datasets} argument is required to resolve the \code{teal} arguments in an
isolated context (with respect to reactivity).
}

\section{\code{srv_teal_module}}{

This module recursively calls all elements of \code{modules} and returns currently active one.
\itemize{
\item \code{teal_module} returns self as a active module.
\item \code{teal_modules} also returns module active within self which is determined by the \code{input$active_tab}.
}
}

\keyword{internal}
