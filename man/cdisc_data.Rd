% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CDISCData.R
\name{cdisc_data}
\alias{cdisc_data}
\title{Data input for teal app}
\usage{
cdisc_data(..., join_keys, code = "", check = FALSE)
}
\arguments{
\item{...}{(\code{RelationalDataConnector}, \code{Dataset} or
\code{DatasetConnector}) elements to include where \code{ADSL} data is mandatory.}

\item{join_keys}{(\code{JoinKeys}) or a single (\code{JoinKeySet})\cr
(optional) object with datasets column names used for joining.
If empty then it would be automatically derived basing on intersection of datasets primary keys}

\item{code}{(\code{character}) code to reproduce the datasets.}

\item{check}{(\code{logical}) reproducibility check - whether evaluated preprocessing code gives the same objects
as provided in arguments. Check is run only if flag is true and preprocessing code is not empty.}
}
\value{
a \code{CDISCData} object
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
Function passes datasets to teal application with option to read preprocessing code and reproducibility checking.
}
\details{
This function checks if there were keys added to all data
sets that shall be analyzed inside a teal app.
}
\note{
This function does not automatically assign keys to \code{Dataset}
and \code{DatasetConnector} objects passed to it. If the keys are needed
they should be assigned before calling \code{cdisc_data}. See example:\preformatted{}
}
\examples{
library(scda)

ADSL <- synthetic_cdisc_data("latest")$adsl
ADTTE <- synthetic_cdisc_data("latest")$adtte

# basic example
cdisc_data(
  cdisc_dataset("ADSL", ADSL),
  cdisc_dataset("ADTTE", ADTTE),
  code = 'ADSL <- synthetic_cdisc_data("latest")$adsl
          ADTTE <- synthetic_cdisc_data("latest")$adtte',
  check = TRUE
)

# Example with keys
cdisc_data(
  cdisc_dataset("ADSL", ADSL,
    keys = c("STUDYID", "USUBJID")
  ),
  cdisc_dataset("ADTTE", ADTTE,
    keys = c("STUDYID", "USUBJID", "PARAMCD"),
    parent = "ADSL"
  ),
  join_keys = join_keys(
    join_key(
      "ADSL",
      "ADTTE",
      c("STUDYID" = "STUDYID", "USUBJID" = "USUBJID")
    )
  ),
  code = 'ADSL <- synthetic_cdisc_data("latest")$adsl
          ADTTE <- synthetic_cdisc_data("latest")$adtte',
  check = TRUE
)
}
