% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/module_tabs_with_filters.R
\name{srv_tabs_with_filters}
\alias{srv_tabs_with_filters}
\title{Server function}
\usage{
srv_tabs_with_filters(
  id,
  datasets,
  modules,
  reporter = teal.reporter::Reporter$new(),
  filter
)
}
\arguments{
\item{id}{(\code{character})\cr
module id to embed it, if provided,
the server function must be called with \code{\link[shiny:moduleServer]{shiny::moduleServer()}};
See the vignette for an example. However, \code{\link[=ui_teal_with_splash]{ui_teal_with_splash()}}
is then preferred to this function.}

\item{datasets}{(\code{FilteredData})\cr
object to store filter state and filtered datasets, shared across modules. For more
details see \code{\link[teal.slice:FilteredData]{teal.slice::FilteredData}}.}

\item{modules}{\code{teal_modules} object containing the output modules which
will be displayed in the teal application. See \code{\link[=modules]{modules()}} and \code{\link[=module]{module()}} for
more details.}

\item{reporter}{(\code{Reporter}) object from \code{teal.reporter}}

\item{filter}{(\code{teal_slices})\cr
Specification of initial filter. Filters can be specified using \code{\link[=teal_slices]{teal_slices()}}.
Old way of specifying filters through a list is deprecated and will be removed in the
next release. Please fix your applications to use \code{\link[=teal_slices]{teal_slices()}}.}
}
\value{
\code{reactive} currently selected active_module
}
\description{
Server function
}
\keyword{internal}
