% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Dataset.R, R/MAEDataset.R
\name{Dataset}
\alias{Dataset}
\alias{MAEDataset}
\title{R6 Class representing a dataset with its attributes}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

Any \code{data.frame} object can be stored inside this object.
Some attributes like colnames, dimension or column names for a specific type will
be automatically derived.

\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

Any \code{MultiAssayExperiment} object can be stored inside this MAEDataset.
Some attributes like colnames, dimension or column names for a specific type will
be automatically derived.
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{ncol}}{Number of columns}

\item{\code{nrow}}{Number of rows}

\item{\code{dim}}{Dimension \code{c(x, y)}}

\item{\code{colnames}}{The column names of the data}

\item{\code{rownames}}{The rownames of the data}

\item{\code{raw_data}}{The data.frame behind this R6 class}

\item{\code{data}}{The data.frame behind this R6 class}

\item{\code{var_names}}{The column names of the data}

\item{\code{row_labels}}{Row labels (can have spaces)}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Dataset$new()}}
\item \href{#method-recreate}{\code{Dataset$recreate()}}
\item \href{#method-print}{\code{Dataset$print()}}
\item \href{#method-get_dataset}{\code{Dataset$get_dataset()}}
\item \href{#method-get_attrs}{\code{Dataset$get_attrs()}}
\item \href{#method-get_raw_data}{\code{Dataset$get_raw_data()}}
\item \href{#method-get_numeric_colnames}{\code{Dataset$get_numeric_colnames()}}
\item \href{#method-get_character_colnames}{\code{Dataset$get_character_colnames()}}
\item \href{#method-get_factor_colnames}{\code{Dataset$get_factor_colnames()}}
\item \href{#method-get_colnames}{\code{Dataset$get_colnames()}}
\item \href{#method-get_column_labels}{\code{Dataset$get_column_labels()}}
\item \href{#method-get_rownames}{\code{Dataset$get_rownames()}}
\item \href{#method-get_row_labels}{\code{Dataset$get_row_labels()}}
\item \href{#method-get_dataname}{\code{Dataset$get_dataname()}}
\item \href{#method-get_datanames}{\code{Dataset$get_datanames()}}
\item \href{#method-get_dataset_label}{\code{Dataset$get_dataset_label()}}
\item \href{#method-get_keys}{\code{Dataset$get_keys()}}
\item \href{#method-get_hash}{\code{Dataset$get_hash()}}
\item \href{#method-get_var_r6}{\code{Dataset$get_var_r6()}}
\item \href{#method-set_dataset_label}{\code{Dataset$set_dataset_label()}}
\item \href{#method-set_keys}{\code{Dataset$set_keys()}}
\item \href{#method-set_vars}{\code{Dataset$set_vars()}}
\item \href{#method-set_code}{\code{Dataset$set_code()}}
\item \href{#method-get_code}{\code{Dataset$get_code()}}
\item \href{#method-get_code_class}{\code{Dataset$get_code_class()}}
\item \href{#method-get_mutate_code_class}{\code{Dataset$get_mutate_code_class()}}
\item \href{#method-get_vars}{\code{Dataset$get_vars()}}
\item \href{#method-get_mutate_vars}{\code{Dataset$get_mutate_vars()}}
\item \href{#method-is_mutate_delayed}{\code{Dataset$is_mutate_delayed()}}
\item \href{#method-mutate}{\code{Dataset$mutate()}}
\item \href{#method-check}{\code{Dataset$check()}}
\item \href{#method-check_keys}{\code{Dataset$check_keys()}}
\item \href{#method-is_pulled}{\code{Dataset$is_pulled()}}
\item \href{#method-clone}{\code{Dataset$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new object of \code{Dataset} class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$new(
  dataname,
  x,
  keys = character(0),
  code = character(0),
  label = character(0),
  vars = list()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataname}}{(\code{character})\cr
A given name for the dataset it may not contain spaces}

\item{\code{x}}{(\code{data.frame})\cr}

\item{\code{keys}}{optional, (\code{character})\cr
Vector with primary keys}

\item{\code{code}}{(\code{character})\cr
A character string defining the code needed to produce the data set in \code{x}.
\code{initialize()} and \code{recreate()} accept code as \code{CodeClass} also
which is needed to preserve the code uniqueness and correct order.}

\item{\code{label}}{(\code{character})\cr
Label to describe the dataset}

\item{\code{vars}}{(named \code{list})) \cr
In case when this object code depends on other \code{Dataset} object(s) or
other constant value, this/these object(s) should be included as named
element(s) of the list. For example if this object code needs \code{ADSL}
object we should specify \verb{vars = list(ADSL = <adsl object>)}.
It's recommended to include \code{Dataset} or \code{DatasetConnector} objects to
the \code{vars} list to preserve reproducibility. Please note that \code{vars}
are included to this object as local \code{vars} and they cannot be modified
within another dataset.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-recreate"></a>}}
\if{latex}{\out{\hypertarget{method-recreate}{}}}
\subsection{Method \code{recreate()}}{
Recreate this Dataset with its current attributes.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$recreate(
  dataname = self$get_dataname(),
  x = self$get_raw_data(),
  keys = self$get_keys(),
  code = private$code,
  label = self$get_dataset_label(),
  vars = list()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataname}}{(\code{character})\cr
A given name for the dataset it may not contain spaces}

\item{\code{x}}{(\code{data.frame})\cr}

\item{\code{keys}}{optional, (\code{character})\cr
Vector with primary keys}

\item{\code{code}}{(\code{character})\cr
A character string defining the code needed to produce the data set in \code{x}.
\code{initialize()} and \code{recreate()} accept code as \code{CodeClass} also
which is needed to preserve the code uniqueness and correct order.}

\item{\code{label}}{(\code{character})\cr
Label to describe the dataset}

\item{\code{vars}}{(named \code{list})) \cr
In case when this object code depends on other \code{Dataset} object(s) or
other constant value, this/these object(s) should be included as named
element(s) of the list. For example if this object code needs \code{ADSL}
object we should specify \verb{vars = list(ADSL = <adsl object>)}.
It's recommended to include \code{Dataset} or \code{DatasetConnector} objects to
the \code{vars} list to preserve reproducibility. Please note that \code{vars}
are included to this object as local \code{vars} and they cannot be modified
within another dataset.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a new object of the \code{Dataset} class
Prints this Dataset.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$print(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{additional arguments to the printing method}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisibly self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_dataset"></a>}}
\if{latex}{\out{\hypertarget{method-get_dataset}{}}}
\subsection{Method \code{get_dataset()}}{
Performs any delayed mutate calls before returning self.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$get_dataset()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
dataset (\code{Dataset})
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_attrs"></a>}}
\if{latex}{\out{\hypertarget{method-get_attrs}{}}}
\subsection{Method \code{get_attrs()}}{
Get all dataset attributes
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$get_attrs()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(named \code{list}) with dataset attributes
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_raw_data"></a>}}
\if{latex}{\out{\hypertarget{method-get_raw_data}{}}}
\subsection{Method \code{get_raw_data()}}{
Derive the raw data frame inside this object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$get_raw_data()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{data.frame} or \code{rtable}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_numeric_colnames"></a>}}
\if{latex}{\out{\hypertarget{method-get_numeric_colnames}{}}}
\subsection{Method \code{get_numeric_colnames()}}{
Derive the names of all \code{numeric} columns
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$get_numeric_colnames()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{character} vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_character_colnames"></a>}}
\if{latex}{\out{\hypertarget{method-get_character_colnames}{}}}
\subsection{Method \code{get_character_colnames()}}{
Derive the names of all \code{character} columns
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$get_character_colnames()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{character} vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_factor_colnames"></a>}}
\if{latex}{\out{\hypertarget{method-get_factor_colnames}{}}}
\subsection{Method \code{get_factor_colnames()}}{
Derive the names of all \code{factor} columns
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$get_factor_colnames()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{character} vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_colnames"></a>}}
\if{latex}{\out{\hypertarget{method-get_colnames}{}}}
\subsection{Method \code{get_colnames()}}{
Derive the column names
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$get_colnames()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{character} vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_column_labels"></a>}}
\if{latex}{\out{\hypertarget{method-get_column_labels}{}}}
\subsection{Method \code{get_column_labels()}}{
Derive the column labels
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$get_column_labels()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{character} vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_rownames"></a>}}
\if{latex}{\out{\hypertarget{method-get_rownames}{}}}
\subsection{Method \code{get_rownames()}}{
Derive the row names
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$get_rownames()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{character} vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_row_labels"></a>}}
\if{latex}{\out{\hypertarget{method-get_row_labels}{}}}
\subsection{Method \code{get_row_labels()}}{
Derive the row labels
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$get_row_labels()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{character} vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_dataname"></a>}}
\if{latex}{\out{\hypertarget{method-get_dataname}{}}}
\subsection{Method \code{get_dataname()}}{
Derive the \code{name} which was formerly called \code{dataname}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$get_dataname()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{character} name of the dataset
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_datanames"></a>}}
\if{latex}{\out{\hypertarget{method-get_datanames}{}}}
\subsection{Method \code{get_datanames()}}{
Derive the dataname
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$get_datanames()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{character} name of the dataset
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_dataset_label"></a>}}
\if{latex}{\out{\hypertarget{method-get_dataset_label}{}}}
\subsection{Method \code{get_dataset_label()}}{
Derive the \code{label} which was former called \code{datalabel}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$get_dataset_label()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{character} label of the dataset
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_keys"></a>}}
\if{latex}{\out{\hypertarget{method-get_keys}{}}}
\subsection{Method \code{get_keys()}}{
Get primary keys of dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$get_keys()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(\code{character} vector) with dataset primary keys
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_hash"></a>}}
\if{latex}{\out{\hypertarget{method-get_hash}{}}}
\subsection{Method \code{get_hash()}}{
Returns the string representation of the raw data hashed with the MD5 hash algorithm.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$get_hash()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{character} the hash of the raw data
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_var_r6"></a>}}
\if{latex}{\out{\hypertarget{method-get_var_r6}{}}}
\subsection{Method \code{get_var_r6()}}{
Get the list of dependencies that are Dataset or DatasetConnector objects
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$get_var_r6()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{list}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_dataset_label"></a>}}
\if{latex}{\out{\hypertarget{method-set_dataset_label}{}}}
\subsection{Method \code{set_dataset_label()}}{
Set the label for the dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$set_dataset_label(label)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{label}}{(\code{character})\cr
Label to describe the dataset}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(\code{self}) invisibly for chaining
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_keys"></a>}}
\if{latex}{\out{\hypertarget{method-set_keys}{}}}
\subsection{Method \code{set_keys()}}{
Set new keys
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$set_keys(keys)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keys}}{optional, (\code{character})\cr
Vector with primary keys}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(\code{self}) invisibly for chaining.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_vars"></a>}}
\if{latex}{\out{\hypertarget{method-set_vars}{}}}
\subsection{Method \code{set_vars()}}{
Adds variables which code depends on
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$set_vars(vars)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{vars}}{(named \code{list})) \cr
In case when this object code depends on other \code{Dataset} object(s) or
other constant value, this/these object(s) should be included as named
element(s) of the list. For example if this object code needs \code{ADSL}
object we should specify \verb{vars = list(ADSL = <adsl object>)}.
It's recommended to include \code{Dataset} or \code{DatasetConnector} objects to
the \code{vars} list to preserve reproducibility. Please note that \code{vars}
are included to this object as local \code{vars} and they cannot be modified
within another dataset.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(\code{self}) invisibly for chaining
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_code"></a>}}
\if{latex}{\out{\hypertarget{method-set_code}{}}}
\subsection{Method \code{set_code()}}{
Sets reproducible code
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$set_code(code)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{code}}{(\code{character})\cr
A character string defining the code needed to produce the data set in \code{x}.
\code{initialize()} and \code{recreate()} accept code as \code{CodeClass} also
which is needed to preserve the code uniqueness and correct order.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(\code{self}) invisibly for chaining
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_code"></a>}}
\if{latex}{\out{\hypertarget{method-get_code}{}}}
\subsection{Method \code{get_code()}}{
Get code to get data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$get_code(deparse = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deparse}}{(\code{logical}) whether return deparsed form of a call}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
optionally deparsed \code{call} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_code_class"></a>}}
\if{latex}{\out{\hypertarget{method-get_code_class}{}}}
\subsection{Method \code{get_code_class()}}{
Get internal \code{CodeClass} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$get_code_class()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\verb{\code{CodeClass}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_mutate_code_class"></a>}}
\if{latex}{\out{\hypertarget{method-get_mutate_code_class}{}}}
\subsection{Method \code{get_mutate_code_class()}}{
Get internal \code{CodeClass} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$get_mutate_code_class()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\verb{\code{CodeClass}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_vars"></a>}}
\if{latex}{\out{\hypertarget{method-get_vars}{}}}
\subsection{Method \code{get_vars()}}{
Get internal \code{vars} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$get_vars()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\verb{\code{list}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_mutate_vars"></a>}}
\if{latex}{\out{\hypertarget{method-get_mutate_vars}{}}}
\subsection{Method \code{get_mutate_vars()}}{
Get internal \code{mutate_vars} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$get_mutate_vars()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\verb{\code{list}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-is_mutate_delayed"></a>}}
\if{latex}{\out{\hypertarget{method-is_mutate_delayed}{}}}
\subsection{Method \code{is_mutate_delayed()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$is_mutate_delayed()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{logical}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mutate"></a>}}
\if{latex}{\out{\hypertarget{method-mutate}{}}}
\subsection{Method \code{mutate()}}{
Mutate dataset by code
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$mutate(code, vars = list(), force_delay = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{code}}{(\code{CodeClass}) or (\code{character}) R expressions to be executed}

\item{\code{vars}}{a named list of R objects that \code{code} depends on to execute}

\item{\code{force_delay}}{(\code{logical}) used by the containing DatasetConnector object

Either code or script must be provided, but not both.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(\code{self}) invisibly for chaining
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-check"></a>}}
\if{latex}{\out{\hypertarget{method-check}{}}}
\subsection{Method \code{check()}}{
Check to determine if the raw data is reproducible from the \code{get_code()} code.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$check()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{TRUE} if the dataset generated from evaluating the
\code{get_code()} code is identical to the raw data, else \code{FALSE}.
Check if keys has been specified correctly for dataset. Set of \code{keys}
should distinguish unique rows or be \code{character(0)}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-check_keys"></a>}}
\if{latex}{\out{\hypertarget{method-check_keys}{}}}
\subsection{Method \code{check_keys()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$check_keys(keys = private$.keys)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keys}}{optional, (\code{character})\cr
Vector with primary keys}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{TRUE} if dataset has been already pulled, else \code{FALSE}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-is_pulled"></a>}}
\if{latex}{\out{\hypertarget{method-is_pulled}{}}}
\subsection{Method \code{is_pulled()}}{
Check if dataset has already been pulled.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$is_pulled()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{TRUE} if dataset has been already pulled, else \code{FALSE}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Super class}{
\code{\link[teal:Dataset]{teal::Dataset}} -> \code{MAEDataset}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{MAEDataset$new()}}
\item \href{#method-check}{\code{MAEDataset$check()}}
\item \href{#method-check_keys}{\code{MAEDataset$check_keys()}}
\item \href{#method-print}{\code{MAEDataset$print()}}
\item \href{#method-clone}{\code{MAEDataset$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="get_attrs">}\href{../../teal/html/Dataset.html#method-get_attrs}{\code{teal::Dataset$get_attrs()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="get_character_colnames">}\href{../../teal/html/Dataset.html#method-get_character_colnames}{\code{teal::Dataset$get_character_colnames()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="get_code">}\href{../../teal/html/Dataset.html#method-get_code}{\code{teal::Dataset$get_code()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="get_code_class">}\href{../../teal/html/Dataset.html#method-get_code_class}{\code{teal::Dataset$get_code_class()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="get_colnames">}\href{../../teal/html/Dataset.html#method-get_colnames}{\code{teal::Dataset$get_colnames()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="get_column_labels">}\href{../../teal/html/Dataset.html#method-get_column_labels}{\code{teal::Dataset$get_column_labels()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="get_dataname">}\href{../../teal/html/Dataset.html#method-get_dataname}{\code{teal::Dataset$get_dataname()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="get_datanames">}\href{../../teal/html/Dataset.html#method-get_datanames}{\code{teal::Dataset$get_datanames()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="get_dataset">}\href{../../teal/html/Dataset.html#method-get_dataset}{\code{teal::Dataset$get_dataset()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="get_dataset_label">}\href{../../teal/html/Dataset.html#method-get_dataset_label}{\code{teal::Dataset$get_dataset_label()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="get_factor_colnames">}\href{../../teal/html/Dataset.html#method-get_factor_colnames}{\code{teal::Dataset$get_factor_colnames()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="get_hash">}\href{../../teal/html/Dataset.html#method-get_hash}{\code{teal::Dataset$get_hash()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="get_keys">}\href{../../teal/html/Dataset.html#method-get_keys}{\code{teal::Dataset$get_keys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="get_mutate_code_class">}\href{../../teal/html/Dataset.html#method-get_mutate_code_class}{\code{teal::Dataset$get_mutate_code_class()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="get_mutate_vars">}\href{../../teal/html/Dataset.html#method-get_mutate_vars}{\code{teal::Dataset$get_mutate_vars()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="get_numeric_colnames">}\href{../../teal/html/Dataset.html#method-get_numeric_colnames}{\code{teal::Dataset$get_numeric_colnames()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="get_raw_data">}\href{../../teal/html/Dataset.html#method-get_raw_data}{\code{teal::Dataset$get_raw_data()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="get_row_labels">}\href{../../teal/html/Dataset.html#method-get_row_labels}{\code{teal::Dataset$get_row_labels()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="get_rownames">}\href{../../teal/html/Dataset.html#method-get_rownames}{\code{teal::Dataset$get_rownames()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="get_var_r6">}\href{../../teal/html/Dataset.html#method-get_var_r6}{\code{teal::Dataset$get_var_r6()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="get_vars">}\href{../../teal/html/Dataset.html#method-get_vars}{\code{teal::Dataset$get_vars()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="is_mutate_delayed">}\href{../../teal/html/Dataset.html#method-is_mutate_delayed}{\code{teal::Dataset$is_mutate_delayed()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="is_pulled">}\href{../../teal/html/Dataset.html#method-is_pulled}{\code{teal::Dataset$is_pulled()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="mutate">}\href{../../teal/html/Dataset.html#method-mutate}{\code{teal::Dataset$mutate()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="recreate">}\href{../../teal/html/Dataset.html#method-recreate}{\code{teal::Dataset$recreate()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="set_code">}\href{../../teal/html/Dataset.html#method-set_code}{\code{teal::Dataset$set_code()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="set_dataset_label">}\href{../../teal/html/Dataset.html#method-set_dataset_label}{\code{teal::Dataset$set_dataset_label()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="set_keys">}\href{../../teal/html/Dataset.html#method-set_keys}{\code{teal::Dataset$set_keys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="Dataset" data-id="set_vars">}\href{../../teal/html/Dataset.html#method-set_vars}{\code{teal::Dataset$set_vars()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new object of \code{MAEDataset} class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEDataset$new(
  dataname,
  x,
  keys = character(0),
  code = character(0),
  label = character(0),
  vars = list()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataname}}{(\code{character})\cr
A given name for the dataset it may not contain spaces}

\item{\code{x}}{(\code{MultiAssayExperiment})\cr}

\item{\code{keys}}{optional, (\code{character})\cr
vector with primary keys}

\item{\code{code}}{(\code{character} or \code{CodeClass})\cr
A character string defining the code needed to produce the data set in \code{x}.
\code{initialize()} and \code{recreate()} accept code as \code{CodeClass} also
which is needed to preserve the code uniqueness and correct order.}

\item{\code{label}}{(\code{character})\cr
Label to describe the dataset}

\item{\code{vars}}{(named \code{list})) \cr
In case when this object code depends on other \code{Dataset} object(s) or
other constant value, this/these object(s) should be included as named
element(s) of the list. For example if this object code needs \code{ADSL}
object we should specify \verb{vars = list(ADSL = <adsl object>)}.
It's recommended to include \code{Dataset} or \code{DatasetConnector} objects to
the \code{vars} list to preserve reproducibility. Please note that \code{vars}
are included to this object as local \code{vars} and they cannot be modified
within another dataset.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-check"></a>}}
\if{latex}{\out{\hypertarget{method-check}{}}}
\subsection{Method \code{check()}}{
Check to determine if the raw data is reproducible from the \code{get_code()} code.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEDataset$check()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{TRUE} if the dataset generated from evaluating the
\code{get_code()} code is identical to the raw data, else \code{FALSE}.
Check if keys has been specified correctly for dataset. Set of \code{keys}
should distinguish unique rows or be \code{character(0)}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-check_keys"></a>}}
\if{latex}{\out{\hypertarget{method-check_keys}{}}}
\subsection{Method \code{check_keys()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEDataset$check_keys(keys = private$.keys)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keys}}{optional, (\code{character})\cr
vector with primary keys}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{TRUE} if dataset has been already pulled, else \code{FALSE}
Prints this MAEDataset.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEDataset$print(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{additional arguments to the printing method}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisibly self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEDataset$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
