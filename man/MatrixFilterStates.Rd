% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FilterStates.R
\name{MatrixFilterStates}
\alias{MatrixFilterStates}
\title{Initialize \code{MatrixFilterStates} object}
\description{
Initialize \code{MatrixFilterStates} object

Initialize \code{MatrixFilterStates} object
}
\details{
Initialize \code{MatrixFilterStates} object
}
\section{Super class}{
\code{\link[teal:FilterStates]{teal::FilterStates}} -> \code{MatrixFilterStates}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{MatrixFilterStates$new()}}
\item \href{#method-set_bookmark_state}{\code{MatrixFilterStates$set_bookmark_state()}}
\item \href{#method-ui_add_filter_state}{\code{MatrixFilterStates$ui_add_filter_state()}}
\item \href{#method-srv_add_filter_state}{\code{MatrixFilterStates$srv_add_filter_state()}}
\item \href{#method-clone}{\code{MatrixFilterStates$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilterStates" data-id="get_call">}\href{../../teal/html/FilterStates.html#method-get_call}{\code{teal::FilterStates$get_call()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilterStates" data-id="get_fun">}\href{../../teal/html/FilterStates.html#method-get_fun}{\code{teal::FilterStates$get_fun()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilterStates" data-id="queue_empty">}\href{../../teal/html/FilterStates.html#method-queue_empty}{\code{teal::FilterStates$queue_empty()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilterStates" data-id="queue_get">}\href{../../teal/html/FilterStates.html#method-queue_get}{\code{teal::FilterStates$queue_get()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilterStates" data-id="queue_initialize">}\href{../../teal/html/FilterStates.html#method-queue_initialize}{\code{teal::FilterStates$queue_initialize()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilterStates" data-id="queue_push">}\href{../../teal/html/FilterStates.html#method-queue_push}{\code{teal::FilterStates$queue_push()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilterStates" data-id="queue_remove">}\href{../../teal/html/FilterStates.html#method-queue_remove}{\code{teal::FilterStates$queue_remove()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilterStates" data-id="ui">}\href{../../teal/html/FilterStates.html#method-ui}{\code{teal::FilterStates$ui()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MatrixFilterStates$new(input_dataname, output_dataname, datalabel)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_dataname}}{(\code{character(1)} or \code{name} or \code{call})\cr
name of the data used on lhs of the expression
specified to the function argument attached to this \code{FilterStates}.}

\item{\code{output_dataname}}{(\code{character(1)} or \code{name} or \code{call})\cr
name of the output data on the lhs of the assignment expression.}

\item{\code{datalabel}}{(\code{character(0)} or \code{character(1)})\cr
text label value.}

\item{\code{data}}{(\code{matrix})\cr
R object which \code{subset} function is applied on.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_bookmark_state"></a>}}
\if{latex}{\out{\hypertarget{method-set_bookmark_state}{}}}
\subsection{Method \code{set_bookmark_state()}}{
Set bookmark state
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MatrixFilterStates$set_bookmark_state(data, state)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{(\code{matrix})\cr
data which are supposed to be filtered}

\item{\code{state}}{(\verb{named list})\cr
should contain values which are initial selection in the \code{FilterState}.
Names of the \code{list} element should correspond to the name of the
column in \code{data}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ui_add_filter_state"></a>}}
\if{latex}{\out{\hypertarget{method-ui_add_filter_state}{}}}
\subsection{Method \code{ui_add_filter_state()}}{
Shiny UI module to add filter variable
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MatrixFilterStates$ui_add_filter_state(id, data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{(\code{character(1)})\cr
id of shiny module}

\item{\code{data}}{(\code{matrix})\cr
object which columns are used to choose filter variables.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
shiny.tag
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-srv_add_filter_state"></a>}}
\if{latex}{\out{\hypertarget{method-srv_add_filter_state}{}}}
\subsection{Method \code{srv_add_filter_state()}}{
Shiny server module to add filter variable

Module controls available choices to select as a filter variable.
Selected filter variable is being removed from available choices.
Removed filter variable gets back to available choices.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MatrixFilterStates$srv_add_filter_state(input, output, session, data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{(\code{Shiny})\cr input object}

\item{\code{output}}{(\code{Shiny})\cr output object}

\item{\code{session}}{(\code{Shiny})\cr session object}

\item{\code{data}}{(\code{matrix})\cr
object which columns are used to choose filter variables.}

\item{\code{varnames}}{(\code{character})\cr}

\item{\code{varlabels}}{(\code{character})\cr
labels of the variables displayed under name of the variable in UI element}

\item{\code{keys}}{(\code{character})\cr
names of the primary keys to distinguish from other variables
in \code{optionalSelectInput}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{NULL}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MatrixFilterStates$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
