% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CDISCTealDataset.R
\name{CDISCTealDataset}
\alias{CDISCTealDataset}
\title{R6 Class representing a dataset with parent attribute}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}
Any \code{data.frame} object can be stored inside this object.

The difference compared to the inherited class is a parent field that
indicates name of the parent dataset. Note that the parent field might
be empty (i.e. \code{character(0)}).
}
\examples{
x <- cdisc_dataset(
  dataname = "XYZ",
  x = data.frame(x = c(1, 2), y = c("a", "b"), stringsAsFactors = FALSE),
  keys = "y",
  parent = "ABC",
  code = "XYZ <- data.frame(x = c(1, 2), y = c('aa', 'bb'),
                            stringsAsFactors = FALSE)"
)

x$ncol
x$get_code()
x$get_dataname()
x$get_keys()
x$get_parent()
}
\section{Super class}{
\code{\link[teal:TealDataset]{teal::TealDataset}} -> \code{CDISCTealDataset}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{CDISCTealDataset$new()}}
\item \href{#method-recreate}{\code{CDISCTealDataset$recreate()}}
\item \href{#method-get_attrs}{\code{CDISCTealDataset$get_attrs()}}
\item \href{#method-get_parent}{\code{CDISCTealDataset$get_parent()}}
\item \href{#method-set_parent}{\code{CDISCTealDataset$set_parent()}}
\item \href{#method-clone}{\code{CDISCTealDataset$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="check">}\href{../../teal/html/TealDataset.html#method-check}{\code{teal::TealDataset$check()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="check_keys">}\href{../../teal/html/TealDataset.html#method-check_keys}{\code{teal::TealDataset$check_keys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="get_character_colnames">}\href{../../teal/html/TealDataset.html#method-get_character_colnames}{\code{teal::TealDataset$get_character_colnames()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="get_code">}\href{../../teal/html/TealDataset.html#method-get_code}{\code{teal::TealDataset$get_code()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="get_code_class">}\href{../../teal/html/TealDataset.html#method-get_code_class}{\code{teal::TealDataset$get_code_class()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="get_colnames">}\href{../../teal/html/TealDataset.html#method-get_colnames}{\code{teal::TealDataset$get_colnames()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="get_column_labels">}\href{../../teal/html/TealDataset.html#method-get_column_labels}{\code{teal::TealDataset$get_column_labels()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="get_dataname">}\href{../../teal/html/TealDataset.html#method-get_dataname}{\code{teal::TealDataset$get_dataname()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="get_datanames">}\href{../../teal/html/TealDataset.html#method-get_datanames}{\code{teal::TealDataset$get_datanames()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="get_dataset">}\href{../../teal/html/TealDataset.html#method-get_dataset}{\code{teal::TealDataset$get_dataset()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="get_dataset_label">}\href{../../teal/html/TealDataset.html#method-get_dataset_label}{\code{teal::TealDataset$get_dataset_label()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="get_factor_colnames">}\href{../../teal/html/TealDataset.html#method-get_factor_colnames}{\code{teal::TealDataset$get_factor_colnames()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="get_hash">}\href{../../teal/html/TealDataset.html#method-get_hash}{\code{teal::TealDataset$get_hash()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="get_join_keys">}\href{../../teal/html/TealDataset.html#method-get_join_keys}{\code{teal::TealDataset$get_join_keys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="get_keys">}\href{../../teal/html/TealDataset.html#method-get_keys}{\code{teal::TealDataset$get_keys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="get_mutate_code_class">}\href{../../teal/html/TealDataset.html#method-get_mutate_code_class}{\code{teal::TealDataset$get_mutate_code_class()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="get_mutate_vars">}\href{../../teal/html/TealDataset.html#method-get_mutate_vars}{\code{teal::TealDataset$get_mutate_vars()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="get_numeric_colnames">}\href{../../teal/html/TealDataset.html#method-get_numeric_colnames}{\code{teal::TealDataset$get_numeric_colnames()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="get_raw_data">}\href{../../teal/html/TealDataset.html#method-get_raw_data}{\code{teal::TealDataset$get_raw_data()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="get_row_labels">}\href{../../teal/html/TealDataset.html#method-get_row_labels}{\code{teal::TealDataset$get_row_labels()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="get_rownames">}\href{../../teal/html/TealDataset.html#method-get_rownames}{\code{teal::TealDataset$get_rownames()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="get_var_r6">}\href{../../teal/html/TealDataset.html#method-get_var_r6}{\code{teal::TealDataset$get_var_r6()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="get_vars">}\href{../../teal/html/TealDataset.html#method-get_vars}{\code{teal::TealDataset$get_vars()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="is_mutate_delayed">}\href{../../teal/html/TealDataset.html#method-is_mutate_delayed}{\code{teal::TealDataset$is_mutate_delayed()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="is_pulled">}\href{../../teal/html/TealDataset.html#method-is_pulled}{\code{teal::TealDataset$is_pulled()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="merge_join_keys">}\href{../../teal/html/TealDataset.html#method-merge_join_keys}{\code{teal::TealDataset$merge_join_keys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="mutate">}\href{../../teal/html/TealDataset.html#method-mutate}{\code{teal::TealDataset$mutate()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="mutate_join_keys">}\href{../../teal/html/TealDataset.html#method-mutate_join_keys}{\code{teal::TealDataset$mutate_join_keys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="print">}\href{../../teal/html/TealDataset.html#method-print}{\code{teal::TealDataset$print()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="reassign_datasets_vars">}\href{../../teal/html/TealDataset.html#method-reassign_datasets_vars}{\code{teal::TealDataset$reassign_datasets_vars()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="set_code">}\href{../../teal/html/TealDataset.html#method-set_code}{\code{teal::TealDataset$set_code()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="set_dataset_label">}\href{../../teal/html/TealDataset.html#method-set_dataset_label}{\code{teal::TealDataset$set_dataset_label()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="set_join_keys">}\href{../../teal/html/TealDataset.html#method-set_join_keys}{\code{teal::TealDataset$set_join_keys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="set_keys">}\href{../../teal/html/TealDataset.html#method-set_keys}{\code{teal::TealDataset$set_keys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="TealDataset" data-id="set_vars">}\href{../../teal/html/TealDataset.html#method-set_vars}{\code{teal::TealDataset$set_vars()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new object of \code{CDISCTealDataset} class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCTealDataset$new(
  dataname,
  x,
  keys,
  parent,
  code = character(0),
  label = character(0),
  vars = list()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataname}}{(\code{character})\cr
A given name for the dataset it may not contain spaces}

\item{\code{x}}{(\code{data.frame})\cr}

\item{\code{keys}}{(\code{character})\cr
vector with primary keys}

\item{\code{parent}}{optional, (\code{character}) \cr
parent dataset name}

\item{\code{code}}{(\code{character})\cr
A character string defining the code needed to produce the data set in \code{x}}

\item{\code{label}}{(\code{character})\cr
Label to describe the dataset}

\item{\code{vars}}{(named \code{list})) \cr
In case when this object code depends on other \code{TealDataset} object(s) or
other constant value, this/these object(s) should be included as named
element(s) of the list. For example if this object code needs \code{ADSL}
object we should specify \verb{vars = list(ADSL = <adsl object>)}.
It's recommended to include \code{TealDataset} or \code{TealDatasetConnector} objects to
the \code{vars} list to preserve reproducibility. Please note that \code{vars}
are included to this object as local \code{vars} and they cannot be modified
within another dataset.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-recreate"></a>}}
\if{latex}{\out{\hypertarget{method-recreate}{}}}
\subsection{Method \code{recreate()}}{
Recreate a dataset with its current attributes
This is useful way to have access to class initialize method basing on class object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCTealDataset$recreate(
  dataname = self$get_dataname(),
  x = self$get_raw_data(),
  keys = self$get_keys(),
  parent = self$get_parent(),
  code = private$code,
  label = self$get_dataset_label(),
  vars = list()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataname}}{(\code{character})\cr
A given name for the dataset it may not contain spaces}

\item{\code{x}}{(\code{data.frame})\cr}

\item{\code{keys}}{(\code{character})\cr
vector with primary keys}

\item{\code{parent}}{optional, (\code{character}) \cr
parent dataset name}

\item{\code{code}}{(\code{character})\cr
A character string defining the code needed to produce the data set in \code{x}}

\item{\code{label}}{(\code{character})\cr
Label to describe the dataset}

\item{\code{vars}}{(named \code{list})) \cr
In case when this object code depends on other \code{TealDataset} object(s) or
other constant value, this/these object(s) should be included as named
element(s) of the list. For example if this object code needs \code{ADSL}
object we should specify \verb{vars = list(ADSL = <adsl object>)}.
It's recommended to include \code{TealDataset} or \code{TealDatasetConnector} objects to
the \code{vars} list to preserve reproducibility. Please note that \code{vars}
are included to this object as local \code{vars} and they cannot be modified
within another dataset.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a new object of \code{CDISCTealDataset} class
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_attrs"></a>}}
\if{latex}{\out{\hypertarget{method-get_attrs}{}}}
\subsection{Method \code{get_attrs()}}{
Get all dataset attributes
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCTealDataset$get_attrs()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(named \code{list}) with dataset attributes
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_parent"></a>}}
\if{latex}{\out{\hypertarget{method-get_parent}{}}}
\subsection{Method \code{get_parent()}}{
Get parent dataset name
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCTealDataset$get_parent()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(\code{character}) indicating parent dataname
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_parent"></a>}}
\if{latex}{\out{\hypertarget{method-set_parent}{}}}
\subsection{Method \code{set_parent()}}{
Set parent dataset name
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCTealDataset$set_parent(parent)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{parent}}{(\code{character}) indicating parent dataname}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(\code{self}) invisibly for chaining
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCTealDataset$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
