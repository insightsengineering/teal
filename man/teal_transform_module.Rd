% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/teal_data_module.R
\name{teal_transform_module}
\alias{teal_transform_module}
\title{Data module for \code{teal} transformers.}
\usage{
teal_transform_module(ui, server, label = "transform module")
}
\arguments{
\item{ui}{(\verb{function(id)})
\code{shiny} module UI function; must only take \code{id} argument}

\item{server}{(\verb{function(id, data)})
\code{shiny} module server function; that takes \code{id} and \code{data} argument,
where the \code{id} is the module id and \code{data} is the reactive \code{teal_data} input.
The server function must return reactive expression containing \code{teal_data} object.}

\item{label}{(\code{character(1)}) Label of the module.}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

Create a \code{teal_data_module} object for custom transformation of data for pre-processing
before passing the data into the module.
}
\details{
\code{teal_transform_module} creates a \code{\link{teal_data_module}} object to transform data in a \code{teal}
application. This transformation happens after the data has passed through the filtering activity
in teal. The transformed data is then sent to the server of the \code{\link[=teal_module]{teal_module()}}.

See vignette \code{vignette("data-transform-as-shiny-module", package = "teal")} for more details.
}
\examples{
my_transformers <- list(
  teal_transform_module(
    label = "Custom transform for iris",
    ui = function(id) {
      ns <- NS(id)
      tags$div(
        numericInput(ns("n_rows"), "Subset n rows", value = 6, min = 1, max = 150, step = 1)
      )
    },
    server = function(id, data) {
      moduleServer(id, function(input, output, session) {
        reactive({
          within(data(),
            {
              iris <- head(iris, num_rows)
            },
            num_rows = input$n_rows
          )
        })
      })
    }
  )
)

}
