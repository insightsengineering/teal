% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/module_filter_manager.R
\name{module_filter_manager_modal}
\alias{module_filter_manager_modal}
\alias{filter_manager_modal_ui}
\alias{filter_manager_modal_srv}
\title{Filter manager modal}
\usage{
filter_manager_modal_ui(id)

filter_manager_modal_srv(id, filtered_data_list, filter)
}
\arguments{
\item{id}{(\code{character(1)})\cr
\code{shiny} module id.}

\item{filtered_data_list}{(\verb{named list})\cr
A list, possibly nested, of \code{FilteredData} objects.
Each \code{FilteredData} will be served to one module in the \code{teal} application.
The structure of the list must reflect the nesting of modules in tabs
and names of the list must be the same as labels of their respective modules.}

\item{filter}{(\code{teal_slices})\cr
Specification of initial filter. Filters can be specified using \code{\link[=teal_slices]{teal_slices()}}.
Old way of specifying filters through a list is deprecated and will be removed in the
next release. Please fix your applications to use \code{\link[=teal_slices]{teal_slices()}}.}
}
\description{
Opens modal containing the filter manager UI.
}
\examples{
fd1 <- teal.slice::init_filtered_data(list(iris = list(dataset = iris)))
fd2 <- teal.slice::init_filtered_data(
  list(iris = list(dataset = iris), mtcars = list(dataset = mtcars))
)
fd3 <- teal.slice::init_filtered_data(
  list(iris = list(dataset = iris), women = list(dataset = women))
)
filter <- teal_slices(
  teal.slice::teal_slice(dataname = "iris", varname = "Sepal.Length"),
  teal.slice::teal_slice(dataname = "iris", varname = "Species"),
  teal.slice::teal_slice(dataname = "mtcars", varname = "mpg"),
  teal.slice::teal_slice(dataname = "women", varname = "height"),
  mapping = list(
    module2 = c("mtcars mpg"),
    module3 = c("women height"),
    global_filters = "iris Species"
  )
)

app <- shinyApp(
  ui = fluidPage(
    teal:::filter_manager_modal_ui("manager")
  ),
  server = function(input, output, session) {
    teal:::filter_manager_modal_srv(
      "manager",
      filtered_data_list = list(module1 = fd1, module2 = fd2, module3 = fd3),
      filter = filter
    )
  }
)
if (interactive()) {
  runApp(app)
}

}
\keyword{internal}
