% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/module_filter_manager.R
\name{filter_manager_modal_ui}
\alias{filter_manager_modal_ui}
\alias{filter_manager_modal_srv}
\title{Filter manager modal}
\usage{
filter_manager_modal_ui(id)

filter_manager_modal_srv(id, filtered_data_list, filter)
}
\arguments{
\item{id}{(\code{character(1)})\cr
\code{shiny} module id.}

\item{filtered_data_list}{(\code{list} of \code{FilteredData})\cr
Names of the list should be the same as \code{teal_module$label}.}

\item{filter}{(\code{teal_slices})\cr
Specification of initial filter. Filters can be specified using \code{\link[=teal_filters]{teal_filters()}}.
Old way of specifying filters through a list is deprecated and will be removed in the
next release. Please fix your applications to use \code{\link[=teal_filters]{teal_filters()}}.}
}
\description{
Filter manager modal
}
\examples{
fd1 <- teal.slice::init_filtered_data(list(iris = list(dataset = iris)))
fd2 <- teal.slice::init_filtered_data(
  list(iris = list(dataset = iris), mtcars = list(dataset = mtcars))
)
fd3 <- teal.slice::init_filtered_data(
  list(iris = list(dataset = iris), women = list(dataset = women))
)
filter <- teal::teal_filters(
  teal.slice::filter_conf(dataname = "iris", varname = "Sepal.Length"),
  teal.slice::filter_conf(dataname = "iris", varname = "Species"),
  teal.slice::filter_conf(dataname = "mtcars", varname = "mpg"),
  teal.slice::filter_conf(dataname = "women", varname = "height"),
  mapping = list(
    module2 = c("mtcars mpg"),
    module3 = c("women height"),
    global_filters = "iris Species"
  )
)

if (interactive()) {
  shinyApp(
    ui = fluidPage(
      filter_manager_modal_ui("manager")
    ),
    server = function(input, output, session) {
      filter_manager_modal_srv(
        "manager",
        filtered_data_list = list(module1 = fd1, module2 = fd2, module3 = fd3),
        filter = filter
      )
    }
  )
}

}
