% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/module_validate.R
\name{module_validate_factory}
\alias{module_validate_factory}
\title{Factory to build validate modules}
\usage{
module_validate_factory(..., stop_on_first = TRUE, minimal_ui = FALSE)
}
\arguments{
\item{...}{(\code{function}) 1 or more \code{\link[shiny:moduleServer]{shiny::moduleServer()}} functions that
return a \code{\link[shiny:reactive]{shiny::reactive()}} with \code{TRUE} or a character string detailing
the excpetion.
It can be a named function, a character string or an anonymous function.}

\item{module_id}{(\code{character(1)}) The module id.}
}
\value{
A list with \code{ui} and \code{server} functions with code generated from the
arguments.
}
\description{
This function is used to create a module that validates the reactive data
passed to it.
}
\details{
Dynamically generation of an \code{ui} and \code{server} function that can be used
internally in teal or in a teal module.
}
\examples{

check_error <- function(x, skip_on_empty_message = TRUE) {
  moduleServer("check_error", function(input, output, session) {
    reactive({
      if (inherits(x(), "error") && (!skip_on_empty_message || !identical(x()$message, ""))) {
        c("Error detected", x()$message)
      } else {
        TRUE
      }
    })
  })
}

module_validate_factory(check_error)

check_numeric <- function(x, skip = FALSE) {
  moduleServer("check_numeric", function(input, output, session) {
    reactive(if (inherits(x(), numeric) || skip) TRUE else "Error: is not numeric")
  })
}

module_validate_factory(check_error, check_numeric)
}
