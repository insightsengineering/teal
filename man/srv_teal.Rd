% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/module_teal.R
\name{srv_teal}
\alias{srv_teal}
\title{Server function corresponding to teal}
\usage{
srv_teal(id, modules, raw_data, filter = list())
}
\arguments{
\item{id}{(\code{character})\cr
module id to embed it, if provided,
the server function must be called with \code{\link[shiny:moduleServer]{shiny::moduleServer()}};
See the vignette for an example. However, \code{\link[=ui_teal_with_splash]{ui_teal_with_splash()}}
is then preferred to this function.}

\item{modules}{(\code{list} or \code{teal_modules})\cr
nested list of \code{teal_modules} or \code{module} objects. See \code{\link[=modules]{modules()}} and \code{\link[=module]{module()}} for
more details.}

\item{raw_data}{(\code{reactive})\cr
returns the \code{TealData}, only evaluated once, \code{NULL} value is ignored}

\item{filter}{(\code{list})\cr
You can define filters that show when the app starts. List names should be
named according to datanames passed to the \code{data} argument.
In case of  data.frame` the list should be composed as follows:\preformatted{list(<dataname1> = list(<varname1> = ..., <varname2> = ...),
     <dataname2> = list(...),
     ...)

}

For example, filters for variable \code{Sepal.Length} in \code{iris} can be specified as
follows:\preformatted{list(iris = list(Sepal.Length = list(selected = c(5.0, 7.0))))
# or
list(iris = list(Sepal.Length = c(5.0, 7.0)))
}

In case developer would like to include \code{NA} and \code{Inf} values in  the
filtered dataset.\preformatted{list(Species = list(selected = c(5.0, 7.0), keep_na = TRUE, keep_inf = TRUE))
list(Species = c(c(5.0, 7.0), NA, Inf))
}

To initialize with specific variable filter with all values on start, one
can use\preformatted{list(Species = default_filter())
}

\code{filter} should be set with respect to the class of the column:
\itemize{
\item \code{numeric}: \code{selected} should be a two elements vector defining the range
of the filter.
\item \code{Date}: \code{selected} should be a two elements vector defining the date-range
of the filter
\item \code{POSIXct}: \code{selected} should be a two elements vector defining the
\code{datetime} range of the filter
\item \code{character} and \code{factor}: \code{selected} should be a vector of any length
defining initial values selected to filter.
\cr
\code{MultiAssayExperiment} \code{filter} should be specified in slightly different
way. Since \code{\link[MultiAssayExperiment:MultiAssayExperiment]{MultiAssayExperiment::MultiAssayExperiment()}} contains
patient data (\code{\link[SummarizedExperiment:SummarizedExperiment-class]{SummarizedExperiment::colData()}}) with list of experiments
(\code{\link[MultiAssayExperiment:ExperimentList]{MultiAssayExperiment::ExperimentList()}}), \code{filter} list should be named
in the following name.
\cr
}\preformatted{list(
  <MAE dataname> = list(
    subjects = list(<column in colData> = ..., <column in colData> = ...),
    <experiment name> = list(
      subset = list(<column in rowData of experiment> = ...,
                    <column in rowData of experiment> = ...),
      select = list(<column in colData of experiment> = ...,
                    <column in colData of experiment> = ...)
    )
  )
)
}

\code{filter} is ignored if the app is restored from a bookmarked state.}
}
\value{
\code{reactive} which returns the currently active module
}
\description{
It evaluates the \code{raw_data} (delayed data mechanism) and creates the
\code{datasets} object that is shared across modules.
Once it is ready and non-\code{NULL}, the splash screen is replaced by the
main teal UI that depends on the data.
The currently active tab is tracked and the right filter panel
updates the displayed datasets to filter for according to the active datanames
of the tab.
The initially displayed filter states can be provided, bookmarked filter
states always take precedence over them.
}
\details{
For more doc, see \link{ui_teal}.
}
\keyword{internal}
