% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/is_pulled.R
\name{is_pulled}
\alias{is_pulled}
\alias{is_pulled.DatasetConnector}
\alias{is_pulled.Dataset}
\alias{is_pulled.DataAbstract}
\title{Is pulled}
\usage{
is_pulled(x)

\method{is_pulled}{DatasetConnector}(x)

\method{is_pulled}{Dataset}(x)

\method{is_pulled}{DataAbstract}(x)
}
\arguments{
\item{x}{(\code{object}) of class \code{\link{DatasetConnector}}, \code{\link{Dataset}} or \code{\link{DataAbstract}}}
}
\value{
(\code{logical}) \code{TRUE} if connector has been already pulled, else \code{FALSE}.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
S3 method to determine if dataset is pulled (loaded).
}
\examples{
# DatasetConnector --------
library(scda)
pull_fun_adsl <- callable_function(
  function() {synthetic_cdisc_data("latest")$adsl}
)
x <- dataset_connector("ADSL", pull_fun_adsl)

is_pulled(x)

load_dataset(x)
is_pulled(x)
# Dataset --------
x <- dataset(
  dataname = "XY",
  x = data.frame(x = c(1, 2), y = c("a", "b"), stringsAsFactors = FALSE),
  keys = "y",
  code = "XY <- data.frame(x = c(1, 2), y = c('aa', 'bb'),
                           stringsAsFactors = FALSE)"
)

is_pulled(x)
# RelationalData --------
library(scda)
x1 <- dataset(
  x = synthetic_cdisc_data("latest")$adsl,
  dataname = "ADSL",
  keys = get_cdisc_keys("ADSL"),
  code = "ADSL <- synthetic_cdisc_data(\"latest\")$adsl",
  label = "ADTTE dataset"
)

x2 <- dataset(
  x = synthetic_cdisc_data("latest")$adtte,
  dataname = "ADTTE",
  keys = get_cdisc_keys("ADTTE"),
  code = "ADTTE <- synthetic_cdisc_data(\"latest\")$adtte",
  label = "ADTTE dataset"
)

rd <- teal_data(x1, x2)
is_pulled(rd)

# RelationalDataConnector --------
library(scda)
adsl_cf <- callable_function(
  function() {synthetic_cdisc_data("latest")$adsl}
)
adsl <- cdisc_dataset_connector(dataname = "ADSL",
                                pull_callable = adsl_cf,
                                keys = get_cdisc_keys("ADSL"))

new_cf <- callable_function(function(x) {x$NEW <- 1:nrow(x); x})
new_cf$set_args(list(x = as.name("x")))
new <- cdisc_dataset_connector(
  dataname = "NEW",
  pull_callable = new_cf,
  keys = get_cdisc_keys("ADSL"),
  vars = list(x = adsl)
)

rdc <- cdisc_data(adsl, new)

is_pulled(rdc)
\dontrun{
load_datasets(rdc)
is_pulled(rdc)
}
}
