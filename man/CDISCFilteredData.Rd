% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CDISCFilteredData.R
\docType{class}
\name{CDISCFilteredData}
\alias{CDISCFilteredData}
\title{Class to encapsulate relational filtered datasets with its parents.}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
}
\details{
The \code{CDISCFilteredData} class implements logic to filter a relational
dataset by inheriting from \code{FilteredData}.
A dataset can have up to one parent dataset. Rows are identified by the foreign
key and only those rows that appear in the parent dataset are kept in the filtered
dataset.

The relational model is attached to the data. When \code{set_data} is called with the
data, its \code{keys} attribute has the following elements:
\itemize{
\item \code{primary}: columns based on which unique rows are counted
\item \code{parent}: parent dataset based on which the dataset is filtered (via \code{inner_join})
\item \code{foreign}: keys to join on when filtering with parent dataset
}

The teal UI works with objects of class \code{FilteredData} which may mix CDISC and other
data (e.g. \code{iris}).

It is not too difficult to make this class generalize to more than one parent dataset,
provided each dataset then contains information about its parents together with the
shared keys with each of them.
}
\examples{
library(scda)
library(shiny)

ADSL <- synthetic_cdisc_data("latest")$adsl
ADTTE <- synthetic_cdisc_data("latest")$adtte

adsl <- cdisc_dataset("ADSL", ADSL)
adtte <- cdisc_dataset("ADTTE", ADTTE)
data <- cdisc_data(adsl, adtte)
datasets <- teal:::CDISCFilteredData$new()

# to avoid using isolate(), you can provide a default isolate context by calling
# options(shiny.suppressMissingContextError = TRUE) #nolint
# don't forget to deactivate this option at the end
# options(shiny.suppressMissingContextError = FALSE) #nolint

# setting the data
isolate({
  datasets$set_dataset(adsl,  data$get_join_keys()$get(dataset_1 = "ADSL"))
  datasets$set_dataset(adtte, data$get_join_keys()$get(dataset_1 = "ADTTE"))
  datasets$set_join_keys(join_keys())
 })


isolate({
  datasets$datanames()

  # number observations and subjects of filtered/non-filtered dataset
  datasets$get_filter_overview("ADSL")

  print(datasets$get_call("ADSL"))
  print(datasets$get_call("ADTTE"))

  df <- datasets$get_data("ADSL", filtered = FALSE)
  print(df)
 })


filter_state_adtte <- teal:::init_filter_state(
  ADTTE$PARAMCD,
  varname = "PARAMCD",
  input_dataname = as.name("ADTTE"),
  extract_type = "list"
)
filter_state_adtte$set_selected("OS")

states <- datasets$get_filtered_datasets("ADTTE")$get_filter_states(1)
states$queue_push(filter_state_adtte, queue_index = 1L, element_id = "PARAMCD")

isolate(datasets$get_call("ADTTE"))


filter_state_adsl <- teal:::init_filter_state(
  ADSL$SEX,
  varname = "SEX",
  input_dataname = as.name("SEX"),
  extract_type = "list"
)
filter_state_adsl$set_selected("F")

states <- datasets$get_filtered_datasets("ADSL")$get_filter_states("filter")
states$queue_push(filter_state_adsl, queue_index = 1L, element_id = "SEX")

isolate(datasets$get_call("ADSL"))
isolate(datasets$get_call("ADTTE"))
}
\seealso{
\code{FilteredData} class
}
\section{Super class}{
\code{\link[teal:FilteredData]{teal::FilteredData}} -> \code{CDISCFilteredData}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{CDISCFilteredData$new()}}
\item \href{#method-datanames}{\code{CDISCFilteredData$datanames()}}
\item \href{#method-get_call}{\code{CDISCFilteredData$get_call()}}
\item \href{#method-get_filterable_datanames}{\code{CDISCFilteredData$get_filterable_datanames()}}
\item \href{#method-get_parentname}{\code{CDISCFilteredData$get_parentname()}}
\item \href{#method-set_dataset}{\code{CDISCFilteredData$set_dataset()}}
\item \href{#method-clone}{\code{CDISCFilteredData$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredData" data-id="get_bookmark_state">}\href{../../teal/html/FilteredData.html#method-get_bookmark_state}{\code{teal::FilteredData$get_bookmark_state()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredData" data-id="get_code">}\href{../../teal/html/FilteredData.html#method-get_code}{\code{teal::FilteredData$get_code()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredData" data-id="get_data">}\href{../../teal/html/FilteredData.html#method-get_data}{\code{teal::FilteredData$get_data()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredData" data-id="get_data_attr">}\href{../../teal/html/FilteredData.html#method-get_data_attr}{\code{teal::FilteredData$get_data_attr()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredData" data-id="get_datalabel">}\href{../../teal/html/FilteredData.html#method-get_datalabel}{\code{teal::FilteredData$get_datalabel()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredData" data-id="get_filter_overview">}\href{../../teal/html/FilteredData.html#method-get_filter_overview}{\code{teal::FilteredData$get_filter_overview()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredData" data-id="get_filterable_varnames">}\href{../../teal/html/FilteredData.html#method-get_filterable_varnames}{\code{teal::FilteredData$get_filterable_varnames()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredData" data-id="get_filtered_datasets">}\href{../../teal/html/FilteredData.html#method-get_filtered_datasets}{\code{teal::FilteredData$get_filtered_datasets()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredData" data-id="get_join_keys">}\href{../../teal/html/FilteredData.html#method-get_join_keys}{\code{teal::FilteredData$get_join_keys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredData" data-id="get_keys">}\href{../../teal/html/FilteredData.html#method-get_keys}{\code{teal::FilteredData$get_keys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredData" data-id="get_varlabels">}\href{../../teal/html/FilteredData.html#method-get_varlabels}{\code{teal::FilteredData$get_varlabels()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredData" data-id="get_varnames">}\href{../../teal/html/FilteredData.html#method-get_varnames}{\code{teal::FilteredData$get_varnames()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredData" data-id="handle_active_datanames">}\href{../../teal/html/FilteredData.html#method-handle_active_datanames}{\code{teal::FilteredData$handle_active_datanames()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredData" data-id="restore_state_from_bookmark">}\href{../../teal/html/FilteredData.html#method-restore_state_from_bookmark}{\code{teal::FilteredData$restore_state_from_bookmark()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredData" data-id="set_bookmark_state">}\href{../../teal/html/FilteredData.html#method-set_bookmark_state}{\code{teal::FilteredData$set_bookmark_state()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredData" data-id="set_code">}\href{../../teal/html/FilteredData.html#method-set_code}{\code{teal::FilteredData$set_code()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredData" data-id="set_join_keys">}\href{../../teal/html/FilteredData.html#method-set_join_keys}{\code{teal::FilteredData$set_join_keys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredData" data-id="srv_filter_overview">}\href{../../teal/html/FilteredData.html#method-srv_filter_overview}{\code{teal::FilteredData$srv_filter_overview()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredData" data-id="srv_filter_panel">}\href{../../teal/html/FilteredData.html#method-srv_filter_panel}{\code{teal::FilteredData$srv_filter_panel()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredData" data-id="ui_filter_overview">}\href{../../teal/html/FilteredData.html#method-ui_filter_overview}{\code{teal::FilteredData$ui_filter_overview()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredData" data-id="ui_filter_panel">}\href{../../teal/html/FilteredData.html#method-ui_filter_panel}{\code{teal::FilteredData$ui_filter_panel()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialize a \code{CDISCFilteredData} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCFilteredData$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-datanames"></a>}}
\if{latex}{\out{\hypertarget{method-datanames}{}}}
\subsection{Method \code{datanames()}}{
Get datanames

The datanames are returned in the order in which they must be
evaluated (in case of dependencies).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCFilteredData$datanames()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(\code{character} vector) of datanames
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_call"></a>}}
\if{latex}{\out{\hypertarget{method-get_call}{}}}
\subsection{Method \code{get_call()}}{
Returns the filter \code{call} to filter a single dataset including the \code{inner_join}
with its parent dataset. It assumes that the filtered datasets it depends
on are available.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCFilteredData$get_call(dataname)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataname}}{(\code{character}) name of the dataset}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(\code{call} or \code{list} of calls ) to filter dataset
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_filterable_datanames"></a>}}
\if{latex}{\out{\hypertarget{method-get_filterable_datanames}{}}}
\subsection{Method \code{get_filterable_datanames()}}{
Get names of datasets available for filtering
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCFilteredData$get_filterable_datanames(dataname)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataname}}{(\code{character} vector) names of the dataset}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(\code{character} vector) of dataset names
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_parentname"></a>}}
\if{latex}{\out{\hypertarget{method-get_parentname}{}}}
\subsection{Method \code{get_parentname()}}{
Get parent dataset name
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCFilteredData$get_parentname(dataname)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataname}}{(\code{character}) name of the dataset}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(\code{character}) name of parent dataset
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_dataset"></a>}}
\if{latex}{\out{\hypertarget{method-set_dataset}{}}}
\subsection{Method \code{set_dataset()}}{
Add dataset

Add dataset and preserve all attributes attached to this object.
Technically \code{set_dataset} created \code{FilteredDataset} which keeps
\code{dataset} for filtering purpose.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCFilteredData$set_dataset(dataset, join_key_set = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataset}}{(\code{Dataset})\cr
object containing data and attributes.}

\item{\code{join_key_set}}{(\code{JoinKeySet})\cr
keys to merge this \code{dataset} to the other datasets}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(\code{self}) object of this class
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCFilteredData$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
