% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FilteredDataset.R
\name{MAEFilteredDataset}
\alias{MAEFilteredDataset}
\title{\code{MAEFilteredDataset} R6 class}
\description{
\code{MAEFilteredDataset} R6 class

\code{MAEFilteredDataset} R6 class
}
\section{Super class}{
\code{\link[teal:FilteredDataset]{teal::FilteredDataset}} -> \code{MAEFilteredDataset}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{MAEFilteredDataset$new()}}
\item \href{#method-get_call}{\code{MAEFilteredDataset$get_call()}}
\item \href{#method-get_filter_overview_info}{\code{MAEFilteredDataset$get_filter_overview_info()}}
\item \href{#method-set_bookmark_state}{\code{MAEFilteredDataset$set_bookmark_state()}}
\item \href{#method-ui_add_filter_state}{\code{MAEFilteredDataset$ui_add_filter_state()}}
\item \href{#method-srv_add_filter_state}{\code{MAEFilteredDataset$srv_add_filter_state()}}
\item \href{#method-clone}{\code{MAEFilteredDataset$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredDataset" data-id="add_to_eval_env">}\href{../../teal/html/FilteredDataset.html#method-add_to_eval_env}{\code{teal::FilteredDataset$add_to_eval_env()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredDataset" data-id="get_data">}\href{../../teal/html/FilteredDataset.html#method-get_data}{\code{teal::FilteredDataset$get_data()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredDataset" data-id="get_data_reactive">}\href{../../teal/html/FilteredDataset.html#method-get_data_reactive}{\code{teal::FilteredDataset$get_data_reactive()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredDataset" data-id="get_dataname">}\href{../../teal/html/FilteredDataset.html#method-get_dataname}{\code{teal::FilteredDataset$get_dataname()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredDataset" data-id="get_dataset">}\href{../../teal/html/FilteredDataset.html#method-get_dataset}{\code{teal::FilteredDataset$get_dataset()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredDataset" data-id="get_filter_states">}\href{../../teal/html/FilteredDataset.html#method-get_filter_states}{\code{teal::FilteredDataset$get_filter_states()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredDataset" data-id="get_filtered_dataname">}\href{../../teal/html/FilteredDataset.html#method-get_filtered_dataname}{\code{teal::FilteredDataset$get_filtered_dataname()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredDataset" data-id="get_hash">}\href{../../teal/html/FilteredDataset.html#method-get_hash}{\code{teal::FilteredDataset$get_hash()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredDataset" data-id="get_join_keys">}\href{../../teal/html/FilteredDataset.html#method-get_join_keys}{\code{teal::FilteredDataset$get_join_keys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredDataset" data-id="get_keys">}\href{../../teal/html/FilteredDataset.html#method-get_keys}{\code{teal::FilteredDataset$get_keys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredDataset" data-id="get_varlabels">}\href{../../teal/html/FilteredDataset.html#method-get_varlabels}{\code{teal::FilteredDataset$get_varlabels()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredDataset" data-id="get_varnames">}\href{../../teal/html/FilteredDataset.html#method-get_varnames}{\code{teal::FilteredDataset$get_varnames()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredDataset" data-id="queues_empty">}\href{../../teal/html/FilteredDataset.html#method-queues_empty}{\code{teal::FilteredDataset$queues_empty()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredDataset" data-id="server">}\href{../../teal/html/FilteredDataset.html#method-server}{\code{teal::FilteredDataset$server()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="FilteredDataset" data-id="ui">}\href{../../teal/html/FilteredDataset.html#method-ui}{\code{teal::FilteredDataset$ui()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialize \code{MAEFilteredDataset} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEFilteredDataset$new(dataset)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataset}}{(\code{MAEDataset})\cr
single dataset for which filters are rendered}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_call"></a>}}
\if{latex}{\out{\hypertarget{method-get_call}{}}}
\subsection{Method \code{get_call()}}{
Get filter expression

This functions returns filter calls equivalent to selected items
within each of \code{filter_states}. Configuration of the calls is constant and
depends on \code{filter_states} type and order which are set during initialization.
This class contains multiple \code{FilterStates}:
\itemize{
\item{\code{colData(dataset)}}{for this object single \code{MAEFilterStates}
which returns \code{subsetByColData} call}
\item{experiments}{for each experiment single \code{SEFilterStates} and
\code{FilterStates_matrix}, both returns \code{subset} call}
}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEFilteredDataset$get_call()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
filter \code{call} or \code{list} of filter calls
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_filter_overview_info"></a>}}
\if{latex}{\out{\hypertarget{method-get_filter_overview_info}{}}}
\subsection{Method \code{get_filter_overview_info()}}{
Get filter overview rows of a dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEFilteredDataset$get_filter_overview_info()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(\code{matrix}) matrix of observations and subjects
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_bookmark_state"></a>}}
\if{latex}{\out{\hypertarget{method-set_bookmark_state}{}}}
\subsection{Method \code{set_bookmark_state()}}{
Set bookmark state
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEFilteredDataset$set_bookmark_state(id, state)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{(\code{character(1)})\cr
an ID string that corresponds with the ID used to call the module's UI function.}

\item{\code{state}}{(\verb{named list})\cr
names of the list should correspond to the names of the initialized \code{FilterStates}
kept in \code{private$filter_states}. For this object they are \code{"subjects"} and
names of the experiments. Values of initial state should be relevant
to the referred column.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{moduleServer} function which returns \code{NULL}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ui_add_filter_state"></a>}}
\if{latex}{\out{\hypertarget{method-ui_add_filter_state}{}}}
\subsection{Method \code{ui_add_filter_state()}}{
UI module to add filter variable for this dataset

UI module to add filter variable for this dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEFilteredDataset$ui_add_filter_state(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{(\code{character(1)})\cr
identifier of the element - preferably containing dataset name}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
function - shiny UI module
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-srv_add_filter_state"></a>}}
\if{latex}{\out{\hypertarget{method-srv_add_filter_state}{}}}
\subsection{Method \code{srv_add_filter_state()}}{
Server module to add filter variable for this dataset

Server module to add filter variable for this dataset.
For this class \code{srv_add_filter_state} calls multiple modules
of the same name from \code{FilterStates} as \code{MAEFilteredDataset}
contains one \code{FilterStates} object for \code{colData} and one for each
experiment.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEFilteredDataset$srv_add_filter_state(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{(\code{character(1)})\cr
an ID string that corresponds with the ID used to call the module's UI function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{moduleServer} function which returns \code{NULL}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEFilteredDataset$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
