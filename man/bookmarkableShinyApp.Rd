% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/init.R
\name{bookmarkableShinyApp}
\alias{bookmarkableShinyApp}
\title{Make a Shiny UI function bookmarkable}
\usage{
bookmarkableShinyApp(ui, server, ...)
}
\arguments{
\item{ui}{\verb{function or shiny.tag} Shiny UI; either a
\code{shiny.tag} or a function with no argument or
one argument (\code{request})}

\item{server}{\code{function} Shiny server function}

\item{...}{additional arguments to \code{shinyApp}}
}
\value{
\code{shinyApp} value
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}}

This function is deprecated and will be removed in a future release of \code{teal}.

This is a customization of \code{shinyApp}.

To be bookmarkable, the Shiny UI function must have an
argument \code{request}. This function ensures this.

When \code{ui} is a function, it passes the following to \code{shinyApp}

\if{html}{\out{<div class="sourceCode">}}\preformatted{app <- teal::init(....)
ui <- app$ui
ui_new <- function(request) \{
  ui() # or just `ui` when ui is already evaluated, e.g. `shiny.tag`
\}
}\if{html}{\out{</div>}}

If no bookmarking is needed for teal apps, then you can also call
\code{shinyApp(ui = app$ui, server = app$server)}, where \code{app} is returned
by \code{init()}.

**For Developers: **
The reason you cannot
call \code{shinyApp(ui = app$ui, server = app$server)} without parentheses is
that \code{app$ui} has an \code{id} argument with a default value which makes it
possible to be added into modules. \code{shinyApp} thinks that this is the request
argument which is needed for bookmarking. This avoids it.

We guarantee that anything that can be run with \code{shinyApp} can be replaced
by a call to this function without any changes.
}
