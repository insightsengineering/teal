% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/teal_filters.R
\name{teal_filters}
\alias{teal_filters}
\title{Filter settings for teal applications}
\usage{
teal_filters(
  ...,
  exclude_varnames = NULL,
  include_varnames = NULL,
  count_type = NULL,
  module_add = TRUE,
  mapping = list(),
  module_specific = length(mapping) > 0
)
}
\arguments{
\item{...}{for \code{filter_var} and \code{filter_expr} any number of additional fields given as \code{name:value} pairs\cr
for \code{filter_settings} any number of \code{teal_slice} objects\cr
for other functions arguments passed to other methods}

\item{include_varnames, exclude_varnames}{\verb{named list}s of \code{character} vectors where list names
match names of data sets and vector elements match variable names in respective data sets;
specify which variables are allowed to be filtered; see \code{Details}}

\item{count_type}{\code{character(1)} string specifying how observations are tallied by these filter states.
Possible options:
\itemize{
\item \code{"all"} to have counts of single \code{FilterState} to show number of observation in filtered
and unfiltered dataset.
\item \code{"none"} to have counts of single \code{FilterState} to show unfiltered number only.
}}

\item{module_add}{\code{logical(1)} logical flag specifying whether the user will be able to add new filters}

\item{mapping}{(\verb{named list})\cr
Each element of the list should contain character vector of \code{teal_slices} \code{id} (see
\code{\link[teal.slice:teal_slice]{teal.slice::filter_conf()}}). Filters referred in list elements will be set on the startup of a
\code{teal} application.
Names of the list should correspond to \code{teal_module} \code{label} set in \code{\link[=module]{module()}} function.}

\item{module_specific}{(\code{logical(1)})\cr
\itemize{
\item \code{TRUE} when filter panel should be module-specific. All modules can have different set
of filters specified - see \code{mapping} argument.
\item \code{FALSE} when one filter panel needed to all modules. All filters will be shared
by all modules.
}}
}
\description{
Filter settings for teal applications
}
\examples{
filter <- teal::teal_filters(
  teal.slice::filter_conf(dataname = "iris", varname = "Species", id = "species"),
  teal.slice::filter_conf(dataname = "iris", varname = "Sepal.Length", id = "sepal_length"),
  teal.slice::filter_conf(
    dataname = "iris", id = "long_petals", title = "Long petals", expr = "Petal.Length > 5"
  ),
  teal.slice::filter_conf(dataname = "mtcars", varname = "mpg", id = "mtcars_mpg"),
  mapping = list(
    module1 = c("species", "sepal_length"),
    module2 = c("mtcars_mpg"),
    global_filters = "long_petals"
  )
)

app <- teal::init(
  modules = list(
    module("module1"),
    module("module2")
  ),
  data = list(iris, mtcars),
  filter = filter
)

if (interactive()) {
  shiny::runApp(app)
}

}
