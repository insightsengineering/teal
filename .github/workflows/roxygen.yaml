name: Roxygen

on:
  push:
    branches:
      - main
      - pre-release
  pull_request:

jobs:
  man-pages:
    name: Manual pages check
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/insightsengineering/rstudio_4.1.0_bioc_3.13:latest

    steps:
      - name: Gather info from PR
        uses: actions/github-script@v5
        id: get-pr
        if: github.event_name == 'pull_request'
        with:
          script: |
            const request = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            }
            core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
            try {
              const result = await github.rest.pulls.get(request)
              return result.data
            } catch (err) {
              core.setFailed(`Request failed with error ${err}`)
            }

      - name: Checkout repo during PR
        uses: actions/checkout@v2
        if: github.event_name == 'pull_request'
        with:
          repository: ${{ fromJSON(steps.get-pr.outputs.result).head.repo.full_name }}
          ref: ${{ fromJSON(steps.get-pr.outputs.result).head.ref }}
          path: ${{ github.event.repository.name }}

      - name: Checkout repo from push
        uses: actions/checkout@v2
        if: github.event_name == 'push'
        with:
          path: ${{ github.event.repository.name }}

      - name: Run Staged dependencies
        uses: insightsengineering/staged-dependencies-action@v1
        env:
          GITHUB_PAT: ${{ secrets.REPO_GITHUB_TOKEN }}
          SD_REPO_PATH: ${{ github.event.repository.name }}
          SD_ENABLE_CHECK: "false"

      - name: Generate man pages
        run: |
          setwd("${{ github.event.repository.name }}")
          roxygen2::roxygenize('.', roclets = c('rd', 'collate', 'namespace'))
        shell: Rscript {0}

      - name: Roxygen check
        run: |
          cd ${{ github.event.repository.name }}
          git status -s
          if [[ -n `git status -s | grep man` ]]
          then
            ROXYGEN_VERSION="$(Rscript -e 'packageVersion("roxygen2")' | awk '{print $NF}')"
            echo "üôà Manuals are not up-to-date with roxygen comments!"
            echo "üíª Please rerun the following command on your workstation and push your changes"
            echo "--------------------------------------------------------------------"
            echo "roxygen2::roxygenize('.', roclets = c('rd', 'collate', 'namespace'))"
            echo "--------------------------------------------------------------------"
            echo "‚Ñπ roxygen2 version that was used in this workflow: $ROXYGEN_VERSION"
            echo "üôè Please ensure that the 'RoxygenNote' field in the DESCRIPTION file matches this version"
            exit 1
          else
               echo "üíö Manuals are up-to-date with roxygen comments"
          fi
        shell: bash

