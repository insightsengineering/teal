name: Pkgdown Docs

on:
  push:
    tags:
      - "v*"
    branches:
      - main
  pull_request:
    branches:
      - main
      - pre-release
    paths:
      - inst/templates/**
      - _pkgdown.yml
      - DESCRIPTION
      - '**.md'
      - man/**
      - LICENSE.*
      - NAMESPACE

jobs:
  pkgdown:
    name: Generate
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/insightsengineering/rstudio_4.1.0_bioc_3.13:latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Gather info from PR
        uses: actions/github-script@v5
        id: get-pr
        if: github.event_name == 'pull_request'
        with:
          script: |
            const request = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            }
            core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
            try {
              const result = await github.rest.pulls.get(request)
              return result.data
            } catch (err) {
              core.setFailed(`Request failed with error ${err}`)
            }

      - name: Checkout repo during PR
        uses: actions/checkout@v2
        if: github.event_name == 'pull_request'
        with:
          repository: ${{ fromJSON(steps.get-pr.outputs.result).head.repo.full_name }}
          ref: ${{ fromJSON(steps.get-pr.outputs.result).head.ref }}
          path: ${{ github.event.repository.name }}

      - name: Checkout repo from push
        uses: actions/checkout@v2
        if: github.event_name == 'push'
        with:
          path: ${{ github.event.repository.name }}

      - name: Run Staged dependencies
        uses: insightsengineering/staged-dependencies-action@v1
        env:
          GITHUB_PAT: ${{ secrets.REPO_GITHUB_TOKEN }}
          SD_REPO_PATH: ${{ github.event.repository.name }}
          SD_ENABLE_CHECK: "false"

      - name: Install R package
        run: R CMD INSTALL ${{ github.event.repository.name }}
        shell: bash

      - name: Build docs
        run: |
          options(repos = c(CRAN = "https://cloud.r-project.org/"))
          "pkgdown" %in% installed.packages() || install.packages("pkgdown", upgrade = "never")
          logfile <- "pkgdown_${{ github.event.repository.name }}.log"
          con <- file(logfile)
          sink(con, append = TRUE, split = TRUE)
          sink(con, append = TRUE, type = "message")
          pkgdown::build_site("${{ github.event.repository.name }}", devel = TRUE)
          sink()
          sink(type = "message")
          logs <- readLines(logfile)
          warnings_marker <- grep("Warning message", logs)
          if (length(warnings_marker) > 0) {
            cat("‚ö† One or more warnings were generated during the pkgdown build:\n")
            cat(logs[warnings_marker[[1]]:length(logs)], sep = "\n")
            stop("Please üôè fix the warnings show below this message üëá")
          }
        shell: Rscript {0}

      - name: Create artifacts
        run: |
          pushd ${{ github.event.repository.name }}/docs/
          zip -r9 $OLDPWD/pkgdown.zip *
          popd
        shell: bash

      - name: Upload docs for review
        if: github.ref != 'refs/heads/main'
        uses: actions/upload-artifact@v2
        with:
          name: pkgdown.zip
          path: pkgdown.zip

      - name: Publish docs
        if: github.ref == 'refs/heads/main' # Only after merge or push to main
        run: |
          cd ${{ github.event.repository.name }}
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          Rscript -e 'pkgdown::deploy_to_branch(new_process = FALSE)'

  upload-release-assets:
    name: Upload documentation assets
    needs: pkgdown
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Wait for release to succeed
        timeout-minutes: 2
        uses: lewagon/wait-on-check-action@v1.1.1
        with:
          ref: "${{ github.ref }}"
          check-name: 'Release'
          repo-token: ${{ secrets.REPO_GITHUB_TOKEN }}
          wait-interval: 10
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: pkgdown.zip
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.REPO_GITHUB_TOKEN }}
          file: pkgdown.zip
          asset_name: pkgdown.zip
          tag: ${{ github.ref }}
          overwrite: false
