name: Staged Dependency Yaml Consistency Check

on:
  push:
    branches:
      - main
      - pre-release
  pull_request:

jobs:
  staged_deps_check :
    name: Staged Dependencies Yaml Check
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/insightsengineering/rstudio_4.1.0_bioc_3.13:latest

    steps:
      - name: Gather info from PR
        uses: actions/github-script@v4
        id: get-pr
        if: github.event_name == 'pull_request'
        with:
          script: |
            const request = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            }
            core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
            try {
              const result = await github.pulls.get(request)
              return result.data
            } catch (err) {
              core.setFailed(`Request failed with error ${err}`)
            }

      - name: Install remotes R package if needed
        run: |
           options(repos = c(CRAN = "https://cloud.r-project.org/"))
           ncores <- parallel::detectCores(all.tests = FALSE, logical = TRUE)
           cat(paste("\n\nnumber of cores detected:", ncores, "\n\n"))
           if (!require("remotes")) install.packages("remotes", upgrade = "never", Ncpus = ncores)
        shell: Rscript {0}
        env:
          GITHUB_PAT: ${{ secrets.REPO_GITHUB_TOKEN }}

      - name: Checkout repo during PR
        uses: actions/checkout@v2
        if: github.event_name == 'pull_request'
        with:
          repository: ${{ fromJSON(steps.get-pr.outputs.result).head.repo.full_name }}
          ref: ${{ fromJSON(steps.get-pr.outputs.result).head.ref }}
          path: ${{ github.event.repository.name }}

      - name: Checkout repo from push
        uses: actions/checkout@v2
        if: github.event_name == 'push'
        with:
          path: ${{ github.event.repository.name }}

      - name: Check if staged dep yaml files are consistent
        run: |
          setwd("${{ github.event.repository.name }}")
          options(repos = c(CRAN = "https://cloud.r-project.org/"))
          ncores <- parallel::detectCores(all.tests = FALSE, logical = TRUE)
          cat(paste("\n\nnumber of cores detected:", ncores, "\n\n"))
          if (file.exists("renv.lock")) {
            renv::restore()
          } else {
            remotes::install_deps(dependencies = TRUE, upgrade = "never", Ncpus = ncores)
          }
          if (file.exists("staged_dependencies.yaml")) {
            cat("\nInstall Staged Dependencies\n\n\n")
            if (!require("staged.dependencies")) {
              remotes::install_github("openpharma/staged.dependencies", ref = "v0.2.2", Ncpus = ncores, upgrade = "never")
            }
            cat("\nCalculating Staged Dependency Table...\n\n")
            x <- staged.dependencies::dependency_table()
            print(x, width = 120)
            staged.dependencies::check_yamls_consistent(x, skip_if_missing_yaml = TRUE)
          }
        shell: Rscript {0}
        env:
          GITHUB_PAT: ${{ secrets.REPO_GITHUB_TOKEN }}
