<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="init" timestamp="2025-07-01T10:45:37Z" hostname="2ecc0feba4c8" tests="14" skipped="0" failures="0" errors="0" time="0.631">
    <testcase time="0.0650000000000001" classname="init" name="init_data_accepts_teal_data_object"/>
    <testcase time="0.076" classname="init" name="init_data_accepts_teal_data_module"/>
    <testcase time="0.113" classname="init" name="init_modules_accepts_a_teal_modules_object"/>
    <testcase time="0.035" classname="init" name="init_modules_accepts_a_list_of_teal_module_elements"/>
    <testcase time="0.036" classname="init" name="init_modules_accepts_a_teal_module_object"/>
    <testcase time="0.0599999999999999" classname="init" name="init_filter_accepts_teal_slices_"/>
    <testcase time="0.013" classname="init" name="init_filter_accepts_teal_slices_"/>
    <testcase time="0.038" classname="init" name="init_throws_when_an_empty_data_is_used"/>
    <testcase time="0.034" classname="init" name="init_throws_warning_when_datanames_in_modules_incompatible_w_datanames_in_data_and_there_is_no_transformators"/>
    <testcase time="0.032" classname="init" name="init_throws_warning_when_datanames_in_modules_incompatible_w_datanames_in_data_and_there_is_no_transformators"/>
    <testcase time="0.0329999999999999" classname="init" name="init_doesn_t_throw_warning_when_datanames_in_modules_incompatible_w_datanames_in_data_and_there_are_transformators"/>
    <testcase time="0.03" classname="init" name="_all_"/>
    <testcase time="0.0309999999999999" classname="init" name="_.raw_data_and_all_"/>
    <testcase time="0.0350000000000001" classname="init" name="init_throws_when_dataname_in_filter_incompatible_w_datanames_in_data"/>
  </testsuite>
  <testsuite name="module_session_info" timestamp="2025-07-01T10:45:38Z" hostname="2ecc0feba4c8" tests="3" skipped="0" failures="0" errors="0" time="18.009">
    <testcase time="17.988" classname="module_session_info" name="creation_process_is_invoked_for_teal.lockfile.mode_enabled_and_snapshot_is_copied_to_teal_app.lock_and_removed_after_session_ended"/>
    <testcase time="0.00499999999999901" classname="module_session_info" name="creation_process_is_invoked_for_teal.lockfile.mode_enabled_and_snapshot_is_copied_to_teal_app.lock_and_removed_after_session_ended"/>
    <testcase time="0.0160000000000018" classname="module_session_info" name="creation_process_is_not_invoked_for_teal.lockfile.mode_disabled_"/>
  </testsuite>
  <testsuite name="module_teal" timestamp="2025-07-01T10:45:56Z" hostname="2ecc0feba4c8" tests="188" skipped="4" failures="23" errors="52" time="22.135">
    <testcase time="0.219000000000001" classname="module_teal" name="accepts_data_to_be_teal_data"/>
    <testcase time="0.097999999999999" classname="module_teal" name="accepts_data_to_be_teal_data_module_returning_reactive_teal_data"/>
    <testcase time="0.190999999999999" classname="module_teal" name="accepts_data_to_a_reactive_or_reactiveVal_teal_data"/>
    <testcase time="0.0620000000000012" classname="module_teal" name="accepts_data_to_a_reactive_or_reactiveVal_teal_data"/>
    <testcase time="0.0560000000000009" classname="module_teal" name="fails_when_data_is_not_teal_data_or_teal_data_module"/>
    <testcase time="0.0269999999999975" classname="module_teal" name="app_fails_when_teal_data_module_doesn_t_return_a_reactive"/>
    <testcase time="0.0869999999999997" classname="module_teal" name="are_not_called_by_default"/>
    <testcase time="0.00300000000000011" classname="module_teal" name="are_not_called_by_default"/>
    <testcase time="0.144000000000002" classname="module_teal" name="are_called_once_their_tab_is_selected_and_data_is_teal_data_"/>
    <testcase time="0.0259999999999998" classname="module_teal" name="are_called_once_their_tab_is_selected_and_data_is_teal_data_">
      <failure type="failure" message="modules_output$module_1() not identical to 101L. ('test-module_teal.R:189:9')">modules_output$module_1() not identical to 101L.
target is NULL, current is numeric
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:177:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. └─testthat::expect_identical(modules_output$module_1(), 101L) at test-module_teal.R:189:9</failure>
    </testcase>
    <testcase time="0.0449999999999982" classname="module_teal" name="are_called_once_their_tab_is_selected_and_data_is_teal_data_"/>
    <testcase time="0.0180000000000007" classname="module_teal" name="are_called_once_their_tab_is_selected_and_data_is_teal_data_">
      <failure type="failure" message="modules_output$module_1() not identical to 101L. ('test-module_teal.R:192:9')">modules_output$module_1() not identical to 101L.
target is NULL, current is numeric
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:177:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. └─testthat::expect_identical(modules_output$module_1(), 101L) at test-module_teal.R:192:9</failure>
    </testcase>
    <testcase time="0.0350000000000001" classname="module_teal" name="are_called_once_their_tab_is_selected_and_data_is_teal_data_">
      <failure type="failure" message="modules_output$module_2() not identical to 102L. ('test-module_teal.R:193:9')">modules_output$module_2() not identical to 102L.
target is NULL, current is numeric
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:177:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. └─testthat::expect_identical(modules_output$module_2(), 102L) at test-module_teal.R:193:9</failure>
    </testcase>
    <testcase time="0.151" classname="module_teal" name="are_called_once_their_tab_is_selected_and_data_returns_reactive_teal_data_"/>
    <testcase time="0.0250000000000021" classname="module_teal" name="are_called_once_their_tab_is_selected_and_data_returns_reactive_teal_data_">
      <failure type="failure" message="modules_output$module_1() not identical to 101L. ('test-module_teal.R:211:9')">modules_output$module_1() not identical to 101L.
target is NULL, current is numeric
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:199:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. └─testthat::expect_identical(modules_output$module_1(), 101L) at test-module_teal.R:211:9</failure>
    </testcase>
    <testcase time="0.0259999999999998" classname="module_teal" name="are_called_once_their_tab_is_selected_and_data_returns_reactive_teal_data_"/>
    <testcase time="0.00900000000000034" classname="module_teal" name="are_called_once_their_tab_is_selected_and_data_returns_reactive_teal_data_">
      <failure type="failure" message="modules_output$module_1() not identical to 101L. ('test-module_teal.R:215:9')">modules_output$module_1() not identical to 101L.
target is NULL, current is numeric
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:199:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. └─testthat::expect_identical(modules_output$module_1(), 101L) at test-module_teal.R:215:9</failure>
    </testcase>
    <testcase time="0.0279999999999987" classname="module_teal" name="are_called_once_their_tab_is_selected_and_data_returns_reactive_teal_data_">
      <failure type="failure" message="modules_output$module_2() not identical to 102L. ('test-module_teal.R:216:9')">modules_output$module_2() not identical to 102L.
target is NULL, current is numeric
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:199:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. └─testthat::expect_identical(modules_output$module_2(), 102L) at test-module_teal.R:216:9</failure>
    </testcase>
    <testcase time="0.145" classname="module_teal" name="are_called_once_their_tab_is_selected_and_teal_data_module_returns_reactive_teal_data_"/>
    <testcase time="0.0249999999999986" classname="module_teal" name="are_called_once_their_tab_is_selected_and_teal_data_module_returns_reactive_teal_data_">
      <failure type="failure" message="modules_output$module_1() not identical to 101L. ('test-module_teal.R:241:9')">modules_output$module_1() not identical to 101L.
target is NULL, current is numeric
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:222:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. └─testthat::expect_identical(modules_output$module_1(), 101L) at test-module_teal.R:241:9</failure>
    </testcase>
    <testcase time="0.0260000000000034" classname="module_teal" name="are_called_once_their_tab_is_selected_and_teal_data_module_returns_reactive_teal_data_"/>
    <testcase time="0.014999999999997" classname="module_teal" name="are_called_once_their_tab_is_selected_and_teal_data_module_returns_reactive_teal_data_">
      <failure type="failure" message="modules_output$module_1() not identical to 101L. ('test-module_teal.R:245:9')">modules_output$module_1() not identical to 101L.
target is NULL, current is numeric
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:222:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. └─testthat::expect_identical(modules_output$module_1(), 101L) at test-module_teal.R:245:9</failure>
    </testcase>
    <testcase time="0.0280000000000022" classname="module_teal" name="are_called_once_their_tab_is_selected_and_teal_data_module_returns_reactive_teal_data_">
      <failure type="failure" message="modules_output$module_2() not identical to 102L. ('test-module_teal.R:246:9')">modules_output$module_2() not identical to 102L.
target is NULL, current is numeric
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:222:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. └─testthat::expect_identical(modules_output$module_2(), 102L) at test-module_teal.R:246:9</failure>
    </testcase>
    <testcase time="0.239000000000001" classname="module_teal" name="are_called_only_after_teal_data_module_is_resolved"/>
    <testcase time="0.0539999999999985" classname="module_teal" name="are_called_only_after_teal_data_module_is_resolved"/>
    <testcase time="0.036999999999999" classname="module_teal" name="are_called_only_after_teal_data_module_is_resolved">
      <failure type="failure" message="modules_output$module_1() not identical to 101L. ('test-module_teal.R:276:9')">modules_output$module_1() not identical to 101L.
target is NULL, current is numeric
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:252:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. └─testthat::expect_identical(modules_output$module_1(), 101L) at test-module_teal.R:276:9</failure>
    </testcase>
    <testcase time="0.125" classname="module_teal" name="are_called_with_data_argument_being_teal_data_"/>
    <testcase time="0.032" classname="module_teal" name="are_called_with_data_argument_being_teal_data_">
      <error type="error" message="Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function ('test-module_teal.R:293:9')">Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:282:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_s4_class((modules_output$module_1())(), "teal_data") at test-module_teal.R:293:9
 27. │ └─testthat::quasi_label(enquo(object), arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. └─base::.handleSimpleError(...)
 30.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.0990000000000002" classname="module_teal" name="are_not_called_when_the_teal_data_module_doesn_t_return_teal_data"/>
    <testcase time="0.129999999999999" classname="module_teal" name="are_not_called_when_the_teal_data_module_doesn_t_return_teal_data"/>
    <testcase time="0.083000000000002" classname="module_teal" name="are_not_called_when_teal_data_module_returns_validation_error"/>
    <testcase time="0.00999999999999801" classname="module_teal" name="are_not_called_when_teal_data_module_returns_validation_error"/>
    <testcase time="0.122" classname="module_teal" name="are_not_called_when_teal_data_module_returns_validation_error"/>
    <testcase time="0.0900000000000034" classname="module_teal" name="are_not_called_when_teal_data_module_throws_an_error"/>
    <testcase time="0.00299999999999656" classname="module_teal" name="are_not_called_when_teal_data_module_throws_an_error"/>
    <testcase time="0.134" classname="module_teal" name="are_not_called_when_teal_data_module_throws_an_error"/>
    <testcase time="0.0899999999999999" classname="module_teal" name="are_not_called_when_teal_data_module_returns_qenv.error"/>
    <testcase time="0.0380000000000003" classname="module_teal" name="are_not_called_when_teal_data_module_returns_qenv.error"/>
    <testcase time="0.134" classname="module_teal" name="are_not_called_when_teal_data_module_returns_qenv.error"/>
    <testcase time="0.0920000000000023" classname="module_teal" name="are_receiving_reactive_data_which_triggers_on_change"/>
    <testcase time="0.0529999999999973" classname="module_teal" name="are_receiving_reactive_data_which_triggers_on_change"/>
    <testcase time="0.0360000000000014" classname="module_teal" name="are_receiving_reactive_data_which_triggers_on_change">
      <error type="error" message="Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function ('test-module_teal.R:432:9')">Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:406:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_setequal(...) at test-module_teal.R:432:9
 27. │ └─testthat::quasi_label(enquo(object), arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. └─base::.handleSimpleError(...)
 30.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.108000000000001" classname="module_teal" name="are_not_called_again_when_data_changes"/>
    <testcase time="0.0509999999999984" classname="module_teal" name="are_not_called_again_when_data_changes"/>
    <testcase time="0.111000000000001" classname="module_teal" name="are_not_called_again_when_data_changes">
      <failure type="failure" message="!is.null(out) is not TRUE ('test-module_teal.R:469:9')">!is.null(out) is not TRUE

`actual`:   FALSE
`expected`: TRUE 
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:440:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. └─testthat::expect_true(!is.null(out)) at test-module_teal.R:469:9</failure>
    </testcase>
    <testcase time="0.0399999999999991" classname="module_teal" name="are_not_called_again_when_data_changes"/>
    <testcase time="0.297000000000001" classname="module_teal" name="receives_data_with_datasets_module_datanames"/>
    <testcase time="0.0259999999999998" classname="module_teal" name="receives_data_with_datasets_module_datanames">
      <error type="error" message="Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function ('test-module_teal.R:488:9')">Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:477:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:488:9
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. └─base::.handleSimpleError(...)
 30.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.233000000000001" classname="module_teal" name="multiple_datanames_with_all_and_.raw_data_"/>
    <testcase time="0.027000000000001" classname="module_teal" name="multiple_datanames_with_all_and_.raw_data_">
      <error type="error" message="Error in `.subset2(x, &quot;impl&quot;)$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-validate_datanames-message ('test-module_teal.R:518:11')">Error in `.subset2(x, "impl")$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-validate_datanames-message
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:509:7
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_equal(...) at test-module_teal.R:518:11
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─base::trimws(rvest::html_text2(rvest::read_html(output[["teal_modules-module_1-validate_datanames-message"]]$html)))
 30. │ ├─base (local) mysub(...)
 31. │ │ └─base::sub(re, "", x, perl = TRUE)
 32. │ │   └─base::is.factor(x)
 33. │ └─base (local) mysub(paste0("^", whitespace, "+"), x)
 34. │   └─base::sub(re, "", x, perl = TRUE)
 35. │     └─base::is.factor(x)
 36. ├─rvest::html_text2(rvest::read_html(output[["teal_modules-module_1-validate_datanames-message"]]$html))
 37. ├─rvest::read_html(output[["teal_modules-module_1-validate_datanames-message"]]$html)
 38. ├─output[["teal_modules-module_1-validate_datanames-message"]]
 39. ├─shiny:::`[[.shinyoutput`(output, "teal_modules-module_1-validate_datanames-message")
 40. │ └─.subset2(x, "impl")$getOutput(name)
 41. │   └─base::stop(...)
 42. └─base::.handleSimpleError(...)
 43.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.149000000000001" classname="module_teal" name="single_dataname_with_all_"/>
    <testcase time="0.0350000000000001" classname="module_teal" name="single_dataname_with_all_">
      <error type="error" message="Error in `.subset2(x, &quot;impl&quot;)$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-validate_datanames-message ('test-module_teal.R:553:11')">Error in `.subset2(x, "impl")$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-validate_datanames-message
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:540:7
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_equal(...) at test-module_teal.R:553:11
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─base::trimws(rvest::html_text2(rvest::read_html(output[["teal_modules-module_1-validate_datanames-message"]]$html)))
 30. │ ├─base (local) mysub(...)
 31. │ │ └─base::sub(re, "", x, perl = TRUE)
 32. │ │   └─base::is.factor(x)
 33. │ └─base (local) mysub(paste0("^", whitespace, "+"), x)
 34. │   └─base::sub(re, "", x, perl = TRUE)
 35. │     └─base::is.factor(x)
 36. ├─rvest::html_text2(rvest::read_html(output[["teal_modules-module_1-validate_datanames-message"]]$html))
 37. ├─rvest::read_html(output[["teal_modules-module_1-validate_datanames-message"]]$html)
 38. ├─output[["teal_modules-module_1-validate_datanames-message"]]
 39. ├─shiny:::`[[.shinyoutput`(output, "teal_modules-module_1-validate_datanames-message")
 40. │ └─.subset2(x, "impl")$getOutput(name)
 41. │   └─base::stop(...)
 42. └─base::.handleSimpleError(...)
 43.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.130999999999997" classname="module_teal" name="warns_when_dataname_is_not_available"/>
    <testcase time="0.027000000000001" classname="module_teal" name="warns_when_dataname_is_not_available">
      <error type="error" message="Error in `.subset2(x, &quot;impl&quot;)$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-validate_datanames-message ('test-module_teal.R:582:11')">Error in `.subset2(x, "impl")$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-validate_datanames-message
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:571:7
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_equal(...) at test-module_teal.R:582:11
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─base::trimws(rvest::html_text2(rvest::read_html(output[["teal_modules-module_1-validate_datanames-message"]]$html)))
 30. │ ├─base (local) mysub(...)
 31. │ │ └─base::sub(re, "", x, perl = TRUE)
 32. │ │   └─base::is.factor(x)
 33. │ └─base (local) mysub(paste0("^", whitespace, "+"), x)
 34. │   └─base::sub(re, "", x, perl = TRUE)
 35. │     └─base::is.factor(x)
 36. ├─rvest::html_text2(rvest::read_html(output[["teal_modules-module_1-validate_datanames-message"]]$html))
 37. ├─rvest::read_html(output[["teal_modules-module_1-validate_datanames-message"]]$html)
 38. ├─output[["teal_modules-module_1-validate_datanames-message"]]
 39. ├─shiny:::`[[.shinyoutput`(output, "teal_modules-module_1-validate_datanames-message")
 40. │ └─.subset2(x, "impl")$getOutput(name)
 41. │   └─base::stop(...)
 42. └─base::.handleSimpleError(...)
 43.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.137" classname="module_teal" name="warns_when_datanames_are_not_available"/>
    <testcase time="0.027000000000001" classname="module_teal" name="warns_when_datanames_are_not_available">
      <error type="error" message="Error in `.subset2(x, &quot;impl&quot;)$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-validate_datanames-message ('test-module_teal.R:610:11')">Error in `.subset2(x, "impl")$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-validate_datanames-message
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:598:7
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_equal(...) at test-module_teal.R:610:11
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─base::trimws(rvest::html_text2(rvest::read_html(output[["teal_modules-module_1-validate_datanames-message"]]$html)))
 30. │ ├─base (local) mysub(...)
 31. │ │ └─base::sub(re, "", x, perl = TRUE)
 32. │ │   └─base::is.factor(x)
 33. │ └─base (local) mysub(paste0("^", whitespace, "+"), x)
 34. │   └─base::sub(re, "", x, perl = TRUE)
 35. │     └─base::is.factor(x)
 36. ├─rvest::html_text2(rvest::read_html(output[["teal_modules-module_1-validate_datanames-message"]]$html))
 37. ├─rvest::read_html(output[["teal_modules-module_1-validate_datanames-message"]]$html)
 38. ├─output[["teal_modules-module_1-validate_datanames-message"]]
 39. ├─shiny:::`[[.shinyoutput`(output, "teal_modules-module_1-validate_datanames-message")
 40. │ └─.subset2(x, "impl")$getOutput(name)
 41. │   └─base::stop(...)
 42. └─base::.handleSimpleError(...)
 43.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.135999999999999" classname="module_teal" name="warns_about_empty_data_when_none_of_module_datanames_is_available_even_if_data_is_not_empty_"/>
    <testcase time="0.0279999999999987" classname="module_teal" name="warns_about_empty_data_when_none_of_module_datanames_is_available_even_if_data_is_not_empty_">
      <error type="error" message="Error in `.subset2(x, &quot;impl&quot;)$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-validate_datanames-message ('test-module_teal.R:637:11')">Error in `.subset2(x, "impl")$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-validate_datanames-message
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:626:7
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_equal(...) at test-module_teal.R:637:11
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─base::trimws(rvest::html_text2(rvest::read_html(output[["teal_modules-module_1-validate_datanames-message"]]$html)))
 30. │ ├─base (local) mysub(...)
 31. │ │ └─base::sub(re, "", x, perl = TRUE)
 32. │ │   └─base::is.factor(x)
 33. │ └─base (local) mysub(paste0("^", whitespace, "+"), x)
 34. │   └─base::sub(re, "", x, perl = TRUE)
 35. │     └─base::is.factor(x)
 36. ├─rvest::html_text2(rvest::read_html(output[["teal_modules-module_1-validate_datanames-message"]]$html))
 37. ├─rvest::read_html(output[["teal_modules-module_1-validate_datanames-message"]]$html)
 38. ├─output[["teal_modules-module_1-validate_datanames-message"]]
 39. ├─shiny:::`[[.shinyoutput`(output, "teal_modules-module_1-validate_datanames-message")
 40. │ └─.subset2(x, "impl")$getOutput(name)
 41. │   └─base::stop(...)
 42. └─base::.handleSimpleError(...)
 43.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.166" classname="module_teal" name="warns_about_empty_data_when_none_of_module_datanames_is_available"/>
    <testcase time="0.0429999999999993" classname="module_teal" name="warns_about_empty_data_when_none_of_module_datanames_is_available"/>
    <testcase time="0.105" classname="module_teal" name="is_called_and_receives_data_even_if_datanames_in_teal_data_are_not_sufficient"/>
    <testcase time="0.0250000000000021" classname="module_teal" name="is_called_and_receives_data_even_if_datanames_in_teal_data_are_not_sufficient">
      <error type="error" message="Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function ('test-module_teal.R:692:9')">Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:681:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:692:9
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. └─base::.handleSimpleError(...)
 30.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.132999999999999" classname="module_teal" name="receives_all_objects_from_teal_data_when_module_datanames_all_"/>
    <testcase time="0.0259999999999998" classname="module_teal" name="receives_all_objects_from_teal_data_when_module_datanames_all_">
      <error type="error" message="Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function ('test-module_teal.R:712:9')">Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:698:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:712:9
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. └─base::.handleSimpleError(...)
 30.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.135999999999999" classname="module_teal" name="receives_parent_data_when_module_datanames_limited_to_a_child_data_but_join_keys_are_provided"/>
    <testcase time="0.027000000000001" classname="module_teal" name="receives_parent_data_when_module_datanames_limited_to_a_child_data_but_join_keys_are_provided">
      <error type="error" message="Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function ('test-module_teal.R:739:9')">Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:728:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:739:9
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. └─base::.handleSimpleError(...)
 30.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.152999999999999" classname="module_teal" name="receives_all_transformator_datasets_if_module_datanames_all_"/>
    <testcase time="0.0259999999999998" classname="module_teal" name="receives_all_transformator_datasets_if_module_datanames_all_">
      <error type="error" message="Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function ('test-module_teal.R:777:9')">Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:746:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:777:9
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. └─base::.handleSimpleError(...)
 30.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.155000000000001" classname="module_teal" name="receives_all_datasets_if_transform_datanames_all_"/>
    <testcase time="0.0269999999999975" classname="module_teal" name="receives_all_datasets_if_transform_datanames_all_">
      <error type="error" message="Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function ('test-module_teal.R:814:9')">Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:783:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:814:9
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. └─base::.handleSimpleError(...)
 30.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.162000000000003" classname="module_teal" name="receives_all_raw_datasets_based_on_module_datanames"/>
    <testcase time="0.0259999999999998" classname="module_teal" name="receives_all_raw_datasets_based_on_module_datanames">
      <error type="error" message="Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function ('test-module_teal.R:842:9')">Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:820:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_setequal(...) at test-module_teal.R:842:9
 27. │ └─testthat::quasi_label(enquo(object), arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. └─base::.handleSimpleError(...)
 30.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.138999999999999" classname="module_teal" name="combines_datanames_from_transform_module_datanames"/>
    <testcase time="0.0259999999999998" classname="module_teal" name="combines_datanames_from_transform_module_datanames">
      <error type="error" message="Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function ('test-module_teal.R:875:9')">Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:848:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:875:9
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. └─base::.handleSimpleError(...)
 30.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.154" classname="module_teal" name="does_not_receive_transformator_datasets_not_specified_in_transform_datanames_nor_modue_datanames"/>
    <testcase time="0.0259999999999998" classname="module_teal" name="does_not_receive_transformator_datasets_not_specified_in_transform_datanames_nor_modue_datanames">
      <error type="error" message="Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function ('test-module_teal.R:913:9')">Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:881:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:913:9
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. └─base::.handleSimpleError(...)
 30.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.132999999999999" classname="module_teal" name="srv_teal_module.teal_module_does_not_pass_data_if_not_in_the_args_explicitly"/>
    <testcase time="0.0229999999999997" classname="module_teal" name="srv_teal_module.teal_module_does_not_pass_data_if_not_in_the_args_explicitly"/>
    <testcase time="0.133000000000003" classname="module_teal" name="srv_teal_module.teal_module_passes_deprecated_datasets_to_the_server_module">
      <failure type="failure" message="modules_output$module_1() is not an S3 object ('test-module_teal.R:951:11')">modules_output$module_1() is not an S3 object
Backtrace:
     ▆
  1. ├─testthat::expect_warning(...) at test-module_teal.R:939:5
  2. │ └─testthat:::quasi_capture(...)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ └─base::withCallingHandlers(...)
  5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  6. ├─shiny::testServer(...)
  7. │ ├─shiny:::withMockContext(...)
  8. │ │ ├─shiny::isolate(...)
  9. │ │ │ ├─shiny::..stacktraceoff..(...)
 10. │ │ │ └─ctx$run(...)
 11. │ │ │   ├─promises::with_promise_domain(...)
 12. │ │ │   │ └─domain$wrapSync(expr)
 13. │ │ │   ├─shiny::withReactiveDomain(...)
 14. │ │ │   │ └─promises::with_promise_domain(...)
 15. │ │ │   │   └─domain$wrapSync(expr)
 16. │ │ │   │     └─base::force(expr)
 17. │ │ │   ├─shiny::captureStackTraces(...)
 18. │ │ │   │ └─promises::with_promise_domain(...)
 19. │ │ │   │   └─domain$wrapSync(expr)
 20. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 21. │ │ │   └─env$runWith(self, func)
 22. │ │ │     └─shiny (local) contextFunc()
 23. │ │ │       └─shiny::..stacktraceon..(expr)
 24. │ │ ├─shiny::withReactiveDomain(...)
 25. │ │ │ └─promises::with_promise_domain(...)
 26. │ │ │   └─domain$wrapSync(expr)
 27. │ │ │     └─base::force(expr)
 28. │ │ └─withr::with_options(...)
 29. │ │   └─base::force(code)
 30. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 31. └─testthat::expect_s3_class(modules_output$module_1(), "FilteredData") at test-module_teal.R:951:11</failure>
    </testcase>
    <testcase time="0.0250000000000021" classname="module_teal" name="srv_teal_module.teal_module_passes_deprecated_datasets_to_the_server_module"/>
    <testcase time="0.102999999999998" classname="module_teal" name="srv_teal_module.teal_module_passes_server_args_to_the_..."/>
    <testcase time="0.0199999999999996" classname="module_teal" name="srv_teal_module.teal_module_passes_server_args_to_the_..."/>
    <testcase time="0.108000000000001" classname="module_teal" name="srv_teal_module.teal_module_passes_quoted_arguments_to_the_teal_module_server_call"/>
    <testcase time="0.0280000000000022" classname="module_teal" name="srv_teal_module.teal_module_passes_quoted_arguments_to_the_teal_module_server_call">
      <error type="error" message="Error in `unique((modules_output$module_1())()[[&quot;a_dataset&quot;]]$Species)`: attempt to apply non-function ('test-module_teal.R:1007:9')">Error in `unique((modules_output$module_1())()[["a_dataset"]]$Species)`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:996:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_setequal("setosa", unique((modules_output$module_1())()[["a_dataset"]]$Species)) at test-module_teal.R:1007:9
 27. │ └─testthat::quasi_label(enquo(expected), arg = "expected")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─base::unique((modules_output$module_1())()[["a_dataset"]]$Species)
 30. └─base::.handleSimpleError(...)
 31.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.130000000000003" classname="module_teal" name="srv_teal_module.teal_module_passes_filter_panel_api_if_specified"/>
    <testcase time="0.0269999999999975" classname="module_teal" name="srv_teal_module.teal_module_passes_filter_panel_api_if_specified">
      <failure type="failure" message="modules_output$module_1() is not an S3 object ('test-module_teal.R:1027:9')">modules_output$module_1() is not an S3 object
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:1016:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. └─testthat::expect_s3_class(modules_output$module_1(), "FilterPanelAPI") at test-module_teal.R:1027:9</failure>
    </testcase>
    <testcase time="0.133000000000003" classname="module_teal" name="srv_teal_module.teal_module_passes_Reporter_if_specified"/>
    <testcase time="0.0249999999999986" classname="module_teal" name="srv_teal_module.teal_module_passes_Reporter_if_specified">
      <failure type="failure" message="modules_output$module_1() is not an S3 object ('test-module_teal.R:1044:9')">modules_output$module_1() is not an S3 object
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:1033:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. └─testthat::expect_s3_class(modules_output$module_1(), "Reporter") at test-module_teal.R:1044:9</failure>
    </testcase>
    <testcase time="0.123999999999999" classname="module_teal" name="does_not_receive_report_previewer_when_reporter_is_NULL"/>
    <testcase time="0.0190000000000019" classname="module_teal" name="does_not_receive_report_previewer_when_reporter_is_NULL"/>
    <testcase time="0.0829999999999984" classname="module_teal" name="is_set_to_initial_filters_when_module_specific"/>
    <testcase time="0.088000000000001" classname="module_teal" name="is_set_to_initial_filters_with_resolved_attr_mapping_modules_label_when_module_specific_"/>
    <testcase time="0.00199999999999889" classname="module_teal" name="is_set_to_initial_filters_with_resolved_attr_mapping_modules_label_when_module_specific_"/>
    <testcase time="0.135999999999999" classname="module_teal" name="slices_in_slicesGlobal_and_in_FilteredData_refer_to_the_same_object"/>
    <testcase time="0.0300000000000011" classname="module_teal" name="slices_in_slicesGlobal_and_in_FilteredData_refer_to_the_same_object">
      <error type="error" message="Error in `identical(slices_global$all_slices()[[1]], slices_global$module_slices_api[[&quot;module_1&quot;]]$get_filter_state()[[1]])`: attempt to apply non-function ('test-module_teal.R:1143:11')">Error in `identical(slices_global$all_slices()[[1]], slices_global$module_slices_api[["module_1"]]$get_filter_state()[[1]])`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:1132:7
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_true(...) at test-module_teal.R:1143:11
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─base::identical(slices_global$all_slices()[[1]], slices_global$module_slices_api[["module_1"]]$get_filter_state()[[1]])
 30. └─base::.handleSimpleError(...)
 31.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.172000000000001" classname="module_teal" name="appends_new_slice_and_activates_in_global_filters_when_added_in_a_module_if_module_specific"/>
    <testcase time="0.0429999999999993" classname="module_teal" name="appends_new_slice_and_activates_in_global_filters_when_added_in_a_module_if_module_specific">
      <failure type="failure" message="is_slices_equivalent(...) is not TRUE ('test-module_teal.R:1173:11')">is_slices_equivalent(...) is not TRUE

`actual`:   FALSE
`expected`: TRUE 
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:1155:7
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. └─testthat::expect_true(...) at test-module_teal.R:1173:11</failure>
    </testcase>
    <testcase time="0.170999999999999" classname="module_teal" name="deactivates_in_global_filters_when_removed_from_module_if_module_specific"/>
    <testcase time="0.0530000000000008" classname="module_teal" name="deactivates_in_global_filters_when_removed_from_module_if_module_specific">
      <failure type="failure" message="is_slices_equivalent(...) is not TRUE ('test-module_teal.R:1206:11')">is_slices_equivalent(...) is not TRUE

`actual`:   FALSE
`expected`: TRUE 
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:1185:7
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. └─testthat::expect_true(...) at test-module_teal.R:1206:11</failure>
    </testcase>
    <testcase time="0.224" classname="module_teal" name="appends_new_slice_and_activates_in_module_when_added_in_a_module_if_module_specific"/>
    <testcase time="0.0450000000000017" classname="module_teal" name="appends_new_slice_and_activates_in_module_when_added_in_a_module_if_module_specific">
      <failure type="failure" message="is_slices_equivalent(...) is not TRUE ('test-module_teal.R:1236:11')">is_slices_equivalent(...) is not TRUE

`actual`:   FALSE
`expected`: TRUE 
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:1218:7
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. └─testthat::expect_true(...) at test-module_teal.R:1236:11</failure>
    </testcase>
    <testcase time="0.171999999999997" classname="module_teal" name="appends_added_duplicated_slice_and_makes_new_slice_id_unique"/>
    <testcase time="0.0460000000000029" classname="module_teal" name="appends_added_duplicated_slice_and_makes_new_slice_id_unique">
      <failure type="failure" message="is_slices_equivalent(...) is not TRUE ('test-module_teal.R:1269:11')">is_slices_equivalent(...) is not TRUE

`actual`:   FALSE
`expected`: TRUE 
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:1248:7
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. └─testthat::expect_true(...) at test-module_teal.R:1269:11</failure>
    </testcase>
    <testcase time="0.175999999999998" classname="module_teal" name="deactivates_in_module_when_removed_from_module_if_module_specific"/>
    <testcase time="0.0549999999999997" classname="module_teal" name="deactivates_in_module_when_removed_from_module_if_module_specific">
      <failure type="failure" message="is_slices_equivalent(...) is not TRUE ('test-module_teal.R:1307:11')">is_slices_equivalent(...) is not TRUE

`actual`:   FALSE
`expected`: TRUE 
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:1285:7
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. └─testthat::expect_true(...) at test-module_teal.R:1307:11</failure>
    </testcase>
    <testcase time="0.0970000000000013" classname="module_teal" name="auto_resolves_to_mapping_m_when_setting_slices_with_mapping_global_filters_in_module_specific_">
      <skipped message="Reason: need a fix in a .slicesGlobal ('test-module_teal.R:1334:11')"/>
    </testcase>
    <testcase time="0.161999999999999" classname="module_teal" name="sets_filters_from_mapping_mod_to_all_modules_FilteredData_when_module_specific"/>
    <testcase time="0.0650000000000013" classname="module_teal" name="sets_filters_from_mapping_mod_to_all_modules_FilteredData_when_module_specific">
      <error type="error" message="Error in `as.list(y, recursive = TRUE)`: attempt to apply non-function ('test-module_teal.R:1375:11')">Error in `as.list(y, recursive = TRUE)`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:1353:7
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_true(...) at test-module_teal.R:1375:11
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─teal (local) is_slices_equivalent(...)
 30. │ └─base::as.list(y, recursive = TRUE) at test-module_teal.R:12:3
 31. └─base::.handleSimpleError(...)
 32.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.174999999999997" classname="module_teal" name="sets_filters_from_mapping_mod_to_module_s_FilteredData_when_module_specific"/>
    <testcase time="0.0420000000000016" classname="module_teal" name="sets_filters_from_mapping_mod_to_module_s_FilteredData_when_module_specific">
      <error type="error" message="Error in `as.list(y, recursive = TRUE)`: attempt to apply non-function ('test-module_teal.R:1405:11')">Error in `as.list(y, recursive = TRUE)`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:1384:7
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_true(...) at test-module_teal.R:1405:11
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─teal (local) is_slices_equivalent(...)
 30. │ └─base::as.list(y, recursive = TRUE) at test-module_teal.R:12:3
 31. └─base::.handleSimpleError(...)
 32.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.190000000000001" classname="module_teal" name="sets_filters_from_mapping_global_filters_to_all_modules_FilteredData_when_module_specific"/>
    <testcase time="0.041999999999998" classname="module_teal" name="sets_filters_from_mapping_global_filters_to_all_modules_FilteredData_when_module_specific">
      <error type="error" message="Error in `as.list(y, recursive = TRUE)`: attempt to apply non-function ('test-module_teal.R:1440:11')">Error in `as.list(y, recursive = TRUE)`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:1419:7
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_true(...) at test-module_teal.R:1440:11
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─teal (local) is_slices_equivalent(...)
 30. │ └─base::as.list(y, recursive = TRUE) at test-module_teal.R:12:3
 31. └─base::.handleSimpleError(...)
 32.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.175000000000001" classname="module_teal" name="change_in_the_slicesGlobal_causes_module_s_data_filtering"/>
    <testcase time="0.0440000000000005" classname="module_teal" name="change_in_the_slicesGlobal_causes_module_s_data_filtering">
      <error type="error" message="Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function ('test-module_teal.R:1478:11')">Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:1458:7
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:1478:11
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. └─base::.handleSimpleError(...)
 30.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.145" classname="module_teal" name="returns_no_rows_if_no_filters_set"/>
    <testcase time="0.0390000000000015" classname="module_teal" name="returns_no_rows_if_no_filters_set">
      <error type="error" message="Error in `FUN(X[[i]], ...)`: attempt to apply non-function ('test-module_teal.R:1512:11')">Error in `FUN(X[[i]], ...)`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:1502:7
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_equal(...) at test-module_teal.R:1512:11
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─shiny (local) mapping_table()
 30. │ ├─shiny::..stacktraceoff..(self$.updateValue())
 31. │ └─self$.updateValue()
 32. │   └─ctx$run(...)
 33. │     ├─promises::with_promise_domain(...)
 34. │     │ └─domain$wrapSync(expr)
 35. │     ├─shiny::withReactiveDomain(...)
 36. │     │ └─promises::with_promise_domain(...)
 37. │     │   └─domain$wrapSync(expr)
 38. │     │     └─base::force(expr)
 39. │     ├─shiny::captureStackTraces(...)
 40. │     │ └─promises::with_promise_domain(...)
 41. │     │   └─domain$wrapSync(expr)
 42. │     │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 43. │     └─env$runWith(self, func)
 44. │       └─shiny (local) contextFunc()
 45. │         ├─base::withCallingHandlers(...)
 46. │         ├─base::withVisible(.func())
 47. │         └─shiny (local) .func()
 48. │           ├─shiny::..stacktraceon..(`&lt;reactive&gt;`(...))
 49. │           └─teal (local) `&lt;reactive&gt;`(...)
 50. │             ├─shiny::isolate(...)
 51. │             │ ├─shiny::..stacktraceoff..(...)
 52. │             │ └─ctx$run(...)
 53. │             │   ├─promises::with_promise_domain(...)
 54. │             │   │ └─domain$wrapSync(expr)
 55. │             │   ├─shiny::withReactiveDomain(...)
 56. │             │   │ └─promises::with_promise_domain(...)
 57. │             │   │   └─domain$wrapSync(expr)
 58. │             │   │     └─base::force(expr)
 59. │             │   ├─shiny::captureStackTraces(...)
 60. │             │   │ └─promises::with_promise_domain(...)
 61. │             │   │   └─domain$wrapSync(expr)
 62. │             │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 63. │             │   └─env$runWith(self, func)
 64. │             │     └─shiny (local) contextFunc()
 65. │             │       └─shiny::..stacktraceon..(expr)
 66. │             ├─base::as.data.frame(...)
 67. │             └─base::sapply(...)
 68. │               └─base::lapply(X = X, FUN = FUN, ...)
 69. │                 └─teal (local) FUN(X[[i]], ...)
 70. ├─base::.handleSimpleError(...)
 71. │ └─shiny (local) h(simpleError(msg, call))
 72. │   └─base::stop(e)
 73. ├─shiny (local) `&lt;fn&gt;`(`&lt;smplErrr&gt;`)
 74. │ └─base::stop(e)
 75. └─shiny (local) `&lt;fn&gt;`(`&lt;smplErrr&gt;`)</error>
    </testcase>
    <testcase time="0.206999999999997" classname="module_teal" name="returns_global_filters_with_active_true_inactive_false_unavailable_na"/>
    <testcase time="0.0180000000000007" classname="module_teal" name="returns_global_filters_with_active_true_inactive_false_unavailable_na">
      <error type="error" message="Error in `FUN(X[[i]], ...)`: attempt to apply non-function ('test-module_teal.R:1546:11')">Error in `FUN(X[[i]], ...)`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:1524:7
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:1546:11
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─shiny (local) mapping_table()
 30. │ ├─shiny::..stacktraceoff..(self$.updateValue())
 31. │ └─self$.updateValue()
 32. │   └─ctx$run(...)
 33. │     ├─promises::with_promise_domain(...)
 34. │     │ └─domain$wrapSync(expr)
 35. │     ├─shiny::withReactiveDomain(...)
 36. │     │ └─promises::with_promise_domain(...)
 37. │     │   └─domain$wrapSync(expr)
 38. │     │     └─base::force(expr)
 39. │     ├─shiny::captureStackTraces(...)
 40. │     │ └─promises::with_promise_domain(...)
 41. │     │   └─domain$wrapSync(expr)
 42. │     │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 43. │     └─env$runWith(self, func)
 44. │       └─shiny (local) contextFunc()
 45. │         ├─base::withCallingHandlers(...)
 46. │         ├─base::withVisible(.func())
 47. │         └─shiny (local) .func()
 48. │           ├─shiny::..stacktraceon..(`&lt;reactive&gt;`(...))
 49. │           └─teal (local) `&lt;reactive&gt;`(...)
 50. │             ├─shiny::isolate(...)
 51. │             │ ├─shiny::..stacktraceoff..(...)
 52. │             │ └─ctx$run(...)
 53. │             │   ├─promises::with_promise_domain(...)
 54. │             │   │ └─domain$wrapSync(expr)
 55. │             │   ├─shiny::withReactiveDomain(...)
 56. │             │   │ └─promises::with_promise_domain(...)
 57. │             │   │   └─domain$wrapSync(expr)
 58. │             │   │     └─base::force(expr)
 59. │             │   ├─shiny::captureStackTraces(...)
 60. │             │   │ └─promises::with_promise_domain(...)
 61. │             │   │   └─domain$wrapSync(expr)
 62. │             │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 63. │             │   └─env$runWith(self, func)
 64. │             │     └─shiny (local) contextFunc()
 65. │             │       └─shiny::..stacktraceon..(expr)
 66. │             ├─base::as.data.frame(...)
 67. │             └─base::sapply(...)
 68. │               └─base::lapply(X = X, FUN = FUN, ...)
 69. │                 └─teal (local) FUN(X[[i]], ...)
 70. ├─base::.handleSimpleError(...)
 71. │ └─shiny (local) h(simpleError(msg, call))
 72. │   └─base::stop(e)
 73. ├─shiny (local) `&lt;fn&gt;`(`&lt;smplErrr&gt;`)
 74. │ └─base::stop(e)
 75. └─shiny (local) `&lt;fn&gt;`(`&lt;smplErrr&gt;`)</error>
    </testcase>
    <testcase time="0.25" classname="module_teal" name="returns_column_per_module_with_active_true_inactive_false_unavailable_na"/>
    <testcase time="0.0199999999999996" classname="module_teal" name="returns_column_per_module_with_active_true_inactive_false_unavailable_na">
      <error type="error" message="Error in `FUN(X[[i]], ...)`: attempt to apply non-function ('test-module_teal.R:1582:11')">Error in `FUN(X[[i]], ...)`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:1559:7
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:1582:11
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─shiny (local) mapping_table()
 30. │ ├─shiny::..stacktraceoff..(self$.updateValue())
 31. │ └─self$.updateValue()
 32. │   └─ctx$run(...)
 33. │     ├─promises::with_promise_domain(...)
 34. │     │ └─domain$wrapSync(expr)
 35. │     ├─shiny::withReactiveDomain(...)
 36. │     │ └─promises::with_promise_domain(...)
 37. │     │   └─domain$wrapSync(expr)
 38. │     │     └─base::force(expr)
 39. │     ├─shiny::captureStackTraces(...)
 40. │     │ └─promises::with_promise_domain(...)
 41. │     │   └─domain$wrapSync(expr)
 42. │     │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 43. │     └─env$runWith(self, func)
 44. │       └─shiny (local) contextFunc()
 45. │         ├─base::withCallingHandlers(...)
 46. │         ├─base::withVisible(.func())
 47. │         └─shiny (local) .func()
 48. │           ├─shiny::..stacktraceon..(`&lt;reactive&gt;`(...))
 49. │           └─teal (local) `&lt;reactive&gt;`(...)
 50. │             ├─shiny::isolate(...)
 51. │             │ ├─shiny::..stacktraceoff..(...)
 52. │             │ └─ctx$run(...)
 53. │             │   ├─promises::with_promise_domain(...)
 54. │             │   │ └─domain$wrapSync(expr)
 55. │             │   ├─shiny::withReactiveDomain(...)
 56. │             │   │ └─promises::with_promise_domain(...)
 57. │             │   │   └─domain$wrapSync(expr)
 58. │             │   │     └─base::force(expr)
 59. │             │   ├─shiny::captureStackTraces(...)
 60. │             │   │ └─promises::with_promise_domain(...)
 61. │             │   │   └─domain$wrapSync(expr)
 62. │             │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 63. │             │   └─env$runWith(self, func)
 64. │             │     └─shiny (local) contextFunc()
 65. │             │       └─shiny::..stacktraceon..(expr)
 66. │             ├─base::as.data.frame(...)
 67. │             └─base::sapply(...)
 68. │               └─base::lapply(X = X, FUN = FUN, ...)
 69. │                 └─teal (local) FUN(X[[i]], ...)
 70. ├─base::.handleSimpleError(...)
 71. │ └─shiny (local) h(simpleError(msg, call))
 72. │   └─base::stop(e)
 73. ├─shiny (local) `&lt;fn&gt;`(`&lt;smplErrr&gt;`)
 74. │ └─base::stop(e)
 75. └─shiny (local) `&lt;fn&gt;`(`&lt;smplErrr&gt;`)</error>
    </testcase>
    <testcase time="0.0459999999999994" classname="module_teal" name="what_happens_when_module_label_is_duplicated_when_nested_modules_">
      <skipped message="Reason: todo ('test-module_teal.R:1596:7')"/>
    </testcase>
    <testcase time="0.0210000000000008" classname="module_teal" name="sets_back_the_same_active_filters_in_each_module">
      <skipped message="Reason: todo ('test-module_teal.R:1603:5')"/>
    </testcase>
    <testcase time="0.0180000000000007" classname="module_teal" name="doesn_t_fail_when_teal_data_has_no_datasets">
      <skipped message="Reason: todo ('test-module_teal.R:1606:5')"/>
    </testcase>
    <testcase time="0.131" classname="module_teal" name="evaluates_custom_qenv_call_and_pass_updated_teal_data_to_the_module"/>
    <testcase time="0.032" classname="module_teal" name="evaluates_custom_qenv_call_and_pass_updated_teal_data_to_the_module">
      <error type="error" message="Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function ('test-module_teal.R:1627:9')">Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:1612:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:1627:9
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. └─base::.handleSimpleError(...)
 30.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.18" classname="module_teal" name="evaluates_custom_qenv_call_after_filter_is_applied"/>
    <testcase time="0.0380000000000003" classname="module_teal" name="evaluates_custom_qenv_call_after_filter_is_applied">
      <error type="error" message="Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function ('test-module_teal.R:1659:9')">Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:1634:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:1659:9
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. └─base::.handleSimpleError(...)
 30.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.192" classname="module_teal" name="is_reactive_to_the_filter_changes"/>
    <testcase time="0.0360000000000014" classname="module_teal" name="is_reactive_to_the_filter_changes">
      <error type="error" message="Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function ('test-module_teal.R:1705:9')">Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:1682:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:1705:9
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. └─base::.handleSimpleError(...)
 30.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.201999999999998" classname="module_teal" name="receives_all_possible_objects_while_those_not_specified_in_module_datanames_are_unfiltered"/>
    <testcase time="0.0330000000000013" classname="module_teal" name="receives_all_possible_objects_while_those_not_specified_in_module_datanames_are_unfiltered">
      <error type="error" message="Error in `rlang::eval_tidy(quosure, mask, rlang::caller_env())`: attempt to apply non-function ('test-module_teal.R:1762:9')">Error in `rlang::eval_tidy(quosure, mask, rlang::caller_env())`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:1727:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. └─base::.handleSimpleError(...) at test-module_teal.R:1762:9
 27.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.190999999999999" classname="module_teal" name="throws_a_warning_when_transformator_returns_reactive.event">
      <failure type="failure" message="`testServer(...)` produced unexpected warnings. ('test-module_teal.R:1772:5')">`testServer(...)` produced unexpected warnings.
Expected match: Using eventReactive in teal_transform module server code should be avoided
Actual values:
* Error in : 'as.teal_report' is not an exported object from 'namespace:teal.reporter'</failure>
    </testcase>
    <testcase time="0.385999999999999" classname="module_teal" name="fails_when_transformator_doesn_t_return_reactive">
      <failure type="failure" message="`testthat::with_mocked_bindings(...)` produced unexpected warnings. ('test-module_teal.R:1800:5')">`testthat::with_mocked_bindings(...)` produced unexpected warnings.
Expected match: Must be a reactive
Actual values:
* Error in : 'as.teal_report' is not an exported object from 'namespace:teal.reporter'</failure>
    </testcase>
    <testcase time="0.109999999999999" classname="module_teal" name="pauses_when_transformator_throws_validation_error"/>
    <testcase time="0.022000000000002" classname="module_teal" name="pauses_when_transformator_throws_validation_error"/>
    <testcase time="0.106999999999999" classname="module_teal" name="pauses_when_transformator_throws_validation_error"/>
    <testcase time="0.0219999999999985" classname="module_teal" name="pauses_when_transformator_throws_validation_error"/>
    <testcase time="0.0970000000000013" classname="module_teal" name="pauses_when_transformator_throws_qenv_error"/>
    <testcase time="0.022000000000002" classname="module_teal" name="pauses_when_transformator_throws_qenv_error"/>
    <testcase time="0.106999999999999" classname="module_teal" name="isn_t_called_when_data_is_not_teal_data"/>
    <testcase time="0.0219999999999985" classname="module_teal" name="isn_t_called_when_data_is_not_teal_data"/>
    <testcase time="0.102" classname="module_teal" name="changes_module_output_for_a_module_with_a_static_decorator"/>
    <testcase time="0.036999999999999" classname="module_teal" name="changes_module_output_for_a_module_with_a_static_decorator">
      <error type="error" message="Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function ('test-module_teal.R:1965:9')">Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:1954:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:1965:9
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. └─base::.handleSimpleError(...)
 30.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.121000000000002" classname="module_teal" name="changes_module_output_for_a_module_with_a_decorator_that_is_a_function_of_an_object_name"/>
    <testcase time="0.0279999999999987" classname="module_teal" name="changes_module_output_for_a_module_with_a_decorator_that_is_a_function_of_an_object_name">
      <error type="error" message="Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function ('test-module_teal.R:2010:9')">Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:1993:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:2010:9
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. └─base::.handleSimpleError(...)
 30.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.125999999999998" classname="module_teal" name="changes_module_output_for_a_module_with_an_interactive_decorator"/>
    <testcase time="0.0290000000000035" classname="module_teal" name="changes_module_output_for_a_module_with_an_interactive_decorator">
      <error type="error" message="Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function ('test-module_teal.R:2053:9')">Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:2035:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:2053:9
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. └─base::.handleSimpleError(...)
 30.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.146000000000001" classname="module_teal" name="displays_Obs_only_column_if_all_datasets_have_no_join_keys"/>
    <testcase time="0.0249999999999986" classname="module_teal" name="displays_Obs_only_column_if_all_datasets_have_no_join_keys">
      <error type="error" message="Error in `.subset2(x, &quot;impl&quot;)$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-data_summary-table ('test-module_teal.R:2073:9')">Error in `.subset2(x, "impl")$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-data_summary-table
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:2061:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:2073:9
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─teal (local) module_summary_table(output, "module_1")
 30. │ ├─output[[table_id]] at test-module_teal.R:6:3
 31. │ └─shiny:::`[[.shinyoutput`(output, table_id) at test-module_teal.R:6:3
 32. │   └─.subset2(x, "impl")$getOutput(name)
 33. │     └─base::stop(...)
 34. └─base::.handleSimpleError(...)
 35.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.131" classname="module_teal" name="displays_Subjects_with_count_based_on_foreign_key_column"/>
    <testcase time="0.0249999999999986" classname="module_teal" name="displays_Subjects_with_count_based_on_foreign_key_column">
      <error type="error" message="Error in `.subset2(x, &quot;impl&quot;)$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-data_summary-table ('test-module_teal.R:2103:9')">Error in `.subset2(x, "impl")$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-data_summary-table
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:2094:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:2103:9
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─teal (local) module_summary_table(output, "module_1")
 30. │ ├─output[[table_id]] at test-module_teal.R:6:3
 31. │ └─shiny:::`[[.shinyoutput`(output, table_id) at test-module_teal.R:6:3
 32. │   └─.subset2(x, "impl")$getOutput(name)
 33. │     └─base::stop(...)
 34. └─base::.handleSimpleError(...)
 35.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.131999999999998" classname="module_teal" name="displays_parent_s_Subjects_with_count_based_on_primary_key"/>
    <testcase time="0.0260000000000034" classname="module_teal" name="displays_parent_s_Subjects_with_count_based_on_primary_key">
      <error type="error" message="Error in `.subset2(x, &quot;impl&quot;)$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-data_summary-table ('test-module_teal.R:2135:9')">Error in `.subset2(x, "impl")$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-data_summary-table
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:2126:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:2135:9
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─teal (local) module_summary_table(output, "module_1")
 30. │ ├─output[[table_id]] at test-module_teal.R:6:3
 31. │ └─shiny:::`[[.shinyoutput`(output, table_id) at test-module_teal.R:6:3
 32. │   └─.subset2(x, "impl")$getOutput(name)
 33. │     └─base::stop(...)
 34. └─base::.handleSimpleError(...)
 35.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.133000000000003" classname="module_teal" name="displays_parent_s_Subjects_with_count_based_on_primary_and_foreign_key"/>
    <testcase time="0.0259999999999962" classname="module_teal" name="displays_parent_s_Subjects_with_count_based_on_primary_and_foreign_key">
      <error type="error" message="Error in `.subset2(x, &quot;impl&quot;)$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-data_summary-table ('test-module_teal.R:2168:9')">Error in `.subset2(x, "impl")$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-data_summary-table
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:2159:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:2168:9
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─teal (local) module_summary_table(output, "module_1")
 30. │ ├─output[[table_id]] at test-module_teal.R:6:3
 31. │ └─shiny:::`[[.shinyoutput`(output, table_id) at test-module_teal.R:6:3
 32. │   └─.subset2(x, "impl")$getOutput(name)
 33. │     └─base::stop(...)
 34. └─base::.handleSimpleError(...)
 35.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.136000000000003" classname="module_teal" name="reflects_filters_and_displays_subjects_by_their_unique_id_count"/>
    <testcase time="0.0259999999999962" classname="module_teal" name="reflects_filters_and_displays_subjects_by_their_unique_id_count">
      <error type="error" message="Error in `.subset2(x, &quot;impl&quot;)$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-data_summary-table ('test-module_teal.R:2202:9')">Error in `.subset2(x, "impl")$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-data_summary-table
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:2192:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:2202:9
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─teal (local) module_summary_table(output, "module_1")
 30. │ ├─output[[table_id]] at test-module_teal.R:6:3
 31. │ └─shiny:::`[[.shinyoutput`(output, table_id) at test-module_teal.R:6:3
 32. │   └─.subset2(x, "impl")$getOutput(name)
 33. │     └─base::stop(...)
 34. └─base::.handleSimpleError(...)
 35.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.134" classname="module_teal" name="reflects_added_filters_and_displays_subjects_by_their_unique_id_count"/>
    <testcase time="0.0330000000000013" classname="module_teal" name="reflects_added_filters_and_displays_subjects_by_their_unique_id_count">
      <error type="error" message="Error in `.subset2(x, &quot;impl&quot;)$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-data_summary-table ('test-module_teal.R:2237:9')">Error in `.subset2(x, "impl")$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-data_summary-table
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:2226:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:2237:9
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─teal (local) module_summary_table(output, "module_1")
 30. │ ├─output[[table_id]] at test-module_teal.R:6:3
 31. │ └─shiny:::`[[.shinyoutput`(output, table_id) at test-module_teal.R:6:3
 32. │   └─.subset2(x, "impl")$getOutput(name)
 33. │     └─base::stop(...)
 34. └─base::.handleSimpleError(...)
 35.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.136000000000003" classname="module_teal" name="reflects_transformator_adding_new_dataset_if_specified_in_module"/>
    <testcase time="0.0259999999999962" classname="module_teal" name="reflects_transformator_adding_new_dataset_if_specified_in_module">
      <error type="error" message="Error in `.subset2(x, &quot;impl&quot;)$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-data_summary-table ('test-module_teal.R:2276:9')">Error in `.subset2(x, "impl")$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-data_summary-table
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:2251:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:2276:9
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─teal (local) module_summary_table(output, "module_1")
 30. │ ├─output[[table_id]] at test-module_teal.R:6:3
 31. │ └─shiny:::`[[.shinyoutput`(output, table_id) at test-module_teal.R:6:3
 32. │   └─.subset2(x, "impl")$getOutput(name)
 33. │     └─base::stop(...)
 34. └─base::.handleSimpleError(...)
 35.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.137" classname="module_teal" name="displays_parent_s_Subjects_with_count_based_on_primary_key"/>
    <testcase time="0.0290000000000035" classname="module_teal" name="displays_parent_s_Subjects_with_count_based_on_primary_key">
      <error type="error" message="Error in `.subset2(x, &quot;impl&quot;)$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-data_summary-table ('test-module_teal.R:2305:11')">Error in `.subset2(x, "impl")$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-data_summary-table
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:2290:7
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:2305:11
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─teal (local) module_summary_table(output, "module_1")
 30. │ ├─output[[table_id]] at test-module_teal.R:6:3
 31. │ └─shiny:::`[[.shinyoutput`(output, table_id) at test-module_teal.R:6:3
 32. │   └─.subset2(x, "impl")$getOutput(name)
 33. │     └─base::stop(...)
 34. └─base::.handleSimpleError(...)
 35.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.134" classname="module_teal" name="displays_only_module_datanames"/>
    <testcase time="0.0259999999999962" classname="module_teal" name="displays_only_module_datanames">
      <error type="error" message="Error in `.subset2(x, &quot;impl&quot;)$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-data_summary-table ('test-module_teal.R:2329:9')">Error in `.subset2(x, "impl")$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-data_summary-table
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:2320:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:2329:9
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─teal (local) module_summary_table(output, "module_1")
 30. │ ├─output[[table_id]] at test-module_teal.R:6:3
 31. │ └─shiny:::`[[.shinyoutput`(output, table_id) at test-module_teal.R:6:3
 32. │   └─.subset2(x, "impl")$getOutput(name)
 33. │     └─base::stop(...)
 34. └─base::.handleSimpleError(...)
 35.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.133000000000003" classname="module_teal" name="displays_parent_before_child_when_join_keys_are_provided"/>
    <testcase time="0.0289999999999964" classname="module_teal" name="displays_parent_before_child_when_join_keys_are_provided">
      <error type="error" message="Error in `.subset2(x, &quot;impl&quot;)$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-data_summary-table ('test-module_teal.R:2360:9')">Error in `.subset2(x, "impl")$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-data_summary-table
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:2350:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:2360:9
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─teal (local) module_summary_table(output, "module_1")
 30. │ ├─output[[table_id]] at test-module_teal.R:6:3
 31. │ └─shiny:::`[[.shinyoutput`(output, table_id) at test-module_teal.R:6:3
 32. │   └─.subset2(x, "impl")$getOutput(name)
 33. │     └─base::stop(...)
 34. └─base::.handleSimpleError(...)
 35.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.137" classname="module_teal" name="displays_subset_of_module_datanames_if_not_sufficient"/>
    <testcase time="0.0300000000000011" classname="module_teal" name="displays_subset_of_module_datanames_if_not_sufficient">
      <error type="error" message="Error in `.subset2(x, &quot;impl&quot;)$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-data_summary-table ('test-module_teal.R:2380:9')">Error in `.subset2(x, "impl")$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-data_summary-table
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:2370:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:2380:9
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─teal (local) module_summary_table(output, "module_1")
 30. │ ├─output[[table_id]] at test-module_teal.R:6:3
 31. │ └─shiny:::`[[.shinyoutput`(output, table_id) at test-module_teal.R:6:3
 32. │   └─.subset2(x, "impl")$getOutput(name)
 33. │     └─base::stop(...)
 34. └─base::.handleSimpleError(...)
 35.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="5.211" classname="module_teal" name="summary_table_displays_MAE_dataset_added_in_transformators">
      <error type="error" message="Error in `.subset2(x, &quot;impl&quot;)$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-data_summary-table ('test-module_teal.R:2421:9')">Error in `.subset2(x, "impl")$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-data_summary-table
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:2399:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_equal(...) at test-module_teal.R:2421:9
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─teal (local) module_summary_table(output, "module_1")
 30. │ ├─output[[table_id]] at test-module_teal.R:6:3
 31. │ └─shiny:::`[[.shinyoutput`(output, table_id) at test-module_teal.R:6:3
 32. │   └─.subset2(x, "impl")$getOutput(name)
 33. │     └─base::stop(...)
 34. └─base::.handleSimpleError(...)
 35.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.192" classname="module_teal" name="displays_unsupported_datasets"/>
    <testcase time="0.0459999999999994" classname="module_teal" name="displays_unsupported_datasets">
      <error type="error" message="Error in `.subset2(x, &quot;impl&quot;)$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-data_summary-table ('test-module_teal.R:2453:9')">Error in `.subset2(x, "impl")$getOutput(name)`: The test referenced an output that hasn't been defined yet: output$test-teal_modules-module_1-data_summary-table
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:2443:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_identical(...) at test-module_teal.R:2453:9
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─teal (local) module_summary_table(output, "module_1")
 30. │ ├─output[[table_id]] at test-module_teal.R:6:3
 31. │ └─shiny:::`[[.shinyoutput`(output, table_id) at test-module_teal.R:6:3
 32. │   └─.subset2(x, "impl")$getOutput(name)
 33. │     └─base::stop(...)
 34. └─base::.handleSimpleError(...)
 35.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.145000000000003" classname="module_teal" name="clicking_reset_button_restores_initial_filters_state_when_module_specific"/>
    <testcase time="0.0429999999999993" classname="module_teal" name="clicking_reset_button_restores_initial_filters_state_when_module_specific">
      <failure type="failure" message="is_slices_equivalent(slices_global$all_slices(), initial_slices) is not TRUE ('test-module_teal.R:2490:9')">is_slices_equivalent(slices_global$all_slices(), initial_slices) is not TRUE

`actual`:   FALSE
`expected`: TRUE 
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:2468:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. └─testthat::expect_true(...) at test-module_teal.R:2490:9</failure>
    </testcase>
    <testcase time="0.0309999999999988" classname="module_teal" name="clicking_reset_button_restores_initial_filters_state_when_module_specific">
      <error type="error" message="Error in `as.list(x, recursive = TRUE)`: attempt to apply non-function ('test-module_teal.R:2496:9')">Error in `as.list(x, recursive = TRUE)`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:2468:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_true(...) at test-module_teal.R:2496:9
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─teal (local) is_slices_equivalent(...)
 30. │ └─base::as.list(x, recursive = TRUE) at test-module_teal.R:11:3
 31. └─base::.handleSimpleError(...)
 32.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.710999999999999" classname="module_teal" name="clicking_reset_button_restores_initial_filters_with_respect_to_mapping_state_when_module_specific"/>
    <testcase time="0.0399999999999991" classname="module_teal" name="clicking_reset_button_restores_initial_filters_with_respect_to_mapping_state_when_module_specific">
      <failure type="failure" message="is_slices_equivalent(slices_global$all_slices(), initial_slices) is not TRUE ('test-module_teal.R:2532:9')">is_slices_equivalent(slices_global$all_slices(), initial_slices) is not TRUE

`actual`:   FALSE
`expected`: TRUE 
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:2508:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. └─testthat::expect_true(...) at test-module_teal.R:2532:9</failure>
    </testcase>
    <testcase time="0.0300000000000011" classname="module_teal" name="clicking_reset_button_restores_initial_filters_with_respect_to_mapping_state_when_module_specific">
      <error type="error" message="Error in `as.list(x, recursive = TRUE)`: attempt to apply non-function ('test-module_teal.R:2538:9')">Error in `as.list(x, recursive = TRUE)`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:2508:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_true(...) at test-module_teal.R:2538:9
 27. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─teal (local) is_slices_equivalent(...)
 30. │ └─base::as.list(x, recursive = TRUE) at test-module_teal.R:11:3
 31. └─base::.handleSimpleError(...)
 32.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.123000000000005" classname="module_teal" name="are_detected_as_datanames_when_defined_as_all_"/>
    <testcase time="0.0259999999999962" classname="module_teal" name="are_detected_as_datanames_when_defined_as_all_">
      <error type="error" message="Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function ('test-module_teal.R:2576:9')">Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:2559:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_setequal(...) at test-module_teal.R:2576:9
 27. │ └─testthat::quasi_label(enquo(object), arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. └─base::.handleSimpleError(...)
 30.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.185000000000002" classname="module_teal" name="are_present_in_datanames_when_used_in_pre_processing_code"/>
    <testcase time="0.0339999999999989" classname="module_teal" name="are_present_in_datanames_when_used_in_pre_processing_code">
      <error type="error" message="Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function ('test-module_teal.R:2606:9')">Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:2585:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_setequal(...) at test-module_teal.R:2606:9
 27. │ └─testthat::quasi_label(enquo(object), arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. └─base::.handleSimpleError(...)
 30.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.213999999999999" classname="module_teal" name="_when_used_as_non_native_pipe_are_present_in_datanames_in_the_pre_processing_code"/>
    <testcase time="0.0620000000000047" classname="module_teal" name="_when_used_as_non_native_pipe_are_present_in_datanames_in_the_pre_processing_code">
      <error type="error" message="Error in `force(x)`: attempt to apply non-function ('test-module_teal.R:2639:9')">Error in `force(x)`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:2615:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_contains(...) at test-module_teal.R:2639:9
 27. │ └─testthat::quasi_label(enquo(object), arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─base::strsplit(...)
 30. ├─teal.code::get_code((modules_output$module_1())())
 31. │ └─teal.code::dev_suppress(object)
 32. │   └─base::force(x)
 33. └─base::.handleSimpleError(...)
 34.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.183999999999997" classname="module_teal" name="is_fully_reproducible"/>
    <testcase time="0.027000000000001" classname="module_teal" name="is_fully_reproducible">
      <error type="error" message="Error in `rlang::eval_tidy(quosure, mask, rlang::caller_env())`: attempt to apply non-function ('test-module_teal.R:2674:9')">Error in `rlang::eval_tidy(quosure, mask, rlang::caller_env())`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:2656:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. └─base::.handleSimpleError(...) at test-module_teal.R:2674:9
 27.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.147999999999996" classname="module_teal" name="has_the_correct_code_with_hash_"/>
    <testcase time="0.0290000000000035" classname="module_teal" name="has_the_correct_code_with_hash_">
      <error type="error" message="Error in `force(x)`: attempt to apply non-function ('test-module_teal.R:2719:9')">Error in `force(x)`: attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:2688:5
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   ├─shiny::captureStackTraces(...)
 13. │ │ │   │ └─promises::with_promise_domain(...)
 14. │ │ │   │   └─domain$wrapSync(expr)
 15. │ │ │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)
 16. │ │ │   └─env$runWith(self, func)
 17. │ │ │     └─shiny (local) contextFunc()
 18. │ │ │       └─shiny::..stacktraceon..(expr)
 19. │ │ ├─shiny::withReactiveDomain(...)
 20. │ │ │ └─promises::with_promise_domain(...)
 21. │ │ │   └─domain$wrapSync(expr)
 22. │ │ │     └─base::force(expr)
 23. │ │ └─withr::with_options(...)
 24. │ │   └─base::force(code)
 25. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 26. ├─testthat::expect_setequal(...) at test-module_teal.R:2719:9
 27. │ └─testthat::quasi_label(enquo(object), arg = "object")
 28. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 29. ├─base::trimws(...)
 30. │ ├─base (local) mysub(...)
 31. │ │ └─base::sub(re, "", x, perl = TRUE)
 32. │ │   └─base::is.factor(x)
 33. │ └─base (local) mysub(paste0("^", whitespace, "+"), x)
 34. │   └─base::sub(re, "", x, perl = TRUE)
 35. │     └─base::is.factor(x)
 36. ├─base::strsplit(...)
 37. ├─teal.code::get_code((modules_output$module_1())())
 38. │ └─teal.code::dev_suppress(object)
 39. │   └─base::force(x)
 40. └─base::.handleSimpleError(...)
 41.   └─shiny (local) h(simpleError(msg, call))</error>
    </testcase>
  </testsuite>
  <testsuite name="modules" timestamp="2025-07-01T10:46:18Z" hostname="2ecc0feba4c8" tests="97" skipped="0" failures="0" errors="0" time="0.415">
    <testcase time="0.0360000000000014" classname="modules" name="Calling_module_does_not_throw"/>
    <testcase time="0.00399999999999778" classname="modules" name="module_requires_label_argument_to_be_a_string_different_than_global_filters_"/>
    <testcase time="0.00500000000000256" classname="modules" name="module_requires_label_argument_to_be_a_string_different_than_global_filters_"/>
    <testcase time="0.00499999999999545" classname="modules" name="module_requires_label_argument_to_be_a_string_different_than_global_filters_"/>
    <testcase time="0.00500000000000256" classname="modules" name="module_requires_label_argument_to_be_a_string_different_than_global_filters_"/>
    <testcase time="0.00499999999999545" classname="modules" name="module_requires_label_argument_to_be_a_string_different_than_global_filters_"/>
    <testcase time="0.00400000000000489" classname="modules" name="module_warns_when_server_contains_datasets_argument"/>
    <testcase time="0.00399999999999778" classname="modules" name="module_expects_server_being_a_shiny_server_module_with_any_argument"/>
    <testcase time="0.000999999999997669" classname="modules" name="module_expects_server_being_a_shiny_server_module_with_any_argument"/>
    <testcase time="0.00200000000000244" classname="modules" name="module_expects_server_being_a_shiny_server_module_with_any_argument"/>
    <testcase time="0.00500000000000256" classname="modules" name="module_expects_server_being_a_shiny_server_module_with_any_argument"/>
    <testcase time="0.00399999999999778" classname="modules" name="module_expects_server_being_a_shiny_server_module_with_any_argument"/>
    <testcase time="0.00399999999999778" classname="modules" name="module_requires_server_args_argument_to_be_a_list"/>
    <testcase time="0.00200000000000244" classname="modules" name="module_requires_server_args_argument_to_be_a_list"/>
    <testcase time="0.000999999999997669" classname="modules" name="module_requires_server_args_argument_to_be_a_list"/>
    <testcase time="0.00500000000000256" classname="modules" name="module_requires_server_args_argument_to_be_a_list"/>
    <testcase time="0.00500000000000256" classname="modules" name="module_requires_server_args_argument_to_be_a_list"/>
    <testcase time="0.00399999999999778" classname="modules" name="module_expects_all_server_args_being_a_server_arguments_or_passed_through_..._"/>
    <testcase time="0.00200000000000244" classname="modules" name="module_expects_all_server_args_being_a_server_arguments_or_passed_through_..._"/>
    <testcase time="0.00499999999999545" classname="modules" name="module_expects_all_server_args_being_a_server_arguments_or_passed_through_..._"/>
    <testcase time="0.00300000000000011" classname="modules" name="module_requires_ui_args_argument_to_be_a_list"/>
    <testcase time="0.00200000000000244" classname="modules" name="module_requires_ui_args_argument_to_be_a_list"/>
    <testcase time="0.000999999999997669" classname="modules" name="module_requires_ui_args_argument_to_be_a_list"/>
    <testcase time="0.00500000000000256" classname="modules" name="module_requires_ui_args_argument_to_be_a_list"/>
    <testcase time="0.00499999999999545" classname="modules" name="module_requires_ui_args_argument_to_be_a_list"/>
    <testcase time="0.00600000000000023" classname="modules" name="module_throws_when_ui_has_data_or_datasets_argument"/>
    <testcase time="0.00500000000000256" classname="modules" name="module_throws_when_ui_has_data_or_datasets_argument"/>
    <testcase time="0.00399999999999778" classname="modules" name="module_expects_ui_being_a_shiny_ui_module_with_any_argument"/>
    <testcase time="0.00100000000000477" classname="modules" name="module_expects_ui_being_a_shiny_ui_module_with_any_argument"/>
    <testcase time="0.00499999999999545" classname="modules" name="module_expects_ui_being_a_shiny_ui_module_with_any_argument"/>
    <testcase time="0.00400000000000489" classname="modules" name="module_expects_all_ui_args_being_a_ui_arguments_or_passed_through_..._"/>
    <testcase time="0.000999999999997669" classname="modules" name="module_expects_all_ui_args_being_a_ui_arguments_or_passed_through_..._"/>
    <testcase time="0.00500000000000256" classname="modules" name="module_expects_all_ui_args_being_a_ui_arguments_or_passed_through_..._"/>
    <testcase time="0.00399999999999778" classname="modules" name="module_requires_datanames_argument_to_be_a_character_or_NULL"/>
    <testcase time="0.000999999999997669" classname="modules" name="module_requires_datanames_argument_to_be_a_character_or_NULL"/>
    <testcase time="0.00200000000000244" classname="modules" name="module_requires_datanames_argument_to_be_a_character_or_NULL"/>
    <testcase time="0.00500000000000256" classname="modules" name="module_requires_datanames_argument_to_be_a_character_or_NULL"/>
    <testcase time="0.000999999999997669" classname="modules" name="module_requires_datanames_argument_to_be_a_character_or_NULL"/>
    <testcase time="0.00399999999999778" classname="modules" name="module_returns_list_of_class_teal_module_containing_input_objects"/>
    <testcase time="0.00100000000000477" classname="modules" name="module_returns_list_of_class_teal_module_containing_input_objects"/>
    <testcase time="0.00199999999999534" classname="modules" name="module_returns_list_of_class_teal_module_containing_input_objects"/>
    <testcase time="0.00100000000000477" classname="modules" name="module_returns_list_of_class_teal_module_containing_input_objects"/>
    <testcase time="0.000999999999997669" classname="modules" name="module_returns_list_of_class_teal_module_containing_input_objects"/>
    <testcase time="0.00200000000000244" classname="modules" name="module_returns_list_of_class_teal_module_containing_input_objects"/>
    <testcase time="0.000999999999997669" classname="modules" name="module_returns_list_of_class_teal_module_containing_input_objects"/>
    <testcase time="0.000999999999997669" classname="modules" name="module_returns_list_of_class_teal_module_containing_input_objects"/>
    <testcase time="0.00800000000000267" classname="modules" name="modules_gives_error_if_no_arguments_other_than_label_are_used"/>
    <testcase time="0.00399999999999778" classname="modules" name="modules_gives_error_if_no_arguments_other_than_label_are_used"/>
    <testcase time="0.00399999999999778" classname="modules" name="modules_requires_label_argument_to_be_a_string_"/>
    <testcase time="0.00500000000000256" classname="modules" name="modules_requires_label_argument_to_be_a_string_"/>
    <testcase time="0.00500000000000256" classname="modules" name="modules_requires_label_argument_to_be_a_string_"/>
    <testcase time="0.00399999999999778" classname="modules" name="modules_accept_teal_module_in_..."/>
    <testcase time="0.00399999999999778" classname="modules" name="modules_accept_multiple_teal_module_objects_in_..."/>
    <testcase time="0.00400000000000489" classname="modules" name="modules_accept_multiple_teal_module_and_teal_modules_objects_in_..."/>
    <testcase time="0.0069999999999979" classname="modules" name="modules_does_not_accept_objects_other_than_teal_module_s_in_..."/>
    <testcase time="0.0069999999999979" classname="modules" name="modules_does_not_accept_objects_other_than_teal_module_s_in_..."/>
    <testcase time="0.00300000000000011" classname="modules" name="modules_returns_teal_modules_object_with_label_and_children_slot"/>
    <testcase time="0.00200000000000244" classname="modules" name="modules_returns_teal_modules_object_with_label_and_children_slot"/>
    <testcase time="0.00399999999999778" classname="modules" name="modules_returns_children_as_list_with_list_named_after_label_attributes"/>
    <testcase time="0.000999999999997669" classname="modules" name="modules_returns_children_as_list_with_list_named_after_label_attributes"/>
    <testcase time="0.00100000000000477" classname="modules" name="modules_returns_children_as_list_with_list_named_after_label_attributes"/>
    <testcase time="0.00799999999999557" classname="modules" name="modules_returns_useful_error_message_if_label_argument_not_explicitly_named"/>
    <testcase time="0.00400000000000489" classname="modules" name="modules_returns_children_as_list_with_unique_names_if_labels_are_duplicated"/>
    <testcase time="0.000999999999997669" classname="modules" name="modules_returns_children_as_list_with_unique_names_if_labels_are_duplicated"/>
    <testcase time="0.00200000000000244" classname="modules" name="modules_returns_children_as_list_with_unique_names_if_labels_are_duplicated"/>
    <testcase time="0.00399999999999778" classname="modules" name="modules_depth_accepts_depth_as_integer"/>
    <testcase time="0.00500000000000256" classname="modules" name="modules_depth_accepts_depth_as_integer"/>
    <testcase time="0.00399999999999778" classname="modules" name="modules_depth_returns_depth_0_by_default"/>
    <testcase time="0.00399999999999778" classname="modules" name="modules_depth_accepts_modules_to_be_teal_module_or_teal_modules"/>
    <testcase time="0.00200000000000244" classname="modules" name="modules_depth_accepts_modules_to_be_teal_module_or_teal_modules"/>
    <testcase time="0.00399999999999778" classname="modules" name="modules_depth_returns_depth_same_as_input_for_teal_module"/>
    <testcase time="0.00400000000000489" classname="modules" name="modules_depth_increases_depth_by_1_for_each_teal_modules"/>
    <testcase time="0.00199999999999534" classname="modules" name="modules_depth_increases_depth_by_1_for_each_teal_modules"/>
    <testcase time="0.007000000000005" classname="modules" name="is_arg_used_throws_error_if_object_is_not_teal_module_or_teal_modules"/>
    <testcase time="0.00499999999999545" classname="modules" name="is_arg_used_throws_error_if_object_is_not_teal_module_or_teal_modules"/>
    <testcase time="0.00500000000000256" classname="modules" name="is_arg_used_returns_true_if_teal_module_has_given_arg_in_server_function_args"/>
    <testcase time="0.00600000000000023" classname="modules" name="is_arg_used_returns_false_if_teal_module_does_not_have_reporter_in_server_function_args"/>
    <testcase time="0.00499999999999545" classname="modules" name="is_arg_used_returns_false_if_teal_modules_has_no_children_using_given_arg_"/>
    <testcase time="0.00400000000000489" classname="modules" name="is_arg_used_returns_false_if_teal_modules_has_no_children_using_given_arg_"/>
    <testcase time="0.00499999999999545" classname="modules" name="is_arg_used_returns_true_if_teal_modules_has_at_least_one_child_using_given_arg_"/>
    <testcase time="0.00400000000000489" classname="modules" name="is_arg_used_returns_true_if_teal_modules_has_at_least_one_child_using_given_arg_"/>
    <testcase time="0.00300000000000011" classname="modules" name="is_arg_used_returns_true_if_teal_modules_has_at_least_one_child_using_given_arg_"/>
    <testcase time="0.00499999999999545" classname="modules" name="is_arg_used_returns_TRUE_FALSE_when_the_arg_is_in_function_formals"/>
    <testcase time="0.00300000000000011" classname="modules" name="is_arg_used_returns_TRUE_FALSE_when_the_arg_is_in_function_formals"/>
    <testcase time="0.00800000000000267" classname="modules" name="is_arg_used_accepts_arg_to_be_a_string_only"/>
    <testcase time="0.00500000000000256" classname="modules" name="is_arg_used_accepts_arg_to_be_a_string_only"/>
    <testcase time="0.00499999999999545" classname="modules" name="is_arg_used_accepts_arg_to_be_a_string_only"/>
    <testcase time="0.00800000000000267" classname="modules" name="append_module_throws_error_when_modules_is_not_inherited_from_teal_modules"/>
    <testcase time="0.00499999999999545" classname="modules" name="append_module_throws_error_when_modules_is_not_inherited_from_teal_modules"/>
    <testcase time="0.00800000000000267" classname="modules" name="append_module_throws_error_is_module_is_not_inherited_from_teal_module"/>
    <testcase time="0.00500000000000256" classname="modules" name="append_module_throws_error_is_module_is_not_inherited_from_teal_module"/>
    <testcase time="0.00499999999999545" classname="modules" name="append_module_appends_a_module_to_children_of_not_nested_teal_modules"/>
    <testcase time="0.00600000000000023" classname="modules" name="append_module_appends_a_module_to_children_of_nested_teal_modules"/>
    <testcase time="0.00400000000000489" classname="modules" name="append_module_produces_teal_modules_with_unique_named_children"/>
    <testcase time="0.00799999999999557" classname="modules" name="format.teal_modules_returns_proper_structure"/>
    <testcase time="0.00400000000000489" classname="modules" name="module_datanames_is_appended_by_its_transformators_datanames"/>
    <testcase time="0.00399999999999778" classname="modules" name="module_datanames_stays_all_regardless_of_transformators"/>
  </testsuite>
  <testsuite name="report_previewer_module" timestamp="2025-07-01T10:46:18Z" hostname="2ecc0feba4c8" tests="8" skipped="0" failures="0" errors="0" time="0.039">
    <testcase time="0.0069999999999979" classname="report_previewer_module" name="report_previewer_module_has_specific_classes"/>
    <testcase time="0.00600000000000023" classname="report_previewer_module" name="report_previewer_module_throws_error_if_label_is_not_string"/>
    <testcase time="0.00500000000000256" classname="report_previewer_module" name="report_previewer_module_throws_error_if_label_is_not_string"/>
    <testcase time="0.00399999999999778" classname="report_previewer_module" name="report_previewer_module_throws_no_error_and_stores_label_if_label_is_string"/>
    <testcase time="0.000999999999997669" classname="report_previewer_module" name="report_previewer_module_throws_no_error_and_stores_label_if_label_is_string"/>
    <testcase time="0.00400000000000489" classname="report_previewer_module" name="report_previewer_module_default_label_is_Report_previewer_"/>
    <testcase time="0.0069999999999979" classname="report_previewer_module" name="report_previewer_module_does_not_accept_server_args_out_of_formals_teal.reporter_reporter_previewer_srv_"/>
    <testcase time="0.00500000000000256" classname="report_previewer_module" name="report_previewer_module_does_not_accept_server_args_out_of_formals_teal.reporter_reporter_previewer_srv_"/>
  </testsuite>
  <testsuite name="shinytest2-data_summary" timestamp="2025-07-01T10:46:18Z" hostname="2ecc0feba4c8" tests="6" skipped="6" failures="0" errors="0" time="0.078">
    <testcase time="0.00600000000000023" classname="shinytest2_data_summary" name="e2e_data_summary_just_list_the_unfilterable_objects_at_the_bottom_when_provided">
      <skipped message="Reason: chromium ('test-shinytest2-data_summary.R:2:3')"/>
    </testcase>
    <testcase time="0.0129999999999981" classname="shinytest2_data_summary" name="e2e_data_summary_table_is_displayed_with_2_columns_data_without_keys">
      <skipped message="Reason: chromium ('test-shinytest2-data_summary.R:18:3')"/>
    </testcase>
    <testcase time="0.0219999999999985" classname="shinytest2_data_summary" name="e2e_data_summary_table_displays_datasets_by_topological_sort_of_join_keys">
      <skipped message="Reason: chromium ('test-shinytest2-data_summary.R:38:3')"/>
    </testcase>
    <testcase time="0.0120000000000005" classname="shinytest2_data_summary" name="e2e_data_summary_table_is_displayed_with_3_columns_for_data_with_join_keys">
      <skipped message="Reason: chromium ('test-shinytest2-data_summary.R:61:3')"/>
    </testcase>
    <testcase time="0.0129999999999981" classname="shinytest2_data_summary" name="e2e_data_summary_table_does_not_list_unsupported_objects">
      <skipped message="Reason: chromium ('test-shinytest2-data_summary.R:92:5')"/>
    </testcase>
    <testcase time="0.0120000000000005" classname="shinytest2_data_summary" name="e2e_data_summary_table_displays_datasets_by_names_order_if_no_join_keys">
      <skipped message="Reason: chromium ('test-shinytest2-data_summary.R:135:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="shinytest2-decorators" timestamp="2025-07-01T10:46:18Z" hostname="2ecc0feba4c8" tests="2" skipped="2" failures="0" errors="0" time="0.041">
    <testcase time="0.0279999999999987" classname="shinytest2_decorators" name="e2e_module_with_decorator_UI_and_output_is_modified_interactively_upon_changes_in_decorator">
      <skipped message="Reason: chromium ('test-shinytest2-decorators.R:5:3')"/>
    </testcase>
    <testcase time="0.0130000000000052" classname="shinytest2_decorators" name="e2e_module_with_decorator_where_server_fails_shows_shiny_error_message">
      <skipped message="Reason: chromium ('test-shinytest2-decorators.R:76:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="shinytest2-filter_panel" timestamp="2025-07-01T10:46:18Z" hostname="2ecc0feba4c8" tests="3" skipped="3" failures="0" errors="0" time="0.041">
    <testcase time="0.0159999999999982" classname="shinytest2_filter_panel" name="e2e_module_content_is_updated_when_data_is_filtered_in_filter_panel">
      <skipped message="Reason: chromium ('test-shinytest2-filter_panel.R:5:3')"/>
    </testcase>
    <testcase time="0.0120000000000005" classname="shinytest2_filter_panel" name="e2e_filtering_a_module_specific_filter_is_reflected_in_other_shared_module">
      <skipped message="Reason: chromium ('test-shinytest2-filter_panel.R:33:3')"/>
    </testcase>
    <testcase time="0.0129999999999981" classname="shinytest2_filter_panel" name="e2e_filtering_a_module_specific_filter_is_not_refected_in_other_unshared_modules">
      <skipped message="Reason: chromium ('test-shinytest2-filter_panel.R:73:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="shinytest2-init" timestamp="2025-07-01T10:46:18Z" hostname="2ecc0feba4c8" tests="3" skipped="3" failures="0" errors="0" time="0.04">
    <testcase time="0.0159999999999982" classname="shinytest2_init" name="e2e_teal_app_initializes_with_no_errors">
      <skipped message="Reason: chromium ('test-shinytest2-init.R:5:3')"/>
    </testcase>
    <testcase time="0.0120000000000005" classname="shinytest2_init" name="e2e_teal_app_initializes_with_sessionInfo_modal">
      <skipped message="Reason: chromium ('test-shinytest2-init.R:16:3')"/>
    </testcase>
    <testcase time="0.0120000000000005" classname="shinytest2_init" name="e2e_init_creates_UI_containing_specified_title_favicon_header_and_footer">
      <skipped message="Reason: chromium ('test-shinytest2-init.R:72:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="shinytest2-landing_popup" timestamp="2025-07-01T10:46:18Z" hostname="2ecc0feba4c8" tests="5" skipped="5" failures="0" errors="0" time="0.066">
    <testcase time="0.0150000000000006" classname="shinytest2_landing_popup" name="e2e_teal_app_with_landing_popup_module_initializes_with_no_errors">
      <skipped message="Reason: chromium ('test-shinytest2-landing_popup.R:5:3')"/>
    </testcase>
    <testcase time="0.0129999999999981" classname="shinytest2_landing_popup" name="e2e_app_with_default_landing_popup_module_creates_modal_containing_a_button">
      <skipped message="Reason: chromium ('test-shinytest2-landing_popup.R:26:3')"/>
    </testcase>
    <testcase time="0.0120000000000005" classname="shinytest2_landing_popup" name="e2e_when_default_landing_popup_module_is_closed_it_shows_the_underlying_teal_app">
      <skipped message="Reason: chromium ('test-shinytest2-landing_popup.R:45:3')"/>
    </testcase>
    <testcase time="0.0129999999999981" classname="shinytest2_landing_popup" name="e2e_app_with_customized_landing_popup_module_creates_modal_containing_specified_title_content_and_buttons">
      <skipped message="Reason: chromium ('test-shinytest2-landing_popup.R:70:5')"/>
    </testcase>
    <testcase time="0.0129999999999981" classname="shinytest2_landing_popup" name="e2e_when_customized_button_in_landing_popup_module_is_clicked_it_redirects_to_a_certain_page">
      <skipped message="Reason: chromium ('test-shinytest2-landing_popup.R:137:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="shinytest2-module_bookmark_manager" timestamp="2025-07-01T10:46:18Z" hostname="2ecc0feba4c8" tests="4" skipped="4" failures="0" errors="0" time="0.054">
    <testcase time="0.0160000000000053" classname="shinytest2_module_bookmark_manager" name="bookmark_manager_button_is_not_rendered_by_default">
      <skipped message="Reason: chromium ('test-shinytest2-module_bookmark_manager.R:5:3')"/>
    </testcase>
    <testcase time="0.0129999999999981" classname="shinytest2_module_bookmark_manager" name="bookmark_manager_button_is_not_rendered_when_enableBookmarking_url_">
      <skipped message="Reason: chromium ('test-shinytest2-module_bookmark_manager.R:20:3')"/>
    </testcase>
    <testcase time="0.0120000000000005" classname="shinytest2_module_bookmark_manager" name="bookmark_manager_button_is_rendered_when_enableBookmarking_server_">
      <skipped message="Reason: chromium ('test-shinytest2-module_bookmark_manager.R:35:3')"/>
    </testcase>
    <testcase time="0.0129999999999981" classname="shinytest2_module_bookmark_manager" name="bookmark_manager_button_shows_modal_with_url_containing_state_id_when_clicked">
      <skipped message="Reason: chromium ('test-shinytest2-module_bookmark_manager.R:47:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="shinytest2-modules" timestamp="2025-07-01T10:46:19Z" hostname="2ecc0feba4c8" tests="4" skipped="4" failures="0" errors="0" time="0.056">
    <testcase time="0.0159999999999982" classname="shinytest2_modules" name="e2e_the_module_server_logic_is_only_triggered_when_the_teal_module_becomes_active">
      <skipped message="Reason: chromium ('test-shinytest2-modules.R:5:3')"/>
    </testcase>
    <testcase time="0.0140000000000029" classname="shinytest2_modules" name="e2e_filter_panel_only_shows_the_data_supplied_using_datanames">
      <skipped message="Reason: chromium ('test-shinytest2-modules.R:45:3')"/>
    </testcase>
    <testcase time="0.0129999999999981" classname="shinytest2_modules" name="e2e_filter_panel_shows_all_the_datasets_when_datanames_is_all">
      <skipped message="Reason: chromium ('test-shinytest2-modules.R:62:3')"/>
    </testcase>
    <testcase time="0.0129999999999981" classname="shinytest2_modules" name="e2e_all_the_nested_teal_modules_are_initiated_as_expected">
      <skipped message="Reason: chromium ('test-shinytest2-modules.R:80:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="shinytest2-reporter" timestamp="2025-07-01T10:46:19Z" hostname="2ecc0feba4c8" tests="6" skipped="6" failures="0" errors="0" time="0.081">
    <testcase time="0.017000000000003" classname="shinytest2_reporter" name="e2e_reporter_tab_is_created_when_a_module_has_reporter_report_fun">
      <skipped message="Reason: chromium ('test-shinytest2-reporter.R:5:3')"/>
    </testcase>
    <testcase time="0.0120000000000005" classname="shinytest2_reporter" name="e2e_reporter_card_can_be_customized">
      <skipped message="Reason: TODO ('test-shinytest2-reporter.R:26:3')"/>
    </testcase>
    <testcase time="0.0129999999999981" classname="shinytest2_reporter" name="e2e_reporter_tab_is_not_created_when_a_module_has_no_reporter">
      <skipped message="Reason: chromium ('test-shinytest2-reporter.R:30:3')"/>
    </testcase>
    <testcase time="0.0129999999999981" classname="shinytest2_reporter" name="e2e_adding_a_report_card_with_global_button_adds_it_in_the_report_previewer_tab">
      <skipped message="Reason: chromium ('test-shinytest2-reporter.R:55:3')"/>
    </testcase>
    <testcase time="0.0130000000000052" classname="shinytest2_reporter" name="e2e_reporter_previewer_module_has_download_load_and_reset_buttons">
      <skipped message="Reason: chromium ('test-shinytest2-reporter.R:86:3')"/>
    </testcase>
    <testcase time="0.0129999999999981" classname="shinytest2_reporter" name="e2e_reporter_previewer_module_do_not_show_data_summary_nor_filter_panel">
      <skipped message="Reason: chromium ('test-shinytest2-reporter.R:107:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="shinytest2-show-rcode" timestamp="2025-07-01T10:46:19Z" hostname="2ecc0feba4c8" tests="1" skipped="1" failures="0" errors="0" time="0.015">
    <testcase time="0.0150000000000006" classname="shinytest2_show_rcode" name="e2e_teal_app_initializes_with_Show_R_Code_modal">
      <skipped message="Reason: chromium ('test-shinytest2-show-rcode.R:5:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="shinytest2-teal_data_module" timestamp="2025-07-01T10:46:19Z" hostname="2ecc0feba4c8" tests="6" skipped="6" failures="0" errors="0" time="0.081">
    <testcase time="0.0169999999999959" classname="shinytest2_teal_data_module" name="e2e_teal_data_module_will_have_a_delayed_load_of_datasets">
      <skipped message="Reason: chromium ('test-shinytest2-teal_data_module.R:5:3')"/>
    </testcase>
    <testcase time="0.0130000000000052" classname="shinytest2_teal_data_module" name="e2e_teal_data_module_shows_validation_errors">
      <skipped message="Reason: chromium ('test-shinytest2-teal_data_module.R:42:3')"/>
    </testcase>
    <testcase time="0.0129999999999981" classname="shinytest2_teal_data_module" name="e2e_teal_data_module_inputs_change_teal_data_object_that_is_passed_to_teal_main_UI">
      <skipped message="Reason: chromium ('test-shinytest2-teal_data_module.R:78:3')"/>
    </testcase>
    <testcase time="0.0129999999999981" classname="shinytest2_teal_data_module" name="e2e_teal_data_module_gets_removed_after_successful_data_load_when_once_TRUE">
      <skipped message="Reason: chromium ('test-shinytest2-teal_data_module.R:130:3')"/>
    </testcase>
    <testcase time="0.0120000000000005" classname="shinytest2_teal_data_module" name="e2e_teal_data_module_is_still_visible_after_successful_data_load_when_once_FALSE">
      <skipped message="Reason: chromium ('test-shinytest2-teal_data_module.R:175:3')"/>
    </testcase>
    <testcase time="0.0129999999999981" classname="shinytest2_teal_data_module" name="e2e_teal_data_module_will_make_other_tabs_inactive_before_successful_data_load">
      <skipped message="Reason: chromium ('test-shinytest2-teal_data_module.R:215:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="shinytest2-teal_slices" timestamp="2025-07-01T10:46:19Z" hostname="2ecc0feba4c8" tests="2" skipped="2" failures="0" errors="0" time="0.029">
    <testcase time="0.017000000000003" classname="shinytest2_teal_slices" name="e2e_teal_slices_filters_are_initialized_when_global_filters_are_created">
      <skipped message="Reason: chromium ('test-shinytest2-teal_slices.R:5:3')"/>
    </testcase>
    <testcase time="0.0120000000000005" classname="shinytest2_teal_slices" name="e2e_teal_slices_filters_are_initialized_when_module_specific_filters_are_created">
      <skipped message="Reason: chromium ('test-shinytest2-teal_slices.R:49:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="shinytest2-wunder_bar" timestamp="2025-07-01T10:46:19Z" hostname="2ecc0feba4c8" tests="2" skipped="2" failures="0" errors="0" time="0.029">
    <testcase time="0.0159999999999982" classname="shinytest2_wunder_bar" name="wunder_bar_srv_clicking_filter_icon_opens_filter_manager_modal">
      <skipped message="Reason: chromium ('test-shinytest2-wunder_bar.R:5:3')"/>
    </testcase>
    <testcase time="0.0129999999999981" classname="shinytest2_wunder_bar" name="wunder_bar_srv_clicking_snapshot_icon_opens_snapshot_manager_modal">
      <skipped message="Reason: chromium ('test-shinytest2-wunder_bar.R:25:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="teal_data_module-eval_code" timestamp="2025-07-01T10:46:19Z" hostname="2ecc0feba4c8" tests="16" skipped="0" failures="0" errors="0" time="0.198">
    <testcase time="0.0160000000000053" classname="teal_data_module_eval_code" name="within.teal_data_module_returns_an_object_with_teal_data_module_class"/>
    <testcase time="0.00399999999999778" classname="teal_data_module_eval_code" name="eval_code.teal_data_module_ui_has_modified_namespace_for_id"/>
    <testcase time="0.00200000000000244" classname="teal_data_module_eval_code" name="eval_code.teal_data_module_ui_has_modified_namespace_for_id"/>
    <testcase time="0.000999999999997669" classname="teal_data_module_eval_code" name="eval_code.teal_data_module_ui_has_modified_namespace_for_id"/>
    <testcase time="0.0349999999999966" classname="teal_data_module_eval_code" name="within.teal_data_module_modifies_the_reactive_tea_data_object"/>
    <testcase time="0.00200000000000244" classname="teal_data_module_eval_code" name="within.teal_data_module_modifies_the_reactive_tea_data_object"/>
    <testcase time="0.0420000000000016" classname="teal_data_module_eval_code" name="eval_code.teal_data_module_will_execute_several_times_until_error"/>
    <testcase time="0.00999999999999801" classname="teal_data_module_eval_code" name="eval_code.teal_data_module_will_execute_several_times_until_error"/>
    <testcase time="0.00100000000000477" classname="teal_data_module_eval_code" name="eval_code.teal_data_module_will_execute_several_times_until_error"/>
    <testcase time="0.0159999999999982" classname="teal_data_module_eval_code" name="eval_code.teal_data_module_throws_error_when_original_teal_data_module_result_is_not_reactive"/>
    <testcase time="0.0379999999999967" classname="teal_data_module_eval_code" name="eval_code.teal_data_module_propagates_qenv_error_from_the_original_first_call"/>
    <testcase time="0.00200000000000244" classname="teal_data_module_eval_code" name="eval_code.teal_data_module_propagates_qenv_error_from_the_original_first_call"/>
    <testcase time="0.0129999999999981" classname="teal_data_module_eval_code" name="eval_code.teal_data_module_handles_an_arbitrary_object_other_than_teal_data_or_qenv.error_"/>
    <testcase time="0.000999999999997669" classname="teal_data_module_eval_code" name="eval_code.teal_data_module_handles_an_arbitrary_object_other_than_teal_data_or_qenv.error_"/>
    <testcase time="0.0140000000000029" classname="teal_data_module_eval_code" name="eval_code.teal_data_module_handles_a_NULL_result"/>
    <testcase time="0.00100000000000477" classname="teal_data_module_eval_code" name="eval_code.teal_data_module_handles_a_NULL_result"/>
  </testsuite>
  <testsuite name="teal_data_module" timestamp="2025-07-01T10:46:19Z" hostname="2ecc0feba4c8" tests="4" skipped="0" failures="0" errors="0" time="0.026">
    <testcase time="0.0069999999999979" classname="teal_data_module" name="teal_data_module_returns_teal_data_module"/>
    <testcase time="0.0069999999999979" classname="teal_data_module" name="teal_data_module_throws_when_ui_has_other_formals_than_id_only"/>
    <testcase time="0.007000000000005" classname="teal_data_module" name="teal_data_module_throws_when_server_has_other_formals_than_id_only"/>
    <testcase time="0.00499999999999545" classname="teal_data_module" name="teal_data_module_throws_when_server_has_other_formals_than_id_only"/>
  </testsuite>
  <testsuite name="teal_reporter" timestamp="2025-07-01T10:46:19Z" hostname="2ecc0feba4c8" tests="25" skipped="0" failures="0" errors="0" time="0.138">
    <testcase time="0.0110000000000028" classname="teal_reporter" name="TealReportCard_object_can_be_initialized"/>
    <testcase time="0.00499999999999545" classname="teal_reporter" name="TealReportCard_inherits_from_ReportCard"/>
    <testcase time="0.00500000000000256" classname="teal_reporter" name="TealReportCard_new_returns_an_object_of_type_TealReportCard"/>
    <testcase time="0.0110000000000028" classname="teal_reporter" name="TealReportCard_get_content_returns_content_with_metadata"/>
    <testcase time="0.000999999999997669" classname="teal_reporter" name="TealReportCard_get_content_returns_content_with_metadata"/>
    <testcase time="0.00200000000000244" classname="teal_reporter" name="TealReportCard_get_content_returns_content_with_metadata"/>
    <testcase time="0.000999999999997669" classname="teal_reporter" name="TealReportCard_get_content_returns_content_with_metadata"/>
    <testcase time="0.000999999999997669" classname="teal_reporter" name="TealReportCard_get_content_returns_content_with_metadata"/>
    <testcase time="0.00500000000000256" classname="teal_reporter" name="TealReportCard_append_src_accepts_a_character"/>
    <testcase time="0.00399999999999778" classname="teal_reporter" name="TealReportCard_append_src_returns_self"/>
    <testcase time="0.00400000000000489" classname="teal_reporter" name="TealReportCard_append_src_returns_title_and_content"/>
    <testcase time="0.00499999999999545" classname="teal_reporter" name="TealReportCard_append_encodings_accepts_list_of_character"/>
    <testcase time="0.00400000000000489" classname="teal_reporter" name="TealReportCard_append_encodings_returns_self"/>
    <testcase time="0.00399999999999778" classname="teal_reporter" name="TealReportCard_append_encodings_returns_title_and_content"/>
    <testcase time="0.00200000000000244" classname="teal_reporter" name="TealReportCard_append_encodings_returns_title_and_content"/>
    <testcase time="0.00799999999999557" classname="teal_reporter" name="TealReportCard_append_fs_accepts_only_a_teal_slices"/>
    <testcase time="0.00800000000000267" classname="teal_reporter" name="TealReportCard_append_fs_accepts_only_a_teal_slices"/>
    <testcase time="0.00900000000000034" classname="teal_reporter" name="TealReportCard_append_fs_returns_self"/>
    <testcase time="0.00799999999999557" classname="teal_reporter" name="TealReportCard_append_fs_returns_title_and_content"/>
    <testcase time="0.00300000000000011" classname="teal_reporter" name="TealReportCard_append_fs_returns_title_and_content"/>
    <testcase time="0.00600000000000023" classname="teal_reporter" name="TealSlicesBlock_new_accepts_teal_slices_only"/>
    <testcase time="0.00500000000000256" classname="teal_reporter" name="TealSlicesBlock_new_accepts_teal_slices_only"/>
    <testcase time="0.00900000000000034" classname="teal_reporter" name="TealSlicesBlock_get_content_returns_yaml_character"/>
    <testcase time="0.00800000000000267" classname="teal_reporter" name="TealSlicesBlock_to_list_returns_list_containing_teal_slices"/>
    <testcase time="0.00900000000000034" classname="teal_reporter" name="TealSlicesBlock_from_list_retains_states_from_a_list"/>
  </testsuite>
  <testsuite name="teal_slices-store" timestamp="2025-07-01T10:46:19Z" hostname="2ecc0feba4c8" tests="15" skipped="0" failures="0" errors="0" time="0.156">
    <testcase time="0.0379999999999967" classname="teal_slices_store" name="teal_slice_store_restore_supports_NULL_and_character_0_for_choices_and_selected"/>
    <testcase time="0.00399999999999778" classname="teal_slices_store" name="teal_slice_store_restore_supports_NULL_and_character_0_for_choices_and_selected"/>
    <testcase time="0.00400000000000489" classname="teal_slices_store" name="teal_slice_store_restore_supports_NULL_and_character_0_for_choices_and_selected"/>
    <testcase time="0.0150000000000006" classname="teal_slices_store" name="teal_slice_store_restore_supports_saving_POSIXct_timestamps_in_selected"/>
    <testcase time="0.00399999999999778" classname="teal_slices_store" name="teal_slice_store_restore_supports_saving_POSIXct_timestamps_in_selected"/>
    <testcase time="0.0139999999999958" classname="teal_slices_store" name="teal_slice_store_restore_supports_saving_Date_dates_in_selected"/>
    <testcase time="0.00400000000000489" classname="teal_slices_store" name="teal_slice_store_restore_supports_saving_Date_dates_in_selected"/>
    <testcase time="0.0139999999999958" classname="teal_slices_store" name="teal_slice_store_restore_supports_saving_POSIXct_timestamps_in_choices"/>
    <testcase time="0.00400000000000489" classname="teal_slices_store" name="teal_slice_store_restore_supports_saving_POSIXct_timestamps_in_choices"/>
    <testcase time="0.0139999999999958" classname="teal_slices_store" name="teal_slice_store_restore_supports_saving_Date_timestamps_in_choices"/>
    <testcase time="0.00500000000000256" classname="teal_slices_store" name="teal_slice_store_restore_supports_saving_Date_timestamps_in_choices"/>
    <testcase time="0.0150000000000006" classname="teal_slices_store" name="teal_slice_store_restore_restores_mixed_Date_characters_as_characters_in_selected"/>
    <testcase time="0.0150000000000006" classname="teal_slices_store" name="teal_slice_store_restore_restores_characters_as_characters_in_selected_and_choices"/>
    <testcase time="0.00199999999999534" classname="teal_slices_store" name="teal_slice_store_restore_restores_characters_as_characters_in_selected_and_choices"/>
    <testcase time="0.00400000000000489" classname="teal_slices_store" name="teal_slice_store_restore_restores_characters_as_characters_in_selected_and_choices"/>
  </testsuite>
  <testsuite name="teal_slices" timestamp="2025-07-01T10:46:19Z" hostname="2ecc0feba4c8" tests="18" skipped="0" failures="0" errors="0" time="0.129">
    <testcase time="0.00799999999999557" classname="teal_slices" name="teal_slices_produces_teal_slices_object_with_teal_specific_attributes"/>
    <testcase time="0.00100000000000477" classname="teal_slices" name="teal_slices_produces_teal_slices_object_with_teal_specific_attributes"/>
    <testcase time="0.00300000000000011" classname="teal_slices" name="teal_slices_produces_teal_slices_object_with_teal_specific_attributes"/>
    <testcase time="0.000999999999997669" classname="teal_slices" name="teal_slices_produces_teal_slices_object_with_teal_specific_attributes"/>
    <testcase time="0.0069999999999979" classname="teal_slices" name="teal_slices_fails_when_inexisting_teal_slice_id_is_specified_in_mapping"/>
    <testcase time="0.0100000000000051" classname="teal_slices" name="teal_slices_fails_when_inexisting_teal_slice_id_is_specified_in_mapping"/>
    <testcase time="0.00899999999999324" classname="teal_slices" name="teal_slices_processes_filter_mapping"/>
    <testcase time="0.00800000000000267" classname="teal_slices" name="teal_slices_processes_filter_mapping"/>
    <testcase time="0.0140000000000029" classname="teal_slices" name="teal_slices_drops_non_global_filters_if_module_specific_FALSE"/>
    <testcase time="0.00799999999999557" classname="teal_slices" name="teal_slices_drops_non_global_filters_if_module_specific_FALSE"/>
    <testcase time="0.0150000000000006" classname="teal_slices" name="deep_copy_filters_copies_teal_slice_changes_pointer_of_teal_slice_object_but_values_remain_the_same"/>
    <testcase time="0.00400000000000489" classname="teal_slices" name="deep_copy_filters_copies_teal_slice_changes_pointer_of_teal_slice_object_but_values_remain_the_same"/>
    <testcase time="0.0069999999999979" classname="teal_slices" name="teal_slices_mapping_should_be_an_empty_list_or_a_named_list_or_missing"/>
    <testcase time="0.00499999999999545" classname="teal_slices" name="teal_slices_mapping_should_be_an_empty_list_or_a_named_list_or_missing"/>
    <testcase time="0.00400000000000489" classname="teal_slices" name="teal_slices_mapping_should_be_an_empty_list_or_a_named_list_or_missing"/>
    <testcase time="0.00799999999999557" classname="teal_slices" name="teal_slices_mapping_should_be_an_empty_list_or_a_named_list_or_missing"/>
    <testcase time="0.00900000000000034" classname="teal_slices" name="teal_slices_mapping_should_be_an_empty_list_or_a_named_list_or_missing"/>
    <testcase time="0.00800000000000267" classname="teal_slices" name="teal_slices_mapping_should_be_an_empty_list_or_a_named_list_or_missing"/>
  </testsuite>
  <testsuite name="teal_transform_module" timestamp="2025-07-01T10:46:19Z" hostname="2ecc0feba4c8" tests="3" skipped="0" failures="0" errors="0" time="0.246">
    <testcase time="0.0750000000000028" classname="teal_transform_module" name="expression"/>
    <testcase time="0.0739999999999981" classname="teal_transform_module" name="quote"/>
    <testcase time="0.0970000000000013" classname="teal_transform_module" name="ui_transform_teal_data_and_srv_transform_teal_data_have_the_same_namespace_for_transform_module"/>
  </testsuite>
  <testsuite name="utils" timestamp="2025-07-01T10:46:20Z" hostname="2ecc0feba4c8" tests="33" skipped="0" failures="0" errors="0" time="0.385">
    <testcase time="0.0700000000000003" classname="utils" name="get_teal_bs_theme"/>
    <testcase time="0.029999999999994" classname="utils" name="get_teal_bs_theme"/>
    <testcase time="0.0410000000000039" classname="utils" name="get_teal_bs_theme"/>
    <testcase time="0.0289999999999964" classname="utils" name="get_teal_bs_theme"/>
    <testcase time="0.0230000000000032" classname="utils" name="report_card_template_function_returns_TealReportCard_object_with_appropriate_content_and_labels"/>
    <testcase time="0.00200000000000244" classname="utils" name="report_card_template_function_returns_TealReportCard_object_with_appropriate_content_and_labels"/>
    <testcase time="0.000999999999997669" classname="utils" name="report_card_template_function_returns_TealReportCard_object_with_appropriate_content_and_labels"/>
    <testcase time="0.00200000000000244" classname="utils" name="report_card_template_function_returns_TealReportCard_object_with_appropriate_content_and_labels"/>
    <testcase time="0.000999999999997669" classname="utils" name="report_card_template_function_returns_TealReportCard_object_with_appropriate_content_and_labels"/>
    <testcase time="0.000999999999997669" classname="utils" name="report_card_template_function_returns_TealReportCard_object_with_appropriate_content_and_labels"/>
    <testcase time="0.0260000000000034" classname="utils" name="teal_data_to_filtered_data_return_FilteredData_class"/>
    <testcase time="0.00499999999999545" classname="utils" name="validate_app_title_tag_works_on_validating_the_title_tag"/>
    <testcase time="0.00500000000000256" classname="utils" name="validate_app_title_tag_works_on_validating_the_title_tag"/>
    <testcase time="0.00500000000000256" classname="utils" name="validate_app_title_tag_works_on_validating_the_title_tag"/>
    <testcase time="0.00499999999999545" classname="utils" name="validate_app_title_tag_works_on_validating_the_title_tag"/>
    <testcase time="0.00400000000000489" classname="utils" name="validate_app_title_tag_works_on_validating_the_title_tag"/>
    <testcase time="0.0439999999999969" classname="utils" name="build_app_title_builts_a_valid_tag"/>
    <testcase time="0.00300000000000011" classname="utils" name="build_app_title_builts_a_valid_tag"/>
    <testcase time="0.00200000000000244" classname="utils" name="build_app_title_builts_a_valid_tag"/>
    <testcase time="0.00900000000000034" classname="utils" name="create_app_id_data_accepts_teal_data_or_teal_data_module"/>
    <testcase time="0.00199999999999534" classname="utils" name="create_app_id_data_accepts_teal_data_or_teal_data_module"/>
    <testcase time="0.00500000000000256" classname="utils" name="create_app_id_data_accepts_teal_data_or_teal_data_module"/>
    <testcase time="0.00800000000000267" classname="utils" name="create_app_id_modules_accepts_modules"/>
    <testcase time="0.00799999999999557" classname="utils" name="create_app_id_modules_accepts_modules"/>
    <testcase time="0.00800000000000267" classname="utils" name="create_app_id_returns_a_character_string"/>
    <testcase time="0.0159999999999982" classname="utils" name="create_app_id_returns_different_hash_for_different_data"/>
    <testcase time="0.0159999999999982" classname="utils" name="create_app_id_returns_different_hash_for_different_modules"/>
    <testcase time="0.00400000000000489" classname="utils" name="defunction_returns_a_string_when_passed_a_function"/>
    <testcase time="0.00399999999999778" classname="utils" name="defunction_returns_non_function_atomic_as_is"/>
    <testcase time="0.000999999999997669" classname="utils" name="defunction_returns_non_function_atomic_as_is"/>
    <testcase time="0.00100000000000477" classname="utils" name="defunction_returns_non_function_atomic_as_is"/>
    <testcase time="0.000999999999997669" classname="utils" name="defunction_returns_non_function_atomic_as_is"/>
    <testcase time="0.00300000000000011" classname="utils" name="defunction_recursively_goes_down_a_list"/>
  </testsuite>
  <testsuite name="validate_has_data" timestamp="2025-07-01T10:46:20Z" hostname="2ecc0feba4c8" tests="17" skipped="0" failures="0" errors="0" time="0.091">
    <testcase time="0.007000000000005" classname="validate_has_data" name="validate_has_data_throws_no_error_when_data_has_at_least_as_many_rows_as_min_nrow"/>
    <testcase time="0.00199999999999534" classname="validate_has_data" name="validate_has_data_throws_no_error_when_data_has_at_least_as_many_rows_as_min_nrow"/>
    <testcase time="0.007000000000005" classname="validate_has_data" name="validate_has_data_throws_error_when_min_nrow_rows_of_data"/>
    <testcase time="0.00399999999999778" classname="validate_has_data" name="validate_has_data_accepts_logical_complete_argument"/>
    <testcase time="0.00200000000000244" classname="validate_has_data" name="validate_has_data_accepts_logical_complete_argument"/>
    <testcase time="0.0069999999999979" classname="validate_has_data" name="validate_has_data_throws_error_when_data_has_NA_and_complete_is_set_to_TRUE"/>
    <testcase time="0.00399999999999778" classname="validate_has_data" name="validate_has_data_accepts_logical_allow_inf_argument"/>
    <testcase time="0.00399999999999778" classname="validate_has_data" name="validate_has_data_accepts_logical_allow_inf_argument"/>
    <testcase time="0.007000000000005" classname="validate_has_data" name="validate_has_data_accepts_throws_error_when_data_has_Inf_values_and_allow_inf_is_set_to_FALSE"/>
    <testcase time="0.0069999999999979" classname="validate_has_data" name="validate_has_data_accepts_throws_error_when_data_has_Inf_values_and_allow_inf_is_set_to_FALSE"/>
    <testcase time="0.00600000000000023" classname="validate_has_data" name="validate_has_data_accepts_throws_error_when_data_has_Inf_values_and_allow_inf_is_set_to_FALSE"/>
    <testcase time="0.00399999999999778" classname="validate_has_data" name="validate_has_data_allow_inf_argument_ignores_non_numeric_columns"/>
    <testcase time="0.00500000000000256" classname="validate_has_data" name="validate_has_data_allow_inf_argument_ignores_non_numeric_columns"/>
    <testcase time="0.0069999999999979" classname="validate_has_data" name="validate_has_data_returns_message_when_msg_argument_is_set"/>
    <testcase time="0.007000000000005" classname="validate_has_data" name="validate_has_data_returns_message_msg_argument_is_set_and_complete_is_set_to_TRUE"/>
    <testcase time="0.00599999999999312" classname="validate_has_data" name="validate_has_data_returns_throws_error_with_non_character_msg_input"/>
    <testcase time="0.00500000000000256" classname="validate_has_data" name="validate_has_data_returns_throws_error_with_non_character_msg_input"/>
  </testsuite>
  <testsuite name="validate_inputs" timestamp="2025-07-01T10:46:20Z" hostname="2ecc0feba4c8" tests="36" skipped="0" failures="0" errors="0" time="0.542">
    <testcase time="0.0110000000000028" classname="validate_inputs" name="invalid_arguments_raise_errors"/>
    <testcase time="0.00399999999999778" classname="validate_inputs" name="invalid_arguments_raise_errors"/>
    <testcase time="0.0210000000000008" classname="validate_inputs" name="disabled_validators_raise_warnings_individual_validators_"/>
    <testcase time="0.0180000000000007" classname="validate_inputs" name="disabled_validators_raise_warnings_validator_list_"/>
    <testcase time="0.0169999999999959" classname="validate_inputs" name="disabled_validators_raise_warnings_nested_validator_list_"/>
    <testcase time="0.0740000000000052" classname="validate_inputs" name="valid_inputs_produce_desired_output_individual_validators_"/>
    <testcase time="0.0219999999999985" classname="validate_inputs" name="valid_inputs_produce_desired_output_validator_list_"/>
    <testcase time="0.019999999999996" classname="validate_inputs" name="valid_inputs_produce_desired_output_nested_validator_list_"/>
    <testcase time="0.027000000000001" classname="validate_inputs" name="invalid_inputs_raise_errors_in_output_individual_validators_"/>
    <testcase time="0.0240000000000009" classname="validate_inputs" name="invalid_inputs_raise_errors_in_output_individual_validators_"/>
    <testcase time="0.0240000000000009" classname="validate_inputs" name="invalid_inputs_raise_errors_in_output_individual_validators_"/>
    <testcase time="0.0279999999999987" classname="validate_inputs" name="invalid_inputs_raise_errors_in_output_validator_list_"/>
    <testcase time="0.0240000000000009" classname="validate_inputs" name="invalid_inputs_raise_errors_in_output_validator_list_"/>
    <testcase time="0.0249999999999986" classname="validate_inputs" name="invalid_inputs_raise_errors_in_output_validator_list_"/>
    <testcase time="0.027000000000001" classname="validate_inputs" name="invalid_inputs_raise_errors_in_output_nested_validator_list_"/>
    <testcase time="0.0240000000000009" classname="validate_inputs" name="invalid_inputs_raise_errors_in_output_nested_validator_list_"/>
    <testcase time="0.036999999999999" classname="validate_inputs" name="invalid_inputs_raise_errors_in_output_nested_validator_list_"/>
    <testcase time="0.0279999999999987" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.007000000000005" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.0069999999999979" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.0069999999999979" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.007000000000005" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00199999999999534" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00200000000000244" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00200000000000244" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00300000000000011" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00199999999999534" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00200000000000244" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00199999999999534" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00200000000000244" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00300000000000011" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00200000000000244" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00199999999999534" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.027000000000001" classname="validate_inputs" name="different_validation_modes_produce_proper_messages"/>
    <testcase time="0.00400000000000489" classname="validate_inputs" name="different_validation_modes_produce_proper_messages"/>
    <testcase time="0.00399999999999778" classname="validate_inputs" name="different_validation_modes_produce_proper_messages"/>
  </testsuite>
</testsuites>
